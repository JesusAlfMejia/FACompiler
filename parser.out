Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo
Rule 2     F -> FUNCION F
Rule 3     F -> empty
Rule 4     VARS -> borrarListaVar VAR V1
Rule 5     V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3
Rule 6     V2 -> COMMA VARIABLE agregarVarLista V2
Rule 7     V2 -> empty
Rule 8     V3 -> borrarListaVar V1
Rule 9     V3 -> empty
Rule 10    FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO
Rule 11    V4 -> VARS
Rule 12    V4 -> empty
Rule 13    PARAMS -> TIPO NAME agregarVarLista P1
Rule 14    P1 -> P2
Rule 15    P1 -> empty
Rule 16    P2 -> COMMA PARAMS P1
Rule 17    CUERPO -> LBRACKET E RBRACKET
Rule 18    E -> E1
Rule 19    E -> empty
Rule 20    E1 -> ESTATUTO
Rule 21    E1 -> ESTATUTO E1
Rule 22    TIPO -> INT
Rule 23    TIPO -> FLOAT
Rule 24    TIPO -> CHAR
Rule 25    TIPO_FUNCION -> INT
Rule 26    TIPO_FUNCION -> FLOAT
Rule 27    TIPO_FUNCION -> CHAR
Rule 28    TIPO_FUNCION -> VOID
Rule 29    PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO
Rule 30    VARIABLE -> NAME E2
Rule 31    E2 -> LSBRACKET EXP RSBRACKET
Rule 32    E2 -> empty
Rule 33    ESTATUTO -> ASIGNACION
Rule 34    ESTATUTO -> LLAMADA
Rule 35    ESTATUTO -> RETORNO
Rule 36    ESTATUTO -> LECTURA
Rule 37    ESTATUTO -> ESCRITURA
Rule 38    ESTATUTO -> CONDICION
Rule 39    ESTATUTO -> CICLO_W
Rule 40    ESTATUTO -> CICLO_F
Rule 41    ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
Rule 42    LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON
Rule 43    E1 -> EXP
Rule 44    E1 -> EXP COMMA E1
Rule 45    LLAMADAF -> NAME LPAREN E1 RPAREN
Rule 46    RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON
Rule 47    LECTURA -> READ LPAREN V3 RPAREN SEMICOLON
Rule 48    V3 -> VARIABLE popRead COMMA V3
Rule 49    V3 -> VARIABLE popRead
Rule 50    ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON
Rule 51    E3 -> S_EXP popPrint
Rule 52    E3 -> S_EXP popPrint COMMA E3
Rule 53    CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
Rule 54    ELSE1 -> ELSE gotoElse CUERPO
Rule 55    ELSE1 -> empty
Rule 56    CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
Rule 57    CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
Rule 58    H_EXP -> T_EXP
Rule 59    H_EXP -> T_EXP OR H_EXP
Rule 60    T_EXP -> G_EXP
Rule 61    T_EXP -> G_EXP AND T_EXP
Rule 62    G_EXP -> EXP B popBool
Rule 63    B -> GREATER_OR_EQUAL meterOperador G_EXP
Rule 64    B -> LESS_OR_EQUAL meterOperador G_EXP
Rule 65    B -> GREATER_THAN meterOperador G_EXP
Rule 66    B -> LESS_THAN meterOperador G_EXP
Rule 67    B -> IS_EQUAL meterOperador G_EXP
Rule 68    B -> NOT_EQUAL meterOperador G_EXP
Rule 69    B -> empty
Rule 70    S_EXP -> C_STRING agregarConstString
Rule 71    S_EXP -> EXP
Rule 72    EXP -> TERMINO popSumaResta T
Rule 73    T -> PLUS meterOperador EXP
Rule 74    T -> MINUS meterOperador EXP
Rule 75    T -> empty
Rule 76    TERMINO -> FACTOR popMultDiv F2
Rule 77    F2 -> DIVIDE meterOperador TERMINO
Rule 78    F2 -> MULTIPLY meterOperador TERMINO
Rule 79    F2 -> empty
Rule 80    FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
Rule 81    FACTOR -> C_INT agregarConstInt
Rule 82    FACTOR -> C_FLOAT agregarConstFloat
Rule 83    FACTOR -> C_CHAR agregarConstChar
Rule 84    FACTOR -> VARIABLE agregarPilaOp
Rule 85    FACTOR -> LLAMADAF
Rule 86    empty -> <empty>
Rule 87    agregarFrom -> <empty>
Rule 88    crearCompFrom -> <empty>
Rule 89    sumarFrom -> <empty>
Rule 90    agregarConstInt -> <empty>
Rule 91    agregarConstFloat -> <empty>
Rule 92    agregarConstChar -> <empty>
Rule 93    agregarConstString -> <empty>
Rule 94    scopeGlobal -> <empty>
Rule 95    scopeLocal -> <empty>
Rule 96    scopeTemp -> <empty>
Rule 97    scopeConst -> <empty>
Rule 98    gotoIf -> <empty>
Rule 99    terminarGoto -> <empty>
Rule 100   agregarWhile -> <empty>
Rule 101   terminarWhile -> <empty>
Rule 102   gotoElse -> <empty>
Rule 103   meterFondoFalso -> <empty>
Rule 104   quitarFondoFalso -> <empty>
Rule 105   agregarPilaOp -> <empty>
Rule 106   popPrint -> <empty>
Rule 107   popRead -> <empty>
Rule 108   popReturn -> <empty>
Rule 109   popBool -> <empty>
Rule 110   popIgual -> <empty>
Rule 111   popMultDiv -> <empty>
Rule 112   popSumaResta -> <empty>
Rule 113   meterIgual -> <empty>
Rule 114   meterBool -> <empty>
Rule 115   meterMultDiv -> <empty>
Rule 116   meterSumaResta -> <empty>
Rule 117   meterOperador -> <empty>
Rule 118   crearFuncGlobal -> <empty>
Rule 119   crearFuncMain -> <empty>
Rule 120   agregarFunc -> <empty>
Rule 121   agregarVariables -> <empty>
Rule 122   printFunciones -> <empty>
Rule 123   printTodo -> <empty>
Rule 124   agregarVarLista -> <empty>
Rule 125   borrarListaVar -> <empty>

Terminals, with rules where they appear

AND                  : 61
CHAR                 : 24 27
COMMA                : 6 16 44 48 52
C_CHAR               : 83
C_FLOAT              : 82
C_INT                : 81
C_STRING             : 70
DIVIDE               : 77
DO                   : 56 57
ELSE                 : 54
EQUALS               : 41 57
FLOAT                : 23 26
FROM                 : 57
FUNC                 : 10
GREATER_OR_EQUAL     : 63
GREATER_THAN         : 65
IF                   : 53
INT                  : 22 25
IS_EQUAL             : 67
LBRACKET             : 17
LESS_OR_EQUAL        : 64
LESS_THAN            : 66
LPAREN               : 10 29 42 45 46 47 50 53 56 80
LSBRACKET            : 31
MAIN                 : 29
MINUS                : 74
MULTIPLY             : 78
NAME                 : 1 10 13 30 42 45
NOT_EQUAL            : 68
OR                   : 59
PLUS                 : 73
PRINT                : 50
PROGRAM              : 1
RBRACKET             : 17
READ                 : 47
RETURN               : 46
RPAREN               : 10 29 42 45 46 47 50 53 56 80
RSBRACKET            : 31
SEMICOLON            : 1 5 41 42 46 47 50
THEN                 : 53
TO                   : 57
VAR                  : 4
VOID                 : 28
WHILE                : 56
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 33
B                    : 62
CICLO_F              : 40
CICLO_W              : 39
CONDICION            : 38
CUERPO               : 10 29 53 54 56 57
E                    : 17
E1                   : 18 21 42 44 45
E2                   : 30
E3                   : 50 52
ELSE1                : 53
ESCRITURA            : 37
ESTATUTO             : 20 21
EXP                  : 31 41 43 44 46 57 57 62 71 73 74
F                    : 1 2
F2                   : 76
FACTOR               : 76
FUNCION              : 2
G_EXP                : 60 61 63 64 65 66 67 68
H_EXP                : 53 56 59 80
LECTURA              : 36
LLAMADA              : 34
LLAMADAF             : 85
P1                   : 13 16
P2                   : 14
PARAMS               : 10 16
PRINCIPAL            : 1
PROGRAMA             : 0
RETORNO              : 35
S_EXP                : 51 52
T                    : 72
TERMINO              : 72 77 78
TIPO                 : 5 13
TIPO_FUNCION         : 10
T_EXP                : 58 59 61
V1                   : 4 8
V2                   : 5 6
V3                   : 5 47 48
V4                   : 10
VARIABLE             : 5 6 41 48 49 57 84
VARS                 : 1 11
agregarConstChar     : 83
agregarConstFloat    : 82
agregarConstInt      : 81
agregarConstString   : 70
agregarFrom          : 57
agregarFunc          : 10
agregarPilaOp        : 41 57 84
agregarVarLista      : 5 6 13
agregarVariables     : 5 10
agregarWhile         : 56 57
borrarListaVar       : 4 8 10
crearCompFrom        : 57
crearFuncGlobal      : 1
crearFuncMain        : 29
empty                : 3 7 9 12 15 19 32 55 69 75 79
gotoElse             : 54
gotoIf               : 53 56 57
meterBool            : 
meterFondoFalso      : 80
meterIgual           : 
meterMultDiv         : 
meterOperador        : 41 57 63 64 65 66 67 68 73 74 77 78
meterSumaResta       : 
popBool              : 62
popIgual             : 41 57
popMultDiv           : 76
popPrint             : 51 52
popRead              : 48 49
popReturn            : 46
popSumaResta         : 72
printFunciones       : 
printTodo            : 1
quitarFondoFalso     : 80
scopeConst           : 
scopeGlobal          : 1
scopeLocal           : 10
scopeTemp            : 
sumarFrom            : 57
terminarGoto         : 53
terminarWhile        : 56 57

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo
    (118) crearFuncGlobal -> .

    PROGRAM         reduce using rule 118 (crearFuncGlobal -> .)

    PROGRAMA                       shift and go to state 1
    crearFuncGlobal                shift and go to state 2

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> crearFuncGlobal . PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo

    PROGRAM         shift and go to state 3


state 3

    (1) PROGRAMA -> crearFuncGlobal PROGRAM . NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo

    NAME            shift and go to state 4


state 4

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME . SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo

    SEMICOLON       shift and go to state 5


state 5

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON . scopeGlobal VARS F PRINCIPAL printTodo
    (94) scopeGlobal -> .

    VAR             reduce using rule 94 (scopeGlobal -> .)

    scopeGlobal                    shift and go to state 6

state 6

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal . VARS F PRINCIPAL printTodo
    (4) VARS -> . borrarListaVar VAR V1
    (125) borrarListaVar -> .

    VAR             reduce using rule 125 (borrarListaVar -> .)

    VARS                           shift and go to state 7
    borrarListaVar                 shift and go to state 8

state 7

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS . F PRINCIPAL printTodo
    (2) F -> . FUNCION F
    (3) F -> . empty
    (10) FUNCION -> . FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO
    (86) empty -> .

    FUNC            shift and go to state 12
    MAIN            reduce using rule 86 (empty -> .)

    F                              shift and go to state 9
    FUNCION                        shift and go to state 10
    empty                          shift and go to state 11

state 8

    (4) VARS -> borrarListaVar . VAR V1

    VAR             shift and go to state 13


state 9

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F . PRINCIPAL printTodo
    (29) PRINCIPAL -> . MAIN LPAREN crearFuncMain RPAREN CUERPO

    MAIN            shift and go to state 15

    PRINCIPAL                      shift and go to state 14

state 10

    (2) F -> FUNCION . F
    (2) F -> . FUNCION F
    (3) F -> . empty
    (10) FUNCION -> . FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO
    (86) empty -> .

    FUNC            shift and go to state 12
    MAIN            reduce using rule 86 (empty -> .)

    FUNCION                        shift and go to state 10
    F                              shift and go to state 16
    empty                          shift and go to state 11

state 11

    (3) F -> empty .

    MAIN            reduce using rule 3 (F -> empty .)


state 12

    (10) FUNCION -> FUNC . TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO
    (25) TIPO_FUNCION -> . INT
    (26) TIPO_FUNCION -> . FLOAT
    (27) TIPO_FUNCION -> . CHAR
    (28) TIPO_FUNCION -> . VOID

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    VOID            shift and go to state 21

    TIPO_FUNCION                   shift and go to state 17

state 13

    (4) VARS -> borrarListaVar VAR . V1
    (5) V1 -> . TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    V1                             shift and go to state 22
    TIPO                           shift and go to state 23

state 14

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL . printTodo
    (123) printTodo -> .

    $end            reduce using rule 123 (printTodo -> .)

    printTodo                      shift and go to state 27

state 15

    (29) PRINCIPAL -> MAIN . LPAREN crearFuncMain RPAREN CUERPO

    LPAREN          shift and go to state 28


state 16

    (2) F -> FUNCION F .

    MAIN            reduce using rule 2 (F -> FUNCION F .)


state 17

    (10) FUNCION -> FUNC TIPO_FUNCION . NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO

    NAME            shift and go to state 29


state 18

    (25) TIPO_FUNCION -> INT .

    NAME            reduce using rule 25 (TIPO_FUNCION -> INT .)


state 19

    (26) TIPO_FUNCION -> FLOAT .

    NAME            reduce using rule 26 (TIPO_FUNCION -> FLOAT .)


state 20

    (27) TIPO_FUNCION -> CHAR .

    NAME            reduce using rule 27 (TIPO_FUNCION -> CHAR .)


state 21

    (28) TIPO_FUNCION -> VOID .

    NAME            reduce using rule 28 (TIPO_FUNCION -> VOID .)


state 22

    (4) VARS -> borrarListaVar VAR V1 .

    FUNC            reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)
    MAIN            reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)
    LBRACKET        reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)


state 23

    (5) V1 -> TIPO . VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3
    (30) VARIABLE -> . NAME E2

    NAME            shift and go to state 31

    VARIABLE                       shift and go to state 30

state 24

    (22) TIPO -> INT .

    NAME            reduce using rule 22 (TIPO -> INT .)


state 25

    (23) TIPO -> FLOAT .

    NAME            reduce using rule 23 (TIPO -> FLOAT .)


state 26

    (24) TIPO -> CHAR .

    NAME            reduce using rule 24 (TIPO -> CHAR .)


state 27

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo .

    $end            reduce using rule 1 (PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo .)


state 28

    (29) PRINCIPAL -> MAIN LPAREN . crearFuncMain RPAREN CUERPO
    (119) crearFuncMain -> .

    RPAREN          reduce using rule 119 (crearFuncMain -> .)

    crearFuncMain                  shift and go to state 32

state 29

    (10) FUNCION -> FUNC TIPO_FUNCION NAME . agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO
    (120) agregarFunc -> .

    LPAREN          reduce using rule 120 (agregarFunc -> .)

    agregarFunc                    shift and go to state 33

state 30

    (5) V1 -> TIPO VARIABLE . agregarVarLista V2 SEMICOLON agregarVariables V3
    (124) agregarVarLista -> .

    COMMA           reduce using rule 124 (agregarVarLista -> .)
    SEMICOLON       reduce using rule 124 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 34

state 31

    (30) VARIABLE -> NAME . E2
    (31) E2 -> . LSBRACKET EXP RSBRACKET
    (32) E2 -> . empty
    (86) empty -> .

    LSBRACKET       shift and go to state 36
    COMMA           reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    EQUALS          reduce using rule 86 (empty -> .)

    E2                             shift and go to state 35
    empty                          shift and go to state 37

state 32

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain . RPAREN CUERPO

    RPAREN          shift and go to state 38


state 33

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc . LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO

    LPAREN          shift and go to state 39


state 34

    (5) V1 -> TIPO VARIABLE agregarVarLista . V2 SEMICOLON agregarVariables V3
    (6) V2 -> . COMMA VARIABLE agregarVarLista V2
    (7) V2 -> . empty
    (86) empty -> .

    COMMA           shift and go to state 41
    SEMICOLON       reduce using rule 86 (empty -> .)

    V2                             shift and go to state 40
    empty                          shift and go to state 42

state 35

    (30) VARIABLE -> NAME E2 .

    COMMA           reduce using rule 30 (VARIABLE -> NAME E2 .)
    SEMICOLON       reduce using rule 30 (VARIABLE -> NAME E2 .)
    DIVIDE          reduce using rule 30 (VARIABLE -> NAME E2 .)
    MULTIPLY        reduce using rule 30 (VARIABLE -> NAME E2 .)
    PLUS            reduce using rule 30 (VARIABLE -> NAME E2 .)
    MINUS           reduce using rule 30 (VARIABLE -> NAME E2 .)
    RSBRACKET       reduce using rule 30 (VARIABLE -> NAME E2 .)
    EQUALS          reduce using rule 30 (VARIABLE -> NAME E2 .)
    RBRACKET        reduce using rule 30 (VARIABLE -> NAME E2 .)
    GREATER_OR_EQUAL reduce using rule 30 (VARIABLE -> NAME E2 .)
    LESS_OR_EQUAL   reduce using rule 30 (VARIABLE -> NAME E2 .)
    GREATER_THAN    reduce using rule 30 (VARIABLE -> NAME E2 .)
    LESS_THAN       reduce using rule 30 (VARIABLE -> NAME E2 .)
    IS_EQUAL        reduce using rule 30 (VARIABLE -> NAME E2 .)
    NOT_EQUAL       reduce using rule 30 (VARIABLE -> NAME E2 .)
    AND             reduce using rule 30 (VARIABLE -> NAME E2 .)
    OR              reduce using rule 30 (VARIABLE -> NAME E2 .)
    RPAREN          reduce using rule 30 (VARIABLE -> NAME E2 .)
    FUNC            reduce using rule 30 (VARIABLE -> NAME E2 .)
    MAIN            reduce using rule 30 (VARIABLE -> NAME E2 .)
    LBRACKET        reduce using rule 30 (VARIABLE -> NAME E2 .)
    TO              reduce using rule 30 (VARIABLE -> NAME E2 .)
    DO              reduce using rule 30 (VARIABLE -> NAME E2 .)


state 36

    (31) E2 -> LSBRACKET . EXP RSBRACKET
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    EXP                            shift and go to state 43
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 37

    (32) E2 -> empty .

    COMMA           reduce using rule 32 (E2 -> empty .)
    SEMICOLON       reduce using rule 32 (E2 -> empty .)
    FUNC            reduce using rule 32 (E2 -> empty .)
    MAIN            reduce using rule 32 (E2 -> empty .)
    LBRACKET        reduce using rule 32 (E2 -> empty .)
    RPAREN          reduce using rule 32 (E2 -> empty .)
    EQUALS          reduce using rule 32 (E2 -> empty .)
    DIVIDE          reduce using rule 32 (E2 -> empty .)
    MULTIPLY        reduce using rule 32 (E2 -> empty .)
    PLUS            reduce using rule 32 (E2 -> empty .)
    MINUS           reduce using rule 32 (E2 -> empty .)
    RSBRACKET       reduce using rule 32 (E2 -> empty .)
    GREATER_OR_EQUAL reduce using rule 32 (E2 -> empty .)
    LESS_OR_EQUAL   reduce using rule 32 (E2 -> empty .)
    GREATER_THAN    reduce using rule 32 (E2 -> empty .)
    LESS_THAN       reduce using rule 32 (E2 -> empty .)
    IS_EQUAL        reduce using rule 32 (E2 -> empty .)
    NOT_EQUAL       reduce using rule 32 (E2 -> empty .)
    AND             reduce using rule 32 (E2 -> empty .)
    OR              reduce using rule 32 (E2 -> empty .)
    RBRACKET        reduce using rule 32 (E2 -> empty .)
    TO              reduce using rule 32 (E2 -> empty .)
    DO              reduce using rule 32 (E2 -> empty .)


state 38

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 54

    CUERPO                         shift and go to state 53

state 39

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN . borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO
    (125) borrarListaVar -> .

    INT             reduce using rule 125 (borrarListaVar -> .)
    FLOAT           reduce using rule 125 (borrarListaVar -> .)
    CHAR            reduce using rule 125 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 55

state 40

    (5) V1 -> TIPO VARIABLE agregarVarLista V2 . SEMICOLON agregarVariables V3

    SEMICOLON       shift and go to state 56


state 41

    (6) V2 -> COMMA . VARIABLE agregarVarLista V2
    (30) VARIABLE -> . NAME E2

    NAME            shift and go to state 31

    VARIABLE                       shift and go to state 57

state 42

    (7) V2 -> empty .

    SEMICOLON       reduce using rule 7 (V2 -> empty .)


state 43

    (31) E2 -> LSBRACKET EXP . RSBRACKET

    RSBRACKET       shift and go to state 58


state 44

    (72) EXP -> TERMINO . popSumaResta T
    (112) popSumaResta -> .

    PLUS            reduce using rule 112 (popSumaResta -> .)
    MINUS           reduce using rule 112 (popSumaResta -> .)
    RSBRACKET       reduce using rule 112 (popSumaResta -> .)
    COMMA           reduce using rule 112 (popSumaResta -> .)
    RBRACKET        reduce using rule 112 (popSumaResta -> .)
    GREATER_OR_EQUAL reduce using rule 112 (popSumaResta -> .)
    LESS_OR_EQUAL   reduce using rule 112 (popSumaResta -> .)
    GREATER_THAN    reduce using rule 112 (popSumaResta -> .)
    LESS_THAN       reduce using rule 112 (popSumaResta -> .)
    IS_EQUAL        reduce using rule 112 (popSumaResta -> .)
    NOT_EQUAL       reduce using rule 112 (popSumaResta -> .)
    AND             reduce using rule 112 (popSumaResta -> .)
    OR              reduce using rule 112 (popSumaResta -> .)
    RPAREN          reduce using rule 112 (popSumaResta -> .)
    SEMICOLON       reduce using rule 112 (popSumaResta -> .)
    TO              reduce using rule 112 (popSumaResta -> .)
    DO              reduce using rule 112 (popSumaResta -> .)

    popSumaResta                   shift and go to state 59

state 45

    (76) TERMINO -> FACTOR . popMultDiv F2
    (111) popMultDiv -> .

    DIVIDE          reduce using rule 111 (popMultDiv -> .)
    MULTIPLY        reduce using rule 111 (popMultDiv -> .)
    PLUS            reduce using rule 111 (popMultDiv -> .)
    MINUS           reduce using rule 111 (popMultDiv -> .)
    RSBRACKET       reduce using rule 111 (popMultDiv -> .)
    COMMA           reduce using rule 111 (popMultDiv -> .)
    RBRACKET        reduce using rule 111 (popMultDiv -> .)
    GREATER_OR_EQUAL reduce using rule 111 (popMultDiv -> .)
    LESS_OR_EQUAL   reduce using rule 111 (popMultDiv -> .)
    GREATER_THAN    reduce using rule 111 (popMultDiv -> .)
    LESS_THAN       reduce using rule 111 (popMultDiv -> .)
    IS_EQUAL        reduce using rule 111 (popMultDiv -> .)
    NOT_EQUAL       reduce using rule 111 (popMultDiv -> .)
    AND             reduce using rule 111 (popMultDiv -> .)
    OR              reduce using rule 111 (popMultDiv -> .)
    RPAREN          reduce using rule 111 (popMultDiv -> .)
    SEMICOLON       reduce using rule 111 (popMultDiv -> .)
    TO              reduce using rule 111 (popMultDiv -> .)
    DO              reduce using rule 111 (popMultDiv -> .)

    popMultDiv                     shift and go to state 60

state 46

    (80) FACTOR -> LPAREN . meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (103) meterFondoFalso -> .

    LPAREN          reduce using rule 103 (meterFondoFalso -> .)
    C_INT           reduce using rule 103 (meterFondoFalso -> .)
    C_FLOAT         reduce using rule 103 (meterFondoFalso -> .)
    C_CHAR          reduce using rule 103 (meterFondoFalso -> .)
    NAME            reduce using rule 103 (meterFondoFalso -> .)

    meterFondoFalso                shift and go to state 61

state 47

    (81) FACTOR -> C_INT . agregarConstInt
    (90) agregarConstInt -> .

    DIVIDE          reduce using rule 90 (agregarConstInt -> .)
    MULTIPLY        reduce using rule 90 (agregarConstInt -> .)
    PLUS            reduce using rule 90 (agregarConstInt -> .)
    MINUS           reduce using rule 90 (agregarConstInt -> .)
    RSBRACKET       reduce using rule 90 (agregarConstInt -> .)
    COMMA           reduce using rule 90 (agregarConstInt -> .)
    RBRACKET        reduce using rule 90 (agregarConstInt -> .)
    GREATER_OR_EQUAL reduce using rule 90 (agregarConstInt -> .)
    LESS_OR_EQUAL   reduce using rule 90 (agregarConstInt -> .)
    GREATER_THAN    reduce using rule 90 (agregarConstInt -> .)
    LESS_THAN       reduce using rule 90 (agregarConstInt -> .)
    IS_EQUAL        reduce using rule 90 (agregarConstInt -> .)
    NOT_EQUAL       reduce using rule 90 (agregarConstInt -> .)
    AND             reduce using rule 90 (agregarConstInt -> .)
    OR              reduce using rule 90 (agregarConstInt -> .)
    RPAREN          reduce using rule 90 (agregarConstInt -> .)
    SEMICOLON       reduce using rule 90 (agregarConstInt -> .)
    TO              reduce using rule 90 (agregarConstInt -> .)
    DO              reduce using rule 90 (agregarConstInt -> .)

    agregarConstInt                shift and go to state 62

state 48

    (82) FACTOR -> C_FLOAT . agregarConstFloat
    (91) agregarConstFloat -> .

    DIVIDE          reduce using rule 91 (agregarConstFloat -> .)
    MULTIPLY        reduce using rule 91 (agregarConstFloat -> .)
    PLUS            reduce using rule 91 (agregarConstFloat -> .)
    MINUS           reduce using rule 91 (agregarConstFloat -> .)
    RSBRACKET       reduce using rule 91 (agregarConstFloat -> .)
    COMMA           reduce using rule 91 (agregarConstFloat -> .)
    RBRACKET        reduce using rule 91 (agregarConstFloat -> .)
    GREATER_OR_EQUAL reduce using rule 91 (agregarConstFloat -> .)
    LESS_OR_EQUAL   reduce using rule 91 (agregarConstFloat -> .)
    GREATER_THAN    reduce using rule 91 (agregarConstFloat -> .)
    LESS_THAN       reduce using rule 91 (agregarConstFloat -> .)
    IS_EQUAL        reduce using rule 91 (agregarConstFloat -> .)
    NOT_EQUAL       reduce using rule 91 (agregarConstFloat -> .)
    AND             reduce using rule 91 (agregarConstFloat -> .)
    OR              reduce using rule 91 (agregarConstFloat -> .)
    RPAREN          reduce using rule 91 (agregarConstFloat -> .)
    SEMICOLON       reduce using rule 91 (agregarConstFloat -> .)
    TO              reduce using rule 91 (agregarConstFloat -> .)
    DO              reduce using rule 91 (agregarConstFloat -> .)

    agregarConstFloat              shift and go to state 63

state 49

    (83) FACTOR -> C_CHAR . agregarConstChar
    (92) agregarConstChar -> .

    DIVIDE          reduce using rule 92 (agregarConstChar -> .)
    MULTIPLY        reduce using rule 92 (agregarConstChar -> .)
    PLUS            reduce using rule 92 (agregarConstChar -> .)
    MINUS           reduce using rule 92 (agregarConstChar -> .)
    RSBRACKET       reduce using rule 92 (agregarConstChar -> .)
    COMMA           reduce using rule 92 (agregarConstChar -> .)
    RBRACKET        reduce using rule 92 (agregarConstChar -> .)
    GREATER_OR_EQUAL reduce using rule 92 (agregarConstChar -> .)
    LESS_OR_EQUAL   reduce using rule 92 (agregarConstChar -> .)
    GREATER_THAN    reduce using rule 92 (agregarConstChar -> .)
    LESS_THAN       reduce using rule 92 (agregarConstChar -> .)
    IS_EQUAL        reduce using rule 92 (agregarConstChar -> .)
    NOT_EQUAL       reduce using rule 92 (agregarConstChar -> .)
    AND             reduce using rule 92 (agregarConstChar -> .)
    OR              reduce using rule 92 (agregarConstChar -> .)
    RPAREN          reduce using rule 92 (agregarConstChar -> .)
    SEMICOLON       reduce using rule 92 (agregarConstChar -> .)
    TO              reduce using rule 92 (agregarConstChar -> .)
    DO              reduce using rule 92 (agregarConstChar -> .)

    agregarConstChar               shift and go to state 64

state 50

    (84) FACTOR -> VARIABLE . agregarPilaOp
    (105) agregarPilaOp -> .

    DIVIDE          reduce using rule 105 (agregarPilaOp -> .)
    MULTIPLY        reduce using rule 105 (agregarPilaOp -> .)
    PLUS            reduce using rule 105 (agregarPilaOp -> .)
    MINUS           reduce using rule 105 (agregarPilaOp -> .)
    RSBRACKET       reduce using rule 105 (agregarPilaOp -> .)
    GREATER_OR_EQUAL reduce using rule 105 (agregarPilaOp -> .)
    LESS_OR_EQUAL   reduce using rule 105 (agregarPilaOp -> .)
    GREATER_THAN    reduce using rule 105 (agregarPilaOp -> .)
    LESS_THAN       reduce using rule 105 (agregarPilaOp -> .)
    IS_EQUAL        reduce using rule 105 (agregarPilaOp -> .)
    NOT_EQUAL       reduce using rule 105 (agregarPilaOp -> .)
    AND             reduce using rule 105 (agregarPilaOp -> .)
    OR              reduce using rule 105 (agregarPilaOp -> .)
    RPAREN          reduce using rule 105 (agregarPilaOp -> .)
    COMMA           reduce using rule 105 (agregarPilaOp -> .)
    RBRACKET        reduce using rule 105 (agregarPilaOp -> .)
    SEMICOLON       reduce using rule 105 (agregarPilaOp -> .)
    TO              reduce using rule 105 (agregarPilaOp -> .)
    DO              reduce using rule 105 (agregarPilaOp -> .)

    agregarPilaOp                  shift and go to state 65

state 51

    (85) FACTOR -> LLAMADAF .

    DIVIDE          reduce using rule 85 (FACTOR -> LLAMADAF .)
    MULTIPLY        reduce using rule 85 (FACTOR -> LLAMADAF .)
    PLUS            reduce using rule 85 (FACTOR -> LLAMADAF .)
    MINUS           reduce using rule 85 (FACTOR -> LLAMADAF .)
    RSBRACKET       reduce using rule 85 (FACTOR -> LLAMADAF .)
    COMMA           reduce using rule 85 (FACTOR -> LLAMADAF .)
    RBRACKET        reduce using rule 85 (FACTOR -> LLAMADAF .)
    GREATER_OR_EQUAL reduce using rule 85 (FACTOR -> LLAMADAF .)
    LESS_OR_EQUAL   reduce using rule 85 (FACTOR -> LLAMADAF .)
    GREATER_THAN    reduce using rule 85 (FACTOR -> LLAMADAF .)
    LESS_THAN       reduce using rule 85 (FACTOR -> LLAMADAF .)
    IS_EQUAL        reduce using rule 85 (FACTOR -> LLAMADAF .)
    NOT_EQUAL       reduce using rule 85 (FACTOR -> LLAMADAF .)
    AND             reduce using rule 85 (FACTOR -> LLAMADAF .)
    OR              reduce using rule 85 (FACTOR -> LLAMADAF .)
    RPAREN          reduce using rule 85 (FACTOR -> LLAMADAF .)
    SEMICOLON       reduce using rule 85 (FACTOR -> LLAMADAF .)
    TO              reduce using rule 85 (FACTOR -> LLAMADAF .)
    DO              reduce using rule 85 (FACTOR -> LLAMADAF .)


state 52

    (30) VARIABLE -> NAME . E2
    (45) LLAMADAF -> NAME . LPAREN E1 RPAREN
    (31) E2 -> . LSBRACKET EXP RSBRACKET
    (32) E2 -> . empty
    (86) empty -> .

    LPAREN          shift and go to state 66
    LSBRACKET       shift and go to state 36
    DIVIDE          reduce using rule 86 (empty -> .)
    MULTIPLY        reduce using rule 86 (empty -> .)
    PLUS            reduce using rule 86 (empty -> .)
    MINUS           reduce using rule 86 (empty -> .)
    RSBRACKET       reduce using rule 86 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 86 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 86 (empty -> .)
    GREATER_THAN    reduce using rule 86 (empty -> .)
    LESS_THAN       reduce using rule 86 (empty -> .)
    IS_EQUAL        reduce using rule 86 (empty -> .)
    NOT_EQUAL       reduce using rule 86 (empty -> .)
    AND             reduce using rule 86 (empty -> .)
    OR              reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    COMMA           reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    TO              reduce using rule 86 (empty -> .)
    DO              reduce using rule 86 (empty -> .)

    E2                             shift and go to state 35
    empty                          shift and go to state 37

state 53

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO .

    $end            reduce using rule 29 (PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO .)


state 54

    (17) CUERPO -> LBRACKET . E RBRACKET
    (18) E -> . E1
    (19) E -> . empty
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (86) empty -> .
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO popSumaResta T
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (76) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    RBRACKET        reduce using rule 86 (empty -> .)
    NAME            shift and go to state 81
    RETURN          shift and go to state 82
    READ            shift and go to state 83
    PRINT           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49

    E                              shift and go to state 67
    E1                             shift and go to state 68
    empty                          shift and go to state 69
    ESTATUTO                       shift and go to state 70
    EXP                            shift and go to state 71
    ASIGNACION                     shift and go to state 72
    LLAMADA                        shift and go to state 73
    RETORNO                        shift and go to state 74
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    CONDICION                      shift and go to state 77
    CICLO_W                        shift and go to state 78
    CICLO_F                        shift and go to state 79
    TERMINO                        shift and go to state 44
    VARIABLE                       shift and go to state 80
    FACTOR                         shift and go to state 45
    LLAMADAF                       shift and go to state 51

state 55

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar . scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO
    (95) scopeLocal -> .

    INT             reduce using rule 95 (scopeLocal -> .)
    FLOAT           reduce using rule 95 (scopeLocal -> .)
    CHAR            reduce using rule 95 (scopeLocal -> .)

    scopeLocal                     shift and go to state 88

state 56

    (5) V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON . agregarVariables V3
    (121) agregarVariables -> .

    NAME            reduce using rule 121 (agregarVariables -> .)
    INT             reduce using rule 121 (agregarVariables -> .)
    FLOAT           reduce using rule 121 (agregarVariables -> .)
    CHAR            reduce using rule 121 (agregarVariables -> .)
    FUNC            reduce using rule 121 (agregarVariables -> .)
    MAIN            reduce using rule 121 (agregarVariables -> .)
    LBRACKET        reduce using rule 121 (agregarVariables -> .)
    RPAREN          reduce using rule 121 (agregarVariables -> .)

    agregarVariables               shift and go to state 89

state 57

    (6) V2 -> COMMA VARIABLE . agregarVarLista V2
    (124) agregarVarLista -> .

    COMMA           reduce using rule 124 (agregarVarLista -> .)
    SEMICOLON       reduce using rule 124 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 90

state 58

    (31) E2 -> LSBRACKET EXP RSBRACKET .

    COMMA           reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    SEMICOLON       reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    FUNC            reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    MAIN            reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    LBRACKET        reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    RPAREN          reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    EQUALS          reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    DIVIDE          reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    MULTIPLY        reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    PLUS            reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    MINUS           reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    RSBRACKET       reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    GREATER_OR_EQUAL reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    LESS_OR_EQUAL   reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    GREATER_THAN    reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    LESS_THAN       reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    IS_EQUAL        reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    NOT_EQUAL       reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    AND             reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    OR              reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    RBRACKET        reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    TO              reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    DO              reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)


state 59

    (72) EXP -> TERMINO popSumaResta . T
    (73) T -> . PLUS meterOperador EXP
    (74) T -> . MINUS meterOperador EXP
    (75) T -> . empty
    (86) empty -> .

    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    RSBRACKET       reduce using rule 86 (empty -> .)
    COMMA           reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 86 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 86 (empty -> .)
    GREATER_THAN    reduce using rule 86 (empty -> .)
    LESS_THAN       reduce using rule 86 (empty -> .)
    IS_EQUAL        reduce using rule 86 (empty -> .)
    NOT_EQUAL       reduce using rule 86 (empty -> .)
    AND             reduce using rule 86 (empty -> .)
    OR              reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    TO              reduce using rule 86 (empty -> .)
    DO              reduce using rule 86 (empty -> .)

    T                              shift and go to state 91
    empty                          shift and go to state 94

state 60

    (76) TERMINO -> FACTOR popMultDiv . F2
    (77) F2 -> . DIVIDE meterOperador TERMINO
    (78) F2 -> . MULTIPLY meterOperador TERMINO
    (79) F2 -> . empty
    (86) empty -> .

    DIVIDE          shift and go to state 96
    MULTIPLY        shift and go to state 97
    PLUS            reduce using rule 86 (empty -> .)
    MINUS           reduce using rule 86 (empty -> .)
    RSBRACKET       reduce using rule 86 (empty -> .)
    COMMA           reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 86 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 86 (empty -> .)
    GREATER_THAN    reduce using rule 86 (empty -> .)
    LESS_THAN       reduce using rule 86 (empty -> .)
    IS_EQUAL        reduce using rule 86 (empty -> .)
    NOT_EQUAL       reduce using rule 86 (empty -> .)
    AND             reduce using rule 86 (empty -> .)
    OR              reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    TO              reduce using rule 86 (empty -> .)
    DO              reduce using rule 86 (empty -> .)

    F2                             shift and go to state 95
    empty                          shift and go to state 98

state 61

    (80) FACTOR -> LPAREN meterFondoFalso . H_EXP RPAREN quitarFondoFalso
    (58) H_EXP -> . T_EXP
    (59) H_EXP -> . T_EXP OR H_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    H_EXP                          shift and go to state 99
    T_EXP                          shift and go to state 100
    G_EXP                          shift and go to state 101
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 62

    (81) FACTOR -> C_INT agregarConstInt .

    DIVIDE          reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    MULTIPLY        reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    PLUS            reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    MINUS           reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    RSBRACKET       reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    COMMA           reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    RBRACKET        reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    GREATER_OR_EQUAL reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    LESS_OR_EQUAL   reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    GREATER_THAN    reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    LESS_THAN       reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    IS_EQUAL        reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    NOT_EQUAL       reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    AND             reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    OR              reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    RPAREN          reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    SEMICOLON       reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    TO              reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)
    DO              reduce using rule 81 (FACTOR -> C_INT agregarConstInt .)


state 63

    (82) FACTOR -> C_FLOAT agregarConstFloat .

    DIVIDE          reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    MULTIPLY        reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    PLUS            reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    MINUS           reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    RSBRACKET       reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    COMMA           reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    RBRACKET        reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    GREATER_OR_EQUAL reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    LESS_OR_EQUAL   reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    GREATER_THAN    reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    LESS_THAN       reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    IS_EQUAL        reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    NOT_EQUAL       reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    AND             reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    OR              reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    RPAREN          reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    SEMICOLON       reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    TO              reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)
    DO              reduce using rule 82 (FACTOR -> C_FLOAT agregarConstFloat .)


state 64

    (83) FACTOR -> C_CHAR agregarConstChar .

    DIVIDE          reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    MULTIPLY        reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    PLUS            reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    MINUS           reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    RSBRACKET       reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    COMMA           reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    RBRACKET        reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    GREATER_OR_EQUAL reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    LESS_OR_EQUAL   reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    GREATER_THAN    reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    LESS_THAN       reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    IS_EQUAL        reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    NOT_EQUAL       reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    AND             reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    OR              reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    RPAREN          reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    SEMICOLON       reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    TO              reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)
    DO              reduce using rule 83 (FACTOR -> C_CHAR agregarConstChar .)


state 65

    (84) FACTOR -> VARIABLE agregarPilaOp .

    DIVIDE          reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    MULTIPLY        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    PLUS            reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    MINUS           reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RSBRACKET       reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    GREATER_OR_EQUAL reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    LESS_OR_EQUAL   reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    GREATER_THAN    reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    LESS_THAN       reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    IS_EQUAL        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    NOT_EQUAL       reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    AND             reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    OR              reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RPAREN          reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    COMMA           reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RBRACKET        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    SEMICOLON       reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    TO              reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    DO              reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)


state 66

    (45) LLAMADAF -> NAME LPAREN . E1 RPAREN
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO popSumaResta T
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (76) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    NAME            shift and go to state 81
    RETURN          shift and go to state 82
    READ            shift and go to state 83
    PRINT           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49

    E1                             shift and go to state 103
    ESTATUTO                       shift and go to state 70
    EXP                            shift and go to state 71
    ASIGNACION                     shift and go to state 72
    LLAMADA                        shift and go to state 73
    RETORNO                        shift and go to state 74
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    CONDICION                      shift and go to state 77
    CICLO_W                        shift and go to state 78
    CICLO_F                        shift and go to state 79
    TERMINO                        shift and go to state 44
    VARIABLE                       shift and go to state 80
    FACTOR                         shift and go to state 45
    LLAMADAF                       shift and go to state 51

state 67

    (17) CUERPO -> LBRACKET E . RBRACKET

    RBRACKET        shift and go to state 104


state 68

    (18) E -> E1 .

    RBRACKET        reduce using rule 18 (E -> E1 .)


state 69

    (19) E -> empty .

    RBRACKET        reduce using rule 19 (E -> empty .)


state 70

    (20) E1 -> ESTATUTO .
    (21) E1 -> ESTATUTO . E1
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO popSumaResta T
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (76) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    RBRACKET        reduce using rule 20 (E1 -> ESTATUTO .)
    RPAREN          reduce using rule 20 (E1 -> ESTATUTO .)
    NAME            shift and go to state 81
    RETURN          shift and go to state 82
    READ            shift and go to state 83
    PRINT           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49

    ESTATUTO                       shift and go to state 70
    E1                             shift and go to state 105
    EXP                            shift and go to state 71
    ASIGNACION                     shift and go to state 72
    LLAMADA                        shift and go to state 73
    RETORNO                        shift and go to state 74
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    CONDICION                      shift and go to state 77
    CICLO_W                        shift and go to state 78
    CICLO_F                        shift and go to state 79
    TERMINO                        shift and go to state 44
    VARIABLE                       shift and go to state 80
    FACTOR                         shift and go to state 45
    LLAMADAF                       shift and go to state 51

state 71

    (43) E1 -> EXP .
    (44) E1 -> EXP . COMMA E1

    RBRACKET        reduce using rule 43 (E1 -> EXP .)
    RPAREN          reduce using rule 43 (E1 -> EXP .)
    COMMA           shift and go to state 106


state 72

    (33) ESTATUTO -> ASIGNACION .

    NAME            reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    READ            reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    PRINT           reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    WHILE           reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    FROM            reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    LPAREN          reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    C_INT           reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    C_FLOAT         reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    C_CHAR          reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    RBRACKET        reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    RPAREN          reduce using rule 33 (ESTATUTO -> ASIGNACION .)


state 73

    (34) ESTATUTO -> LLAMADA .

    NAME            reduce using rule 34 (ESTATUTO -> LLAMADA .)
    RETURN          reduce using rule 34 (ESTATUTO -> LLAMADA .)
    READ            reduce using rule 34 (ESTATUTO -> LLAMADA .)
    PRINT           reduce using rule 34 (ESTATUTO -> LLAMADA .)
    IF              reduce using rule 34 (ESTATUTO -> LLAMADA .)
    WHILE           reduce using rule 34 (ESTATUTO -> LLAMADA .)
    FROM            reduce using rule 34 (ESTATUTO -> LLAMADA .)
    LPAREN          reduce using rule 34 (ESTATUTO -> LLAMADA .)
    C_INT           reduce using rule 34 (ESTATUTO -> LLAMADA .)
    C_FLOAT         reduce using rule 34 (ESTATUTO -> LLAMADA .)
    C_CHAR          reduce using rule 34 (ESTATUTO -> LLAMADA .)
    RBRACKET        reduce using rule 34 (ESTATUTO -> LLAMADA .)
    RPAREN          reduce using rule 34 (ESTATUTO -> LLAMADA .)


state 74

    (35) ESTATUTO -> RETORNO .

    NAME            reduce using rule 35 (ESTATUTO -> RETORNO .)
    RETURN          reduce using rule 35 (ESTATUTO -> RETORNO .)
    READ            reduce using rule 35 (ESTATUTO -> RETORNO .)
    PRINT           reduce using rule 35 (ESTATUTO -> RETORNO .)
    IF              reduce using rule 35 (ESTATUTO -> RETORNO .)
    WHILE           reduce using rule 35 (ESTATUTO -> RETORNO .)
    FROM            reduce using rule 35 (ESTATUTO -> RETORNO .)
    LPAREN          reduce using rule 35 (ESTATUTO -> RETORNO .)
    C_INT           reduce using rule 35 (ESTATUTO -> RETORNO .)
    C_FLOAT         reduce using rule 35 (ESTATUTO -> RETORNO .)
    C_CHAR          reduce using rule 35 (ESTATUTO -> RETORNO .)
    RBRACKET        reduce using rule 35 (ESTATUTO -> RETORNO .)
    RPAREN          reduce using rule 35 (ESTATUTO -> RETORNO .)


state 75

    (36) ESTATUTO -> LECTURA .

    NAME            reduce using rule 36 (ESTATUTO -> LECTURA .)
    RETURN          reduce using rule 36 (ESTATUTO -> LECTURA .)
    READ            reduce using rule 36 (ESTATUTO -> LECTURA .)
    PRINT           reduce using rule 36 (ESTATUTO -> LECTURA .)
    IF              reduce using rule 36 (ESTATUTO -> LECTURA .)
    WHILE           reduce using rule 36 (ESTATUTO -> LECTURA .)
    FROM            reduce using rule 36 (ESTATUTO -> LECTURA .)
    LPAREN          reduce using rule 36 (ESTATUTO -> LECTURA .)
    C_INT           reduce using rule 36 (ESTATUTO -> LECTURA .)
    C_FLOAT         reduce using rule 36 (ESTATUTO -> LECTURA .)
    C_CHAR          reduce using rule 36 (ESTATUTO -> LECTURA .)
    RBRACKET        reduce using rule 36 (ESTATUTO -> LECTURA .)
    RPAREN          reduce using rule 36 (ESTATUTO -> LECTURA .)


state 76

    (37) ESTATUTO -> ESCRITURA .

    NAME            reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    RETURN          reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    READ            reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    PRINT           reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    IF              reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    WHILE           reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    FROM            reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    LPAREN          reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    C_INT           reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    C_FLOAT         reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    C_CHAR          reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    RBRACKET        reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    RPAREN          reduce using rule 37 (ESTATUTO -> ESCRITURA .)


state 77

    (38) ESTATUTO -> CONDICION .

    NAME            reduce using rule 38 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 38 (ESTATUTO -> CONDICION .)
    READ            reduce using rule 38 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 38 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 38 (ESTATUTO -> CONDICION .)
    WHILE           reduce using rule 38 (ESTATUTO -> CONDICION .)
    FROM            reduce using rule 38 (ESTATUTO -> CONDICION .)
    LPAREN          reduce using rule 38 (ESTATUTO -> CONDICION .)
    C_INT           reduce using rule 38 (ESTATUTO -> CONDICION .)
    C_FLOAT         reduce using rule 38 (ESTATUTO -> CONDICION .)
    C_CHAR          reduce using rule 38 (ESTATUTO -> CONDICION .)
    RBRACKET        reduce using rule 38 (ESTATUTO -> CONDICION .)
    RPAREN          reduce using rule 38 (ESTATUTO -> CONDICION .)


state 78

    (39) ESTATUTO -> CICLO_W .

    NAME            reduce using rule 39 (ESTATUTO -> CICLO_W .)
    RETURN          reduce using rule 39 (ESTATUTO -> CICLO_W .)
    READ            reduce using rule 39 (ESTATUTO -> CICLO_W .)
    PRINT           reduce using rule 39 (ESTATUTO -> CICLO_W .)
    IF              reduce using rule 39 (ESTATUTO -> CICLO_W .)
    WHILE           reduce using rule 39 (ESTATUTO -> CICLO_W .)
    FROM            reduce using rule 39 (ESTATUTO -> CICLO_W .)
    LPAREN          reduce using rule 39 (ESTATUTO -> CICLO_W .)
    C_INT           reduce using rule 39 (ESTATUTO -> CICLO_W .)
    C_FLOAT         reduce using rule 39 (ESTATUTO -> CICLO_W .)
    C_CHAR          reduce using rule 39 (ESTATUTO -> CICLO_W .)
    RBRACKET        reduce using rule 39 (ESTATUTO -> CICLO_W .)
    RPAREN          reduce using rule 39 (ESTATUTO -> CICLO_W .)


state 79

    (40) ESTATUTO -> CICLO_F .

    NAME            reduce using rule 40 (ESTATUTO -> CICLO_F .)
    RETURN          reduce using rule 40 (ESTATUTO -> CICLO_F .)
    READ            reduce using rule 40 (ESTATUTO -> CICLO_F .)
    PRINT           reduce using rule 40 (ESTATUTO -> CICLO_F .)
    IF              reduce using rule 40 (ESTATUTO -> CICLO_F .)
    WHILE           reduce using rule 40 (ESTATUTO -> CICLO_F .)
    FROM            reduce using rule 40 (ESTATUTO -> CICLO_F .)
    LPAREN          reduce using rule 40 (ESTATUTO -> CICLO_F .)
    C_INT           reduce using rule 40 (ESTATUTO -> CICLO_F .)
    C_FLOAT         reduce using rule 40 (ESTATUTO -> CICLO_F .)
    C_CHAR          reduce using rule 40 (ESTATUTO -> CICLO_F .)
    RBRACKET        reduce using rule 40 (ESTATUTO -> CICLO_F .)
    RPAREN          reduce using rule 40 (ESTATUTO -> CICLO_F .)


state 80

    (41) ASIGNACION -> VARIABLE . agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (84) FACTOR -> VARIABLE . agregarPilaOp
    (105) agregarPilaOp -> .

    EQUALS          reduce using rule 105 (agregarPilaOp -> .)
    DIVIDE          reduce using rule 105 (agregarPilaOp -> .)
    MULTIPLY        reduce using rule 105 (agregarPilaOp -> .)
    PLUS            reduce using rule 105 (agregarPilaOp -> .)
    MINUS           reduce using rule 105 (agregarPilaOp -> .)
    COMMA           reduce using rule 105 (agregarPilaOp -> .)
    RBRACKET        reduce using rule 105 (agregarPilaOp -> .)
    RPAREN          reduce using rule 105 (agregarPilaOp -> .)

    agregarPilaOp                  shift and go to state 107

state 81

    (42) LLAMADA -> NAME . LPAREN E1 RPAREN SEMICOLON
    (30) VARIABLE -> NAME . E2
    (45) LLAMADAF -> NAME . LPAREN E1 RPAREN
    (31) E2 -> . LSBRACKET EXP RSBRACKET
    (32) E2 -> . empty
    (86) empty -> .

    LPAREN          shift and go to state 108
    LSBRACKET       shift and go to state 36
    EQUALS          reduce using rule 86 (empty -> .)
    DIVIDE          reduce using rule 86 (empty -> .)
    MULTIPLY        reduce using rule 86 (empty -> .)
    PLUS            reduce using rule 86 (empty -> .)
    MINUS           reduce using rule 86 (empty -> .)
    COMMA           reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)

    E2                             shift and go to state 35
    empty                          shift and go to state 37

state 82

    (46) RETORNO -> RETURN . LPAREN EXP popReturn RPAREN SEMICOLON

    LPAREN          shift and go to state 109


state 83

    (47) LECTURA -> READ . LPAREN V3 RPAREN SEMICOLON

    LPAREN          shift and go to state 110


state 84

    (50) ESCRITURA -> PRINT . LPAREN E3 RPAREN SEMICOLON

    LPAREN          shift and go to state 111


state 85

    (53) CONDICION -> IF . LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto

    LPAREN          shift and go to state 112


state 86

    (56) CICLO_W -> WHILE . agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (100) agregarWhile -> .

    LPAREN          reduce using rule 100 (agregarWhile -> .)

    agregarWhile                   shift and go to state 113

state 87

    (57) CICLO_F -> FROM . agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (100) agregarWhile -> .

    NAME            reduce using rule 100 (agregarWhile -> .)

    agregarWhile                   shift and go to state 114

state 88

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal . PARAMS agregarVariables RPAREN V4 CUERPO
    (13) PARAMS -> . TIPO NAME agregarVarLista P1
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    PARAMS                         shift and go to state 115
    TIPO                           shift and go to state 116

state 89

    (5) V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables . V3
    (8) V3 -> . borrarListaVar V1
    (9) V3 -> . empty
    (48) V3 -> . VARIABLE popRead COMMA V3
    (49) V3 -> . VARIABLE popRead
    (125) borrarListaVar -> .
    (86) empty -> .
    (30) VARIABLE -> . NAME E2

    INT             reduce using rule 125 (borrarListaVar -> .)
    FLOAT           reduce using rule 125 (borrarListaVar -> .)
    CHAR            reduce using rule 125 (borrarListaVar -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    NAME            shift and go to state 31

    VARIABLE                       shift and go to state 117
    V3                             shift and go to state 118
    borrarListaVar                 shift and go to state 119
    empty                          shift and go to state 120

state 90

    (6) V2 -> COMMA VARIABLE agregarVarLista . V2
    (6) V2 -> . COMMA VARIABLE agregarVarLista V2
    (7) V2 -> . empty
    (86) empty -> .

    COMMA           shift and go to state 41
    SEMICOLON       reduce using rule 86 (empty -> .)

    V2                             shift and go to state 121
    empty                          shift and go to state 42

state 91

    (72) EXP -> TERMINO popSumaResta T .

    RSBRACKET       reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    COMMA           reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    RBRACKET        reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    GREATER_OR_EQUAL reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    LESS_OR_EQUAL   reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    GREATER_THAN    reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    LESS_THAN       reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    IS_EQUAL        reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    NOT_EQUAL       reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    AND             reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    OR              reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    RPAREN          reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    SEMICOLON       reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    TO              reduce using rule 72 (EXP -> TERMINO popSumaResta T .)
    DO              reduce using rule 72 (EXP -> TERMINO popSumaResta T .)


state 92

    (73) T -> PLUS . meterOperador EXP
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 122

state 93

    (74) T -> MINUS . meterOperador EXP
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 123

state 94

    (75) T -> empty .

    RSBRACKET       reduce using rule 75 (T -> empty .)
    COMMA           reduce using rule 75 (T -> empty .)
    RBRACKET        reduce using rule 75 (T -> empty .)
    GREATER_OR_EQUAL reduce using rule 75 (T -> empty .)
    LESS_OR_EQUAL   reduce using rule 75 (T -> empty .)
    GREATER_THAN    reduce using rule 75 (T -> empty .)
    LESS_THAN       reduce using rule 75 (T -> empty .)
    IS_EQUAL        reduce using rule 75 (T -> empty .)
    NOT_EQUAL       reduce using rule 75 (T -> empty .)
    AND             reduce using rule 75 (T -> empty .)
    OR              reduce using rule 75 (T -> empty .)
    RPAREN          reduce using rule 75 (T -> empty .)
    SEMICOLON       reduce using rule 75 (T -> empty .)
    TO              reduce using rule 75 (T -> empty .)
    DO              reduce using rule 75 (T -> empty .)


state 95

    (76) TERMINO -> FACTOR popMultDiv F2 .

    PLUS            reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    MINUS           reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    RSBRACKET       reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    COMMA           reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    RBRACKET        reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    GREATER_OR_EQUAL reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    LESS_OR_EQUAL   reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    GREATER_THAN    reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    LESS_THAN       reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    IS_EQUAL        reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    NOT_EQUAL       reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    AND             reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    OR              reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    RPAREN          reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    SEMICOLON       reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    TO              reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)
    DO              reduce using rule 76 (TERMINO -> FACTOR popMultDiv F2 .)


state 96

    (77) F2 -> DIVIDE . meterOperador TERMINO
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 124

state 97

    (78) F2 -> MULTIPLY . meterOperador TERMINO
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 125

state 98

    (79) F2 -> empty .

    PLUS            reduce using rule 79 (F2 -> empty .)
    MINUS           reduce using rule 79 (F2 -> empty .)
    RSBRACKET       reduce using rule 79 (F2 -> empty .)
    COMMA           reduce using rule 79 (F2 -> empty .)
    RBRACKET        reduce using rule 79 (F2 -> empty .)
    GREATER_OR_EQUAL reduce using rule 79 (F2 -> empty .)
    LESS_OR_EQUAL   reduce using rule 79 (F2 -> empty .)
    GREATER_THAN    reduce using rule 79 (F2 -> empty .)
    LESS_THAN       reduce using rule 79 (F2 -> empty .)
    IS_EQUAL        reduce using rule 79 (F2 -> empty .)
    NOT_EQUAL       reduce using rule 79 (F2 -> empty .)
    AND             reduce using rule 79 (F2 -> empty .)
    OR              reduce using rule 79 (F2 -> empty .)
    RPAREN          reduce using rule 79 (F2 -> empty .)
    SEMICOLON       reduce using rule 79 (F2 -> empty .)
    TO              reduce using rule 79 (F2 -> empty .)
    DO              reduce using rule 79 (F2 -> empty .)


state 99

    (80) FACTOR -> LPAREN meterFondoFalso H_EXP . RPAREN quitarFondoFalso

    RPAREN          shift and go to state 126


state 100

    (58) H_EXP -> T_EXP .
    (59) H_EXP -> T_EXP . OR H_EXP

    RPAREN          reduce using rule 58 (H_EXP -> T_EXP .)
    OR              shift and go to state 127


state 101

    (60) T_EXP -> G_EXP .
    (61) T_EXP -> G_EXP . AND T_EXP

    OR              reduce using rule 60 (T_EXP -> G_EXP .)
    RPAREN          reduce using rule 60 (T_EXP -> G_EXP .)
    AND             shift and go to state 128


state 102

    (62) G_EXP -> EXP . B popBool
    (63) B -> . GREATER_OR_EQUAL meterOperador G_EXP
    (64) B -> . LESS_OR_EQUAL meterOperador G_EXP
    (65) B -> . GREATER_THAN meterOperador G_EXP
    (66) B -> . LESS_THAN meterOperador G_EXP
    (67) B -> . IS_EQUAL meterOperador G_EXP
    (68) B -> . NOT_EQUAL meterOperador G_EXP
    (69) B -> . empty
    (86) empty -> .

    GREATER_OR_EQUAL shift and go to state 130
    LESS_OR_EQUAL   shift and go to state 131
    GREATER_THAN    shift and go to state 132
    LESS_THAN       shift and go to state 133
    IS_EQUAL        shift and go to state 134
    NOT_EQUAL       shift and go to state 135
    AND             reduce using rule 86 (empty -> .)
    OR              reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)

    B                              shift and go to state 129
    empty                          shift and go to state 136

state 103

    (45) LLAMADAF -> NAME LPAREN E1 . RPAREN

    RPAREN          shift and go to state 137


state 104

    (17) CUERPO -> LBRACKET E RBRACKET .

    $end            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    FUNC            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    MAIN            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    ELSE            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    NAME            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RETURN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    READ            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    PRINT           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    IF              reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    WHILE           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    FROM            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    LPAREN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    C_INT           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    C_FLOAT         reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    C_CHAR          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RPAREN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)


state 105

    (21) E1 -> ESTATUTO E1 .

    RBRACKET        reduce using rule 21 (E1 -> ESTATUTO E1 .)
    RPAREN          reduce using rule 21 (E1 -> ESTATUTO E1 .)


state 106

    (44) E1 -> EXP COMMA . E1
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO popSumaResta T
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (76) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    NAME            shift and go to state 81
    RETURN          shift and go to state 82
    READ            shift and go to state 83
    PRINT           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49

    EXP                            shift and go to state 71
    E1                             shift and go to state 138
    ESTATUTO                       shift and go to state 70
    ASIGNACION                     shift and go to state 72
    LLAMADA                        shift and go to state 73
    RETORNO                        shift and go to state 74
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    CONDICION                      shift and go to state 77
    CICLO_W                        shift and go to state 78
    CICLO_F                        shift and go to state 79
    TERMINO                        shift and go to state 44
    VARIABLE                       shift and go to state 80
    FACTOR                         shift and go to state 45
    LLAMADAF                       shift and go to state 51

state 107

    (41) ASIGNACION -> VARIABLE agregarPilaOp . EQUALS meterOperador EXP popIgual SEMICOLON
    (84) FACTOR -> VARIABLE agregarPilaOp .

    EQUALS          shift and go to state 139
    DIVIDE          reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    MULTIPLY        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    PLUS            reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    MINUS           reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    COMMA           reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RBRACKET        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RPAREN          reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)


state 108

    (42) LLAMADA -> NAME LPAREN . E1 RPAREN SEMICOLON
    (45) LLAMADAF -> NAME LPAREN . E1 RPAREN
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO popSumaResta T
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (76) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    NAME            shift and go to state 81
    RETURN          shift and go to state 82
    READ            shift and go to state 83
    PRINT           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FROM            shift and go to state 87
    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49

    E1                             shift and go to state 140
    ESTATUTO                       shift and go to state 70
    EXP                            shift and go to state 71
    ASIGNACION                     shift and go to state 72
    LLAMADA                        shift and go to state 73
    RETORNO                        shift and go to state 74
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    CONDICION                      shift and go to state 77
    CICLO_W                        shift and go to state 78
    CICLO_F                        shift and go to state 79
    TERMINO                        shift and go to state 44
    VARIABLE                       shift and go to state 80
    FACTOR                         shift and go to state 45
    LLAMADAF                       shift and go to state 51

state 109

    (46) RETORNO -> RETURN LPAREN . EXP popReturn RPAREN SEMICOLON
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    EXP                            shift and go to state 141
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 110

    (47) LECTURA -> READ LPAREN . V3 RPAREN SEMICOLON
    (8) V3 -> . borrarListaVar V1
    (9) V3 -> . empty
    (48) V3 -> . VARIABLE popRead COMMA V3
    (49) V3 -> . VARIABLE popRead
    (125) borrarListaVar -> .
    (86) empty -> .
    (30) VARIABLE -> . NAME E2

    INT             reduce using rule 125 (borrarListaVar -> .)
    FLOAT           reduce using rule 125 (borrarListaVar -> .)
    CHAR            reduce using rule 125 (borrarListaVar -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    NAME            shift and go to state 31

    V3                             shift and go to state 142
    borrarListaVar                 shift and go to state 119
    empty                          shift and go to state 120
    VARIABLE                       shift and go to state 117

state 111

    (50) ESCRITURA -> PRINT LPAREN . E3 RPAREN SEMICOLON
    (51) E3 -> . S_EXP popPrint
    (52) E3 -> . S_EXP popPrint COMMA E3
    (70) S_EXP -> . C_STRING agregarConstString
    (71) S_EXP -> . EXP
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    C_STRING        shift and go to state 145
    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    E3                             shift and go to state 143
    S_EXP                          shift and go to state 144
    EXP                            shift and go to state 146
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 112

    (53) CONDICION -> IF LPAREN . H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (58) H_EXP -> . T_EXP
    (59) H_EXP -> . T_EXP OR H_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    H_EXP                          shift and go to state 147
    T_EXP                          shift and go to state 100
    G_EXP                          shift and go to state 101
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 113

    (56) CICLO_W -> WHILE agregarWhile . LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile

    LPAREN          shift and go to state 148


state 114

    (57) CICLO_F -> FROM agregarWhile . VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (30) VARIABLE -> . NAME E2

    NAME            shift and go to state 31

    VARIABLE                       shift and go to state 149

state 115

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS . agregarVariables RPAREN V4 CUERPO
    (121) agregarVariables -> .

    RPAREN          reduce using rule 121 (agregarVariables -> .)

    agregarVariables               shift and go to state 150

state 116

    (13) PARAMS -> TIPO . NAME agregarVarLista P1

    NAME            shift and go to state 151


state 117

    (48) V3 -> VARIABLE . popRead COMMA V3
    (49) V3 -> VARIABLE . popRead
    (107) popRead -> .

    COMMA           reduce using rule 107 (popRead -> .)
    FUNC            reduce using rule 107 (popRead -> .)
    MAIN            reduce using rule 107 (popRead -> .)
    LBRACKET        reduce using rule 107 (popRead -> .)
    RPAREN          reduce using rule 107 (popRead -> .)

    popRead                        shift and go to state 152

state 118

    (5) V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .

    FUNC            reduce using rule 5 (V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .)
    MAIN            reduce using rule 5 (V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .)
    LBRACKET        reduce using rule 5 (V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .)
    RPAREN          reduce using rule 5 (V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .)


state 119

    (8) V3 -> borrarListaVar . V1
    (5) V1 -> . TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    V1                             shift and go to state 153
    TIPO                           shift and go to state 23

state 120

    (9) V3 -> empty .

    FUNC            reduce using rule 9 (V3 -> empty .)
    MAIN            reduce using rule 9 (V3 -> empty .)
    LBRACKET        reduce using rule 9 (V3 -> empty .)
    RPAREN          reduce using rule 9 (V3 -> empty .)


state 121

    (6) V2 -> COMMA VARIABLE agregarVarLista V2 .

    SEMICOLON       reduce using rule 6 (V2 -> COMMA VARIABLE agregarVarLista V2 .)


state 122

    (73) T -> PLUS meterOperador . EXP
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    EXP                            shift and go to state 154
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 123

    (74) T -> MINUS meterOperador . EXP
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    EXP                            shift and go to state 155
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 124

    (77) F2 -> DIVIDE meterOperador . TERMINO
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    TERMINO                        shift and go to state 156
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 125

    (78) F2 -> MULTIPLY meterOperador . TERMINO
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    TERMINO                        shift and go to state 157
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 126

    (80) FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN . quitarFondoFalso
    (104) quitarFondoFalso -> .

    DIVIDE          reduce using rule 104 (quitarFondoFalso -> .)
    MULTIPLY        reduce using rule 104 (quitarFondoFalso -> .)
    PLUS            reduce using rule 104 (quitarFondoFalso -> .)
    MINUS           reduce using rule 104 (quitarFondoFalso -> .)
    RSBRACKET       reduce using rule 104 (quitarFondoFalso -> .)
    COMMA           reduce using rule 104 (quitarFondoFalso -> .)
    RBRACKET        reduce using rule 104 (quitarFondoFalso -> .)
    GREATER_OR_EQUAL reduce using rule 104 (quitarFondoFalso -> .)
    LESS_OR_EQUAL   reduce using rule 104 (quitarFondoFalso -> .)
    GREATER_THAN    reduce using rule 104 (quitarFondoFalso -> .)
    LESS_THAN       reduce using rule 104 (quitarFondoFalso -> .)
    IS_EQUAL        reduce using rule 104 (quitarFondoFalso -> .)
    NOT_EQUAL       reduce using rule 104 (quitarFondoFalso -> .)
    AND             reduce using rule 104 (quitarFondoFalso -> .)
    OR              reduce using rule 104 (quitarFondoFalso -> .)
    RPAREN          reduce using rule 104 (quitarFondoFalso -> .)
    SEMICOLON       reduce using rule 104 (quitarFondoFalso -> .)
    TO              reduce using rule 104 (quitarFondoFalso -> .)
    DO              reduce using rule 104 (quitarFondoFalso -> .)

    quitarFondoFalso               shift and go to state 158

state 127

    (59) H_EXP -> T_EXP OR . H_EXP
    (58) H_EXP -> . T_EXP
    (59) H_EXP -> . T_EXP OR H_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    T_EXP                          shift and go to state 100
    H_EXP                          shift and go to state 159
    G_EXP                          shift and go to state 101
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 128

    (61) T_EXP -> G_EXP AND . T_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    G_EXP                          shift and go to state 101
    T_EXP                          shift and go to state 160
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 129

    (62) G_EXP -> EXP B . popBool
    (109) popBool -> .

    AND             reduce using rule 109 (popBool -> .)
    OR              reduce using rule 109 (popBool -> .)
    RPAREN          reduce using rule 109 (popBool -> .)

    popBool                        shift and go to state 161

state 130

    (63) B -> GREATER_OR_EQUAL . meterOperador G_EXP
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 162

state 131

    (64) B -> LESS_OR_EQUAL . meterOperador G_EXP
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 163

state 132

    (65) B -> GREATER_THAN . meterOperador G_EXP
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 164

state 133

    (66) B -> LESS_THAN . meterOperador G_EXP
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 165

state 134

    (67) B -> IS_EQUAL . meterOperador G_EXP
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 166

state 135

    (68) B -> NOT_EQUAL . meterOperador G_EXP
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 167

state 136

    (69) B -> empty .

    AND             reduce using rule 69 (B -> empty .)
    OR              reduce using rule 69 (B -> empty .)
    RPAREN          reduce using rule 69 (B -> empty .)


state 137

    (45) LLAMADAF -> NAME LPAREN E1 RPAREN .

    DIVIDE          reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MULTIPLY        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    PLUS            reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MINUS           reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RSBRACKET       reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    GREATER_OR_EQUAL reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    LESS_OR_EQUAL   reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    GREATER_THAN    reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    LESS_THAN       reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    IS_EQUAL        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    NOT_EQUAL       reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    AND             reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    OR              reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RPAREN          reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    COMMA           reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RBRACKET        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    SEMICOLON       reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    TO              reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    DO              reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)


state 138

    (44) E1 -> EXP COMMA E1 .

    RBRACKET        reduce using rule 44 (E1 -> EXP COMMA E1 .)
    RPAREN          reduce using rule 44 (E1 -> EXP COMMA E1 .)


state 139

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS . meterOperador EXP popIgual SEMICOLON
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 168

state 140

    (42) LLAMADA -> NAME LPAREN E1 . RPAREN SEMICOLON
    (45) LLAMADAF -> NAME LPAREN E1 . RPAREN

    RPAREN          shift and go to state 169


state 141

    (46) RETORNO -> RETURN LPAREN EXP . popReturn RPAREN SEMICOLON
    (108) popReturn -> .

    RPAREN          reduce using rule 108 (popReturn -> .)

    popReturn                      shift and go to state 170

state 142

    (47) LECTURA -> READ LPAREN V3 . RPAREN SEMICOLON

    RPAREN          shift and go to state 171


state 143

    (50) ESCRITURA -> PRINT LPAREN E3 . RPAREN SEMICOLON

    RPAREN          shift and go to state 172


state 144

    (51) E3 -> S_EXP . popPrint
    (52) E3 -> S_EXP . popPrint COMMA E3
    (106) popPrint -> .

    COMMA           reduce using rule 106 (popPrint -> .)
    RPAREN          reduce using rule 106 (popPrint -> .)

    popPrint                       shift and go to state 173

state 145

    (70) S_EXP -> C_STRING . agregarConstString
    (93) agregarConstString -> .

    COMMA           reduce using rule 93 (agregarConstString -> .)
    RPAREN          reduce using rule 93 (agregarConstString -> .)

    agregarConstString             shift and go to state 174

state 146

    (71) S_EXP -> EXP .

    COMMA           reduce using rule 71 (S_EXP -> EXP .)
    RPAREN          reduce using rule 71 (S_EXP -> EXP .)


state 147

    (53) CONDICION -> IF LPAREN H_EXP . RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto

    RPAREN          shift and go to state 175


state 148

    (56) CICLO_W -> WHILE agregarWhile LPAREN . H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (58) H_EXP -> . T_EXP
    (59) H_EXP -> . T_EXP OR H_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    H_EXP                          shift and go to state 176
    T_EXP                          shift and go to state 100
    G_EXP                          shift and go to state 101
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 149

    (57) CICLO_F -> FROM agregarWhile VARIABLE . agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (105) agregarPilaOp -> .

    EQUALS          reduce using rule 105 (agregarPilaOp -> .)

    agregarPilaOp                  shift and go to state 177

state 150

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables . RPAREN V4 CUERPO

    RPAREN          shift and go to state 178


state 151

    (13) PARAMS -> TIPO NAME . agregarVarLista P1
    (124) agregarVarLista -> .

    COMMA           reduce using rule 124 (agregarVarLista -> .)
    RPAREN          reduce using rule 124 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 179

state 152

    (48) V3 -> VARIABLE popRead . COMMA V3
    (49) V3 -> VARIABLE popRead .

    COMMA           shift and go to state 180
    FUNC            reduce using rule 49 (V3 -> VARIABLE popRead .)
    MAIN            reduce using rule 49 (V3 -> VARIABLE popRead .)
    LBRACKET        reduce using rule 49 (V3 -> VARIABLE popRead .)
    RPAREN          reduce using rule 49 (V3 -> VARIABLE popRead .)


state 153

    (8) V3 -> borrarListaVar V1 .

    FUNC            reduce using rule 8 (V3 -> borrarListaVar V1 .)
    MAIN            reduce using rule 8 (V3 -> borrarListaVar V1 .)
    LBRACKET        reduce using rule 8 (V3 -> borrarListaVar V1 .)
    RPAREN          reduce using rule 8 (V3 -> borrarListaVar V1 .)


state 154

    (73) T -> PLUS meterOperador EXP .

    RSBRACKET       reduce using rule 73 (T -> PLUS meterOperador EXP .)
    COMMA           reduce using rule 73 (T -> PLUS meterOperador EXP .)
    RBRACKET        reduce using rule 73 (T -> PLUS meterOperador EXP .)
    GREATER_OR_EQUAL reduce using rule 73 (T -> PLUS meterOperador EXP .)
    LESS_OR_EQUAL   reduce using rule 73 (T -> PLUS meterOperador EXP .)
    GREATER_THAN    reduce using rule 73 (T -> PLUS meterOperador EXP .)
    LESS_THAN       reduce using rule 73 (T -> PLUS meterOperador EXP .)
    IS_EQUAL        reduce using rule 73 (T -> PLUS meterOperador EXP .)
    NOT_EQUAL       reduce using rule 73 (T -> PLUS meterOperador EXP .)
    AND             reduce using rule 73 (T -> PLUS meterOperador EXP .)
    OR              reduce using rule 73 (T -> PLUS meterOperador EXP .)
    RPAREN          reduce using rule 73 (T -> PLUS meterOperador EXP .)
    SEMICOLON       reduce using rule 73 (T -> PLUS meterOperador EXP .)
    TO              reduce using rule 73 (T -> PLUS meterOperador EXP .)
    DO              reduce using rule 73 (T -> PLUS meterOperador EXP .)


state 155

    (74) T -> MINUS meterOperador EXP .

    RSBRACKET       reduce using rule 74 (T -> MINUS meterOperador EXP .)
    COMMA           reduce using rule 74 (T -> MINUS meterOperador EXP .)
    RBRACKET        reduce using rule 74 (T -> MINUS meterOperador EXP .)
    GREATER_OR_EQUAL reduce using rule 74 (T -> MINUS meterOperador EXP .)
    LESS_OR_EQUAL   reduce using rule 74 (T -> MINUS meterOperador EXP .)
    GREATER_THAN    reduce using rule 74 (T -> MINUS meterOperador EXP .)
    LESS_THAN       reduce using rule 74 (T -> MINUS meterOperador EXP .)
    IS_EQUAL        reduce using rule 74 (T -> MINUS meterOperador EXP .)
    NOT_EQUAL       reduce using rule 74 (T -> MINUS meterOperador EXP .)
    AND             reduce using rule 74 (T -> MINUS meterOperador EXP .)
    OR              reduce using rule 74 (T -> MINUS meterOperador EXP .)
    RPAREN          reduce using rule 74 (T -> MINUS meterOperador EXP .)
    SEMICOLON       reduce using rule 74 (T -> MINUS meterOperador EXP .)
    TO              reduce using rule 74 (T -> MINUS meterOperador EXP .)
    DO              reduce using rule 74 (T -> MINUS meterOperador EXP .)


state 156

    (77) F2 -> DIVIDE meterOperador TERMINO .

    PLUS            reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    MINUS           reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    RSBRACKET       reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    COMMA           reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    RBRACKET        reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    GREATER_OR_EQUAL reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    LESS_OR_EQUAL   reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    GREATER_THAN    reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    LESS_THAN       reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    IS_EQUAL        reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    NOT_EQUAL       reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    AND             reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    OR              reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    RPAREN          reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    SEMICOLON       reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    TO              reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    DO              reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)


state 157

    (78) F2 -> MULTIPLY meterOperador TERMINO .

    PLUS            reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    MINUS           reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    RSBRACKET       reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    COMMA           reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    RBRACKET        reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    GREATER_OR_EQUAL reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    LESS_OR_EQUAL   reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    GREATER_THAN    reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    LESS_THAN       reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    IS_EQUAL        reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    NOT_EQUAL       reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    AND             reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    OR              reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    RPAREN          reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    SEMICOLON       reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    TO              reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    DO              reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)


state 158

    (80) FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .

    DIVIDE          reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    MULTIPLY        reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    PLUS            reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    MINUS           reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RSBRACKET       reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    COMMA           reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RBRACKET        reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    GREATER_OR_EQUAL reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    LESS_OR_EQUAL   reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    GREATER_THAN    reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    LESS_THAN       reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    IS_EQUAL        reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    NOT_EQUAL       reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    AND             reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    OR              reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RPAREN          reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    SEMICOLON       reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    TO              reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    DO              reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)


state 159

    (59) H_EXP -> T_EXP OR H_EXP .

    RPAREN          reduce using rule 59 (H_EXP -> T_EXP OR H_EXP .)


state 160

    (61) T_EXP -> G_EXP AND T_EXP .

    OR              reduce using rule 61 (T_EXP -> G_EXP AND T_EXP .)
    RPAREN          reduce using rule 61 (T_EXP -> G_EXP AND T_EXP .)


state 161

    (62) G_EXP -> EXP B popBool .

    AND             reduce using rule 62 (G_EXP -> EXP B popBool .)
    OR              reduce using rule 62 (G_EXP -> EXP B popBool .)
    RPAREN          reduce using rule 62 (G_EXP -> EXP B popBool .)


state 162

    (63) B -> GREATER_OR_EQUAL meterOperador . G_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    G_EXP                          shift and go to state 181
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 163

    (64) B -> LESS_OR_EQUAL meterOperador . G_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    G_EXP                          shift and go to state 182
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 164

    (65) B -> GREATER_THAN meterOperador . G_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    G_EXP                          shift and go to state 183
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 165

    (66) B -> LESS_THAN meterOperador . G_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    G_EXP                          shift and go to state 184
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 166

    (67) B -> IS_EQUAL meterOperador . G_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    G_EXP                          shift and go to state 185
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 167

    (68) B -> NOT_EQUAL meterOperador . G_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    G_EXP                          shift and go to state 186
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 168

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador . EXP popIgual SEMICOLON
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    VARIABLE                       shift and go to state 50
    EXP                            shift and go to state 187
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    LLAMADAF                       shift and go to state 51

state 169

    (42) LLAMADA -> NAME LPAREN E1 RPAREN . SEMICOLON
    (45) LLAMADAF -> NAME LPAREN E1 RPAREN .

    SEMICOLON       shift and go to state 188
    DIVIDE          reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MULTIPLY        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    PLUS            reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MINUS           reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    COMMA           reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RBRACKET        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RPAREN          reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)


state 170

    (46) RETORNO -> RETURN LPAREN EXP popReturn . RPAREN SEMICOLON

    RPAREN          shift and go to state 189


state 171

    (47) LECTURA -> READ LPAREN V3 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 172

    (50) ESCRITURA -> PRINT LPAREN E3 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 191


state 173

    (51) E3 -> S_EXP popPrint .
    (52) E3 -> S_EXP popPrint . COMMA E3

    RPAREN          reduce using rule 51 (E3 -> S_EXP popPrint .)
    COMMA           shift and go to state 192


state 174

    (70) S_EXP -> C_STRING agregarConstString .

    COMMA           reduce using rule 70 (S_EXP -> C_STRING agregarConstString .)
    RPAREN          reduce using rule 70 (S_EXP -> C_STRING agregarConstString .)


state 175

    (53) CONDICION -> IF LPAREN H_EXP RPAREN . gotoIf THEN CUERPO ELSE1 terminarGoto
    (98) gotoIf -> .

    THEN            reduce using rule 98 (gotoIf -> .)

    gotoIf                         shift and go to state 193

state 176

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP . RPAREN DO gotoIf CUERPO terminarWhile

    RPAREN          shift and go to state 194


state 177

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp . agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (87) agregarFrom -> .

    EQUALS          reduce using rule 87 (agregarFrom -> .)

    agregarFrom                    shift and go to state 195

state 178

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN . V4 CUERPO
    (11) V4 -> . VARS
    (12) V4 -> . empty
    (4) VARS -> . borrarListaVar VAR V1
    (86) empty -> .
    (125) borrarListaVar -> .

    LBRACKET        reduce using rule 86 (empty -> .)
    VAR             reduce using rule 125 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 8
    V4                             shift and go to state 196
    VARS                           shift and go to state 197
    empty                          shift and go to state 198

state 179

    (13) PARAMS -> TIPO NAME agregarVarLista . P1
    (14) P1 -> . P2
    (15) P1 -> . empty
    (16) P2 -> . COMMA PARAMS P1
    (86) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 202
    RPAREN          reduce using rule 86 (empty -> .)

  ! COMMA           [ reduce using rule 86 (empty -> .) ]

    P1                             shift and go to state 199
    P2                             shift and go to state 200
    empty                          shift and go to state 201

state 180

    (48) V3 -> VARIABLE popRead COMMA . V3
    (8) V3 -> . borrarListaVar V1
    (9) V3 -> . empty
    (48) V3 -> . VARIABLE popRead COMMA V3
    (49) V3 -> . VARIABLE popRead
    (125) borrarListaVar -> .
    (86) empty -> .
    (30) VARIABLE -> . NAME E2

    INT             reduce using rule 125 (borrarListaVar -> .)
    FLOAT           reduce using rule 125 (borrarListaVar -> .)
    CHAR            reduce using rule 125 (borrarListaVar -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    NAME            shift and go to state 31

    VARIABLE                       shift and go to state 117
    V3                             shift and go to state 203
    borrarListaVar                 shift and go to state 119
    empty                          shift and go to state 120

state 181

    (63) B -> GREATER_OR_EQUAL meterOperador G_EXP .

    AND             reduce using rule 63 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 63 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 63 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)


state 182

    (64) B -> LESS_OR_EQUAL meterOperador G_EXP .

    AND             reduce using rule 64 (B -> LESS_OR_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 64 (B -> LESS_OR_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 64 (B -> LESS_OR_EQUAL meterOperador G_EXP .)


state 183

    (65) B -> GREATER_THAN meterOperador G_EXP .

    AND             reduce using rule 65 (B -> GREATER_THAN meterOperador G_EXP .)
    OR              reduce using rule 65 (B -> GREATER_THAN meterOperador G_EXP .)
    RPAREN          reduce using rule 65 (B -> GREATER_THAN meterOperador G_EXP .)


state 184

    (66) B -> LESS_THAN meterOperador G_EXP .

    AND             reduce using rule 66 (B -> LESS_THAN meterOperador G_EXP .)
    OR              reduce using rule 66 (B -> LESS_THAN meterOperador G_EXP .)
    RPAREN          reduce using rule 66 (B -> LESS_THAN meterOperador G_EXP .)


state 185

    (67) B -> IS_EQUAL meterOperador G_EXP .

    AND             reduce using rule 67 (B -> IS_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 67 (B -> IS_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 67 (B -> IS_EQUAL meterOperador G_EXP .)


state 186

    (68) B -> NOT_EQUAL meterOperador G_EXP .

    AND             reduce using rule 68 (B -> NOT_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 68 (B -> NOT_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 68 (B -> NOT_EQUAL meterOperador G_EXP .)


state 187

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP . popIgual SEMICOLON
    (110) popIgual -> .

    SEMICOLON       reduce using rule 110 (popIgual -> .)

    popIgual                       shift and go to state 204

state 188

    (42) LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .

    NAME            reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    READ            reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    IF              reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    FROM            reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    C_INT           reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)


state 189

    (46) RETORNO -> RETURN LPAREN EXP popReturn RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 205


state 190

    (47) LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .

    NAME            reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    READ            reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    IF              reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    FROM            reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    C_INT           reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)


state 191

    (50) ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .

    NAME            reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    READ            reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    IF              reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    FROM            reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    C_INT           reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 50 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)


state 192

    (52) E3 -> S_EXP popPrint COMMA . E3
    (51) E3 -> . S_EXP popPrint
    (52) E3 -> . S_EXP popPrint COMMA E3
    (70) S_EXP -> . C_STRING agregarConstString
    (71) S_EXP -> . EXP
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    C_STRING        shift and go to state 145
    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    S_EXP                          shift and go to state 144
    E3                             shift and go to state 206
    EXP                            shift and go to state 146
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    VARIABLE                       shift and go to state 50
    LLAMADAF                       shift and go to state 51

state 193

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf . THEN CUERPO ELSE1 terminarGoto

    THEN            shift and go to state 207


state 194

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN . DO gotoIf CUERPO terminarWhile

    DO              shift and go to state 208


state 195

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom . EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile

    EQUALS          shift and go to state 209


state 196

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 54

    CUERPO                         shift and go to state 210

state 197

    (11) V4 -> VARS .

    LBRACKET        reduce using rule 11 (V4 -> VARS .)


state 198

    (12) V4 -> empty .

    LBRACKET        reduce using rule 12 (V4 -> empty .)


state 199

    (13) PARAMS -> TIPO NAME agregarVarLista P1 .

    RPAREN          reduce using rule 13 (PARAMS -> TIPO NAME agregarVarLista P1 .)
    COMMA           reduce using rule 13 (PARAMS -> TIPO NAME agregarVarLista P1 .)


state 200

    (14) P1 -> P2 .

    COMMA           reduce using rule 14 (P1 -> P2 .)
    RPAREN          reduce using rule 14 (P1 -> P2 .)


state 201

    (15) P1 -> empty .

    COMMA           reduce using rule 15 (P1 -> empty .)
    RPAREN          reduce using rule 15 (P1 -> empty .)


state 202

    (16) P2 -> COMMA . PARAMS P1
    (13) PARAMS -> . TIPO NAME agregarVarLista P1
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    PARAMS                         shift and go to state 211
    TIPO                           shift and go to state 116

state 203

    (48) V3 -> VARIABLE popRead COMMA V3 .

    FUNC            reduce using rule 48 (V3 -> VARIABLE popRead COMMA V3 .)
    MAIN            reduce using rule 48 (V3 -> VARIABLE popRead COMMA V3 .)
    LBRACKET        reduce using rule 48 (V3 -> VARIABLE popRead COMMA V3 .)
    RPAREN          reduce using rule 48 (V3 -> VARIABLE popRead COMMA V3 .)


state 204

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual . SEMICOLON

    SEMICOLON       shift and go to state 212


state 205

    (46) RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .

    NAME            reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    RETURN          reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    READ            reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    PRINT           reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    IF              reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    WHILE           reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    FROM            reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    LPAREN          reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    C_INT           reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    RPAREN          reduce using rule 46 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)


state 206

    (52) E3 -> S_EXP popPrint COMMA E3 .

    RPAREN          reduce using rule 52 (E3 -> S_EXP popPrint COMMA E3 .)


state 207

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN . CUERPO ELSE1 terminarGoto
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 54

    CUERPO                         shift and go to state 213

state 208

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO . gotoIf CUERPO terminarWhile
    (98) gotoIf -> .

    LBRACKET        reduce using rule 98 (gotoIf -> .)

    gotoIf                         shift and go to state 214

state 209

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS . meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (117) meterOperador -> .

    LPAREN          reduce using rule 117 (meterOperador -> .)
    C_INT           reduce using rule 117 (meterOperador -> .)
    C_FLOAT         reduce using rule 117 (meterOperador -> .)
    C_CHAR          reduce using rule 117 (meterOperador -> .)
    NAME            reduce using rule 117 (meterOperador -> .)

    meterOperador                  shift and go to state 215

state 210

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO .

    FUNC            reduce using rule 10 (FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO .)
    MAIN            reduce using rule 10 (FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO .)


state 211

    (16) P2 -> COMMA PARAMS . P1
    (14) P1 -> . P2
    (15) P1 -> . empty
    (16) P2 -> . COMMA PARAMS P1
    (86) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 202
    RPAREN          reduce using rule 86 (empty -> .)

  ! COMMA           [ reduce using rule 86 (empty -> .) ]

    P1                             shift and go to state 216
    P2                             shift and go to state 200
    empty                          shift and go to state 201

state 212

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .

    NAME            reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    RETURN          reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    READ            reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    PRINT           reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    IF              reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    WHILE           reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    FROM            reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    LPAREN          reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    C_INT           reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    C_FLOAT         reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    C_CHAR          reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    RBRACKET        reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    RPAREN          reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)


state 213

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO . ELSE1 terminarGoto
    (54) ELSE1 -> . ELSE gotoElse CUERPO
    (55) ELSE1 -> . empty
    (86) empty -> .

    ELSE            shift and go to state 218
    NAME            reduce using rule 86 (empty -> .)
    RETURN          reduce using rule 86 (empty -> .)
    READ            reduce using rule 86 (empty -> .)
    PRINT           reduce using rule 86 (empty -> .)
    IF              reduce using rule 86 (empty -> .)
    WHILE           reduce using rule 86 (empty -> .)
    FROM            reduce using rule 86 (empty -> .)
    LPAREN          reduce using rule 86 (empty -> .)
    C_INT           reduce using rule 86 (empty -> .)
    C_FLOAT         reduce using rule 86 (empty -> .)
    C_CHAR          reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)

    ELSE1                          shift and go to state 217
    empty                          shift and go to state 219

state 214

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf . CUERPO terminarWhile
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 54

    CUERPO                         shift and go to state 220

state 215

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador . EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    VARIABLE                       shift and go to state 50
    EXP                            shift and go to state 221
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    LLAMADAF                       shift and go to state 51

state 216

    (16) P2 -> COMMA PARAMS P1 .

    COMMA           reduce using rule 16 (P2 -> COMMA PARAMS P1 .)
    RPAREN          reduce using rule 16 (P2 -> COMMA PARAMS P1 .)


state 217

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 . terminarGoto
    (99) terminarGoto -> .

    NAME            reduce using rule 99 (terminarGoto -> .)
    RETURN          reduce using rule 99 (terminarGoto -> .)
    READ            reduce using rule 99 (terminarGoto -> .)
    PRINT           reduce using rule 99 (terminarGoto -> .)
    IF              reduce using rule 99 (terminarGoto -> .)
    WHILE           reduce using rule 99 (terminarGoto -> .)
    FROM            reduce using rule 99 (terminarGoto -> .)
    LPAREN          reduce using rule 99 (terminarGoto -> .)
    C_INT           reduce using rule 99 (terminarGoto -> .)
    C_FLOAT         reduce using rule 99 (terminarGoto -> .)
    C_CHAR          reduce using rule 99 (terminarGoto -> .)
    RBRACKET        reduce using rule 99 (terminarGoto -> .)
    RPAREN          reduce using rule 99 (terminarGoto -> .)

    terminarGoto                   shift and go to state 222

state 218

    (54) ELSE1 -> ELSE . gotoElse CUERPO
    (102) gotoElse -> .

    LBRACKET        reduce using rule 102 (gotoElse -> .)

    gotoElse                       shift and go to state 223

state 219

    (55) ELSE1 -> empty .

    NAME            reduce using rule 55 (ELSE1 -> empty .)
    RETURN          reduce using rule 55 (ELSE1 -> empty .)
    READ            reduce using rule 55 (ELSE1 -> empty .)
    PRINT           reduce using rule 55 (ELSE1 -> empty .)
    IF              reduce using rule 55 (ELSE1 -> empty .)
    WHILE           reduce using rule 55 (ELSE1 -> empty .)
    FROM            reduce using rule 55 (ELSE1 -> empty .)
    LPAREN          reduce using rule 55 (ELSE1 -> empty .)
    C_INT           reduce using rule 55 (ELSE1 -> empty .)
    C_FLOAT         reduce using rule 55 (ELSE1 -> empty .)
    C_CHAR          reduce using rule 55 (ELSE1 -> empty .)
    RBRACKET        reduce using rule 55 (ELSE1 -> empty .)
    RPAREN          reduce using rule 55 (ELSE1 -> empty .)


state 220

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO . terminarWhile
    (101) terminarWhile -> .

    NAME            reduce using rule 101 (terminarWhile -> .)
    RETURN          reduce using rule 101 (terminarWhile -> .)
    READ            reduce using rule 101 (terminarWhile -> .)
    PRINT           reduce using rule 101 (terminarWhile -> .)
    IF              reduce using rule 101 (terminarWhile -> .)
    WHILE           reduce using rule 101 (terminarWhile -> .)
    FROM            reduce using rule 101 (terminarWhile -> .)
    LPAREN          reduce using rule 101 (terminarWhile -> .)
    C_INT           reduce using rule 101 (terminarWhile -> .)
    C_FLOAT         reduce using rule 101 (terminarWhile -> .)
    C_CHAR          reduce using rule 101 (terminarWhile -> .)
    RBRACKET        reduce using rule 101 (terminarWhile -> .)
    RPAREN          reduce using rule 101 (terminarWhile -> .)

    terminarWhile                  shift and go to state 224

state 221

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP . popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (110) popIgual -> .

    TO              reduce using rule 110 (popIgual -> .)

    popIgual                       shift and go to state 225

state 222

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .

    NAME            reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RETURN          reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    READ            reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    PRINT           reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    IF              reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    WHILE           reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    FROM            reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    LPAREN          reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    C_INT           reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    C_FLOAT         reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    C_CHAR          reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RBRACKET        reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RPAREN          reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)


state 223

    (54) ELSE1 -> ELSE gotoElse . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 54

    CUERPO                         shift and go to state 226

state 224

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .

    NAME            reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RETURN          reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    READ            reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    PRINT           reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    IF              reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    WHILE           reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    FROM            reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    LPAREN          reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    C_INT           reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    C_FLOAT         reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    C_CHAR          reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RBRACKET        reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RPAREN          reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)


state 225

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual . TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile

    TO              shift and go to state 227


state 226

    (54) ELSE1 -> ELSE gotoElse CUERPO .

    NAME            reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    RETURN          reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    READ            reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    PRINT           reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    IF              reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    WHILE           reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    FROM            reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    LPAREN          reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    C_INT           reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    C_FLOAT         reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    C_CHAR          reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    RBRACKET        reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    RPAREN          reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)


state 227

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO . EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (72) EXP -> . TERMINO popSumaResta T
    (76) TERMINO -> . FACTOR popMultDiv F2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT agregarConstInt
    (82) FACTOR -> . C_FLOAT agregarConstFloat
    (83) FACTOR -> . C_CHAR agregarConstChar
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 46
    C_INT           shift and go to state 47
    C_FLOAT         shift and go to state 48
    C_CHAR          shift and go to state 49
    NAME            shift and go to state 52

    VARIABLE                       shift and go to state 50
    EXP                            shift and go to state 228
    TERMINO                        shift and go to state 44
    FACTOR                         shift and go to state 45
    LLAMADAF                       shift and go to state 51

state 228

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP . crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (88) crearCompFrom -> .

    DO              reduce using rule 88 (crearCompFrom -> .)

    crearCompFrom                  shift and go to state 229

state 229

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom . DO gotoIf CUERPO sumarFrom terminarWhile

    DO              shift and go to state 230


state 230

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO . gotoIf CUERPO sumarFrom terminarWhile
    (98) gotoIf -> .

    LBRACKET        reduce using rule 98 (gotoIf -> .)

    gotoIf                         shift and go to state 231

state 231

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf . CUERPO sumarFrom terminarWhile
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 54

    CUERPO                         shift and go to state 232

state 232

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO . sumarFrom terminarWhile
    (89) sumarFrom -> .

    NAME            reduce using rule 89 (sumarFrom -> .)
    RETURN          reduce using rule 89 (sumarFrom -> .)
    READ            reduce using rule 89 (sumarFrom -> .)
    PRINT           reduce using rule 89 (sumarFrom -> .)
    IF              reduce using rule 89 (sumarFrom -> .)
    WHILE           reduce using rule 89 (sumarFrom -> .)
    FROM            reduce using rule 89 (sumarFrom -> .)
    LPAREN          reduce using rule 89 (sumarFrom -> .)
    C_INT           reduce using rule 89 (sumarFrom -> .)
    C_FLOAT         reduce using rule 89 (sumarFrom -> .)
    C_CHAR          reduce using rule 89 (sumarFrom -> .)
    RBRACKET        reduce using rule 89 (sumarFrom -> .)
    RPAREN          reduce using rule 89 (sumarFrom -> .)

    sumarFrom                      shift and go to state 233

state 233

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom . terminarWhile
    (101) terminarWhile -> .

    NAME            reduce using rule 101 (terminarWhile -> .)
    RETURN          reduce using rule 101 (terminarWhile -> .)
    READ            reduce using rule 101 (terminarWhile -> .)
    PRINT           reduce using rule 101 (terminarWhile -> .)
    IF              reduce using rule 101 (terminarWhile -> .)
    WHILE           reduce using rule 101 (terminarWhile -> .)
    FROM            reduce using rule 101 (terminarWhile -> .)
    LPAREN          reduce using rule 101 (terminarWhile -> .)
    C_INT           reduce using rule 101 (terminarWhile -> .)
    C_FLOAT         reduce using rule 101 (terminarWhile -> .)
    C_CHAR          reduce using rule 101 (terminarWhile -> .)
    RBRACKET        reduce using rule 101 (terminarWhile -> .)
    RPAREN          reduce using rule 101 (terminarWhile -> .)

    terminarWhile                  shift and go to state 234

state 234

    (57) CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .

    NAME            reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    RETURN          reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    READ            reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    PRINT           reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    IF              reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    WHILE           reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    FROM            reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    LPAREN          reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    C_INT           reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    C_FLOAT         reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    C_CHAR          reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    RBRACKET        reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    RPAREN          reduce using rule 57 (CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 179 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 211 resolved as shift
