Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON VARS F PRINCIPAL printTodo
Rule 2     F -> FUNCION F
Rule 3     F -> empty
Rule 4     VARS -> borrarListaVar VAR V1
Rule 5     V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3
Rule 6     V2 -> COMMA VARIABLE agregarVarLista V2
Rule 7     V2 -> empty
Rule 8     V3 -> borrarListaVar V1
Rule 9     V3 -> empty
Rule 10    FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO
Rule 11    V4 -> VARS
Rule 12    V4 -> empty
Rule 13    PARAMS -> TIPO NAME agregarVarLista P1
Rule 14    P1 -> P2
Rule 15    P1 -> empty
Rule 16    P2 -> COMMA PARAMS P1
Rule 17    CUERPO -> LBRACKET E RBRACKET
Rule 18    E -> E1
Rule 19    E -> empty
Rule 20    E1 -> ESTATUTO
Rule 21    E1 -> ESTATUTO E1
Rule 22    TIPO -> INT
Rule 23    TIPO -> FLOAT
Rule 24    TIPO -> CHAR
Rule 25    TIPO_FUNCION -> INT
Rule 26    TIPO_FUNCION -> FLOAT
Rule 27    TIPO_FUNCION -> CHAR
Rule 28    TIPO_FUNCION -> VOID
Rule 29    PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO
Rule 30    VARIABLE -> NAME E2
Rule 31    E2 -> LSBRACKET EXP RSBRACKET
Rule 32    E2 -> empty
Rule 33    ESTATUTO -> ASIGNACION
Rule 34    ESTATUTO -> LLAMADA
Rule 35    ESTATUTO -> RETORNO
Rule 36    ESTATUTO -> LECTURA
Rule 37    ESTATUTO -> ESCRITURA
Rule 38    ESTATUTO -> CONDICION
Rule 39    ESTATUTO -> CICLO_W
Rule 40    ESTATUTO -> CICLO_F
Rule 41    ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
Rule 42    LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON
Rule 43    E1 -> EXP
Rule 44    E1 -> EXP COMMA E1
Rule 45    LLAMADAF -> NAME LPAREN E1 RPAREN
Rule 46    RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON
Rule 47    LECTURA -> READ LPAREN V3 RPAREN SEMICOLON
Rule 48    V3 -> VARIABLE COMMA V3
Rule 49    V3 -> VARIABLE
Rule 50    ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON
Rule 51    E2 -> S_EXP
Rule 52    E2 -> S_EXP COMMA E2
Rule 53    CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
Rule 54    ELSE1 -> ELSE gotoElse CUERPO
Rule 55    ELSE1 -> empty
Rule 56    CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
Rule 57    CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO
Rule 58    H_EXP -> T_EXP
Rule 59    H_EXP -> T_EXP OR H_EXP
Rule 60    T_EXP -> G_EXP
Rule 61    T_EXP -> G_EXP AND T_EXP
Rule 62    G_EXP -> EXP B popBool
Rule 63    B -> GREATER_OR_EQUAL meterOperador G_EXP
Rule 64    B -> LESS_OR_EQUAL meterOperador EXP
Rule 65    B -> GREATER_THAN meterOperador EXP
Rule 66    B -> LESS_THAN meterOperador EXP
Rule 67    B -> IS_EQUAL meterOperador EXP
Rule 68    B -> NOT_EQUAL meterOperador EXP
Rule 69    B -> empty
Rule 70    S_EXP -> C_STRING
Rule 71    S_EXP -> EXP
Rule 72    EXP -> TERMINO T popSumaResta
Rule 73    T -> PLUS meterOperador EXP
Rule 74    T -> MINUS meterOperador EXP
Rule 75    T -> empty
Rule 76    TERMINO -> FACTOR F2 popMultDiv
Rule 77    F2 -> DIVIDE meterOperador TERMINO
Rule 78    F2 -> MULTIPLY meterOperador TERMINO
Rule 79    F2 -> empty
Rule 80    FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
Rule 81    FACTOR -> C_INT
Rule 82    FACTOR -> C_FLOAT
Rule 83    FACTOR -> C_CHAR
Rule 84    FACTOR -> VARIABLE agregarPilaOp
Rule 85    FACTOR -> LLAMADAF
Rule 86    empty -> <empty>
Rule 87    gotoIf -> <empty>
Rule 88    terminarGoto -> <empty>
Rule 89    agregarWhile -> <empty>
Rule 90    terminarWhile -> <empty>
Rule 91    gotoElse -> <empty>
Rule 92    meterFondoFalso -> <empty>
Rule 93    quitarFondoFalso -> <empty>
Rule 94    agregarPilaOp -> <empty>
Rule 95    popBool -> <empty>
Rule 96    popIgual -> <empty>
Rule 97    popMultDiv -> <empty>
Rule 98    popSumaResta -> <empty>
Rule 99    meterIgual -> <empty>
Rule 100   meterBool -> <empty>
Rule 101   meterMultDiv -> <empty>
Rule 102   meterSumaResta -> <empty>
Rule 103   meterOperador -> <empty>
Rule 104   crearFuncGlobal -> <empty>
Rule 105   crearFuncMain -> <empty>
Rule 106   agregarFunc -> <empty>
Rule 107   agregarVariables -> <empty>
Rule 108   printFunciones -> <empty>
Rule 109   printTodo -> <empty>
Rule 110   agregarVarLista -> <empty>
Rule 111   borrarListaVar -> <empty>

Terminals, with rules where they appear

AND                  : 61
CHAR                 : 24 27
COMMA                : 6 16 44 48 52
C_CHAR               : 83
C_FLOAT              : 82
C_INT                : 57 57 81
C_STRING             : 70
DIVIDE               : 77
DO                   : 56 57
ELSE                 : 54
EQUALS               : 41 57
FLOAT                : 23 26
FROM                 : 57
FUNC                 : 10
GREATER_OR_EQUAL     : 63
GREATER_THAN         : 65
IF                   : 53
INT                  : 22 25
IS_EQUAL             : 67
LBRACKET             : 17
LESS_OR_EQUAL        : 64
LESS_THAN            : 66
LPAREN               : 10 29 42 45 46 47 50 53 56 80
LSBRACKET            : 31
MAIN                 : 29
MINUS                : 74
MULTIPLY             : 78
NAME                 : 1 10 13 30 42 45 57
NOT_EQUAL            : 68
OR                   : 59
PLUS                 : 73
PRINT                : 50
PROGRAM              : 1
RBRACKET             : 17
READ                 : 47
RETURN               : 46
RPAREN               : 10 29 42 45 46 47 50 53 56 80
RSBRACKET            : 31
SEMICOLON            : 1 5 41 42 46 47 50
THEN                 : 53
TO                   : 57
VAR                  : 4
VOID                 : 28
WHILE                : 56
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 33
B                    : 62
CICLO_F              : 40
CICLO_W              : 39
CONDICION            : 38
CUERPO               : 10 29 53 54 56 57
E                    : 17
E1                   : 18 21 42 44 45
E2                   : 30 50 52
ELSE1                : 53
ESCRITURA            : 37
ESTATUTO             : 20 21
EXP                  : 31 41 43 44 46 62 64 65 66 67 68 71 73 74
F                    : 1 2
F2                   : 76
FACTOR               : 76
FUNCION              : 2
G_EXP                : 60 61 63
H_EXP                : 53 56 59 80
LECTURA              : 36
LLAMADA              : 34
LLAMADAF             : 85
P1                   : 13 16
P2                   : 14
PARAMS               : 10 16
PRINCIPAL            : 1
PROGRAMA             : 0
RETORNO              : 35
S_EXP                : 51 52
T                    : 72
TERMINO              : 72 77 78
TIPO                 : 5 13
TIPO_FUNCION         : 10
T_EXP                : 58 59 61
V1                   : 4 8
V2                   : 5 6
V3                   : 5 47 48
V4                   : 10
VARIABLE             : 5 6 41 48 49 84
VARS                 : 1 11
agregarFunc          : 10
agregarPilaOp        : 41 84
agregarVarLista      : 5 6 13
agregarVariables     : 5 10
agregarWhile         : 56
borrarListaVar       : 4 8 10
crearFuncGlobal      : 1
crearFuncMain        : 29
empty                : 3 7 9 12 15 19 32 55 69 75 79
gotoElse             : 54
gotoIf               : 53 56
meterBool            : 
meterFondoFalso      : 80
meterIgual           : 
meterMultDiv         : 
meterOperador        : 41 63 64 65 66 67 68 73 74 77 78
meterSumaResta       : 
popBool              : 62
popIgual             : 41
popMultDiv           : 76
popSumaResta         : 72
printFunciones       : 
printTodo            : 1
quitarFondoFalso     : 80
terminarGoto         : 53
terminarWhile        : 56

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . crearFuncGlobal PROGRAM NAME SEMICOLON VARS F PRINCIPAL printTodo
    (104) crearFuncGlobal -> .

    PROGRAM         reduce using rule 104 (crearFuncGlobal -> .)

    PROGRAMA                       shift and go to state 1
    crearFuncGlobal                shift and go to state 2

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> crearFuncGlobal . PROGRAM NAME SEMICOLON VARS F PRINCIPAL printTodo

    PROGRAM         shift and go to state 3


state 3

    (1) PROGRAMA -> crearFuncGlobal PROGRAM . NAME SEMICOLON VARS F PRINCIPAL printTodo

    NAME            shift and go to state 4


state 4

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME . SEMICOLON VARS F PRINCIPAL printTodo

    SEMICOLON       shift and go to state 5


state 5

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON . VARS F PRINCIPAL printTodo
    (4) VARS -> . borrarListaVar VAR V1
    (111) borrarListaVar -> .

    VAR             reduce using rule 111 (borrarListaVar -> .)

    VARS                           shift and go to state 6
    borrarListaVar                 shift and go to state 7

state 6

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON VARS . F PRINCIPAL printTodo
    (2) F -> . FUNCION F
    (3) F -> . empty
    (10) FUNCION -> . FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO
    (86) empty -> .

    FUNC            shift and go to state 11
    MAIN            reduce using rule 86 (empty -> .)

    F                              shift and go to state 8
    FUNCION                        shift and go to state 9
    empty                          shift and go to state 10

state 7

    (4) VARS -> borrarListaVar . VAR V1

    VAR             shift and go to state 12


state 8

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON VARS F . PRINCIPAL printTodo
    (29) PRINCIPAL -> . MAIN LPAREN crearFuncMain RPAREN CUERPO

    MAIN            shift and go to state 14

    PRINCIPAL                      shift and go to state 13

state 9

    (2) F -> FUNCION . F
    (2) F -> . FUNCION F
    (3) F -> . empty
    (10) FUNCION -> . FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO
    (86) empty -> .

    FUNC            shift and go to state 11
    MAIN            reduce using rule 86 (empty -> .)

    FUNCION                        shift and go to state 9
    F                              shift and go to state 15
    empty                          shift and go to state 10

state 10

    (3) F -> empty .

    MAIN            reduce using rule 3 (F -> empty .)


state 11

    (10) FUNCION -> FUNC . TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO
    (25) TIPO_FUNCION -> . INT
    (26) TIPO_FUNCION -> . FLOAT
    (27) TIPO_FUNCION -> . CHAR
    (28) TIPO_FUNCION -> . VOID

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    VOID            shift and go to state 20

    TIPO_FUNCION                   shift and go to state 16

state 12

    (4) VARS -> borrarListaVar VAR . V1
    (5) V1 -> . TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    V1                             shift and go to state 21
    TIPO                           shift and go to state 22

state 13

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON VARS F PRINCIPAL . printTodo
    (109) printTodo -> .

    $end            reduce using rule 109 (printTodo -> .)

    printTodo                      shift and go to state 26

state 14

    (29) PRINCIPAL -> MAIN . LPAREN crearFuncMain RPAREN CUERPO

    LPAREN          shift and go to state 27


state 15

    (2) F -> FUNCION F .

    MAIN            reduce using rule 2 (F -> FUNCION F .)


state 16

    (10) FUNCION -> FUNC TIPO_FUNCION . NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO

    NAME            shift and go to state 28


state 17

    (25) TIPO_FUNCION -> INT .

    NAME            reduce using rule 25 (TIPO_FUNCION -> INT .)


state 18

    (26) TIPO_FUNCION -> FLOAT .

    NAME            reduce using rule 26 (TIPO_FUNCION -> FLOAT .)


state 19

    (27) TIPO_FUNCION -> CHAR .

    NAME            reduce using rule 27 (TIPO_FUNCION -> CHAR .)


state 20

    (28) TIPO_FUNCION -> VOID .

    NAME            reduce using rule 28 (TIPO_FUNCION -> VOID .)


state 21

    (4) VARS -> borrarListaVar VAR V1 .

    FUNC            reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)
    MAIN            reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)
    LBRACKET        reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)


state 22

    (5) V1 -> TIPO . VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3
    (30) VARIABLE -> . NAME E2

    NAME            shift and go to state 30

    VARIABLE                       shift and go to state 29

state 23

    (22) TIPO -> INT .

    NAME            reduce using rule 22 (TIPO -> INT .)


state 24

    (23) TIPO -> FLOAT .

    NAME            reduce using rule 23 (TIPO -> FLOAT .)


state 25

    (24) TIPO -> CHAR .

    NAME            reduce using rule 24 (TIPO -> CHAR .)


state 26

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON VARS F PRINCIPAL printTodo .

    $end            reduce using rule 1 (PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON VARS F PRINCIPAL printTodo .)


state 27

    (29) PRINCIPAL -> MAIN LPAREN . crearFuncMain RPAREN CUERPO
    (105) crearFuncMain -> .

    RPAREN          reduce using rule 105 (crearFuncMain -> .)

    crearFuncMain                  shift and go to state 31

state 28

    (10) FUNCION -> FUNC TIPO_FUNCION NAME . agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO
    (106) agregarFunc -> .

    LPAREN          reduce using rule 106 (agregarFunc -> .)

    agregarFunc                    shift and go to state 32

state 29

    (5) V1 -> TIPO VARIABLE . agregarVarLista V2 SEMICOLON agregarVariables V3
    (110) agregarVarLista -> .

    COMMA           reduce using rule 110 (agregarVarLista -> .)
    SEMICOLON       reduce using rule 110 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 33

state 30

    (30) VARIABLE -> NAME . E2
    (31) E2 -> . LSBRACKET EXP RSBRACKET
    (32) E2 -> . empty
    (51) E2 -> . S_EXP
    (52) E2 -> . S_EXP COMMA E2
    (86) empty -> .
    (70) S_EXP -> . C_STRING
    (71) S_EXP -> . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LSBRACKET       shift and go to state 36
    COMMA           reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    DIVIDE          reduce using rule 86 (empty -> .)
    MULTIPLY        reduce using rule 86 (empty -> .)
    PLUS            reduce using rule 86 (empty -> .)
    MINUS           reduce using rule 86 (empty -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    C_STRING        shift and go to state 40
    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    E2                             shift and go to state 35
    EXP                            shift and go to state 37
    empty                          shift and go to state 38
    S_EXP                          shift and go to state 39
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 31

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain . RPAREN CUERPO

    RPAREN          shift and go to state 49


state 32

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc . LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO

    LPAREN          shift and go to state 50


state 33

    (5) V1 -> TIPO VARIABLE agregarVarLista . V2 SEMICOLON agregarVariables V3
    (6) V2 -> . COMMA VARIABLE agregarVarLista V2
    (7) V2 -> . empty
    (86) empty -> .

    COMMA           shift and go to state 52
    SEMICOLON       reduce using rule 86 (empty -> .)

    V2                             shift and go to state 51
    empty                          shift and go to state 53

state 34

    (30) VARIABLE -> NAME . E2
    (45) LLAMADAF -> NAME . LPAREN E1 RPAREN
    (31) E2 -> . LSBRACKET EXP RSBRACKET
    (32) E2 -> . empty
    (51) E2 -> . S_EXP
    (52) E2 -> . S_EXP COMMA E2
    (86) empty -> .
    (70) S_EXP -> . C_STRING
    (71) S_EXP -> . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 54
    LSBRACKET       shift and go to state 36
    COMMA           reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    DIVIDE          reduce using rule 86 (empty -> .)
    MULTIPLY        reduce using rule 86 (empty -> .)
    PLUS            reduce using rule 86 (empty -> .)
    MINUS           reduce using rule 86 (empty -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    RSBRACKET       reduce using rule 86 (empty -> .)
    EQUALS          reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 86 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 86 (empty -> .)
    GREATER_THAN    reduce using rule 86 (empty -> .)
    LESS_THAN       reduce using rule 86 (empty -> .)
    IS_EQUAL        reduce using rule 86 (empty -> .)
    NOT_EQUAL       reduce using rule 86 (empty -> .)
    AND             reduce using rule 86 (empty -> .)
    OR              reduce using rule 86 (empty -> .)
    C_STRING        shift and go to state 40
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    E2                             shift and go to state 35
    EXP                            shift and go to state 37
    empty                          shift and go to state 38
    S_EXP                          shift and go to state 39
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 35

    (30) VARIABLE -> NAME E2 .

    COMMA           reduce using rule 30 (VARIABLE -> NAME E2 .)
    SEMICOLON       reduce using rule 30 (VARIABLE -> NAME E2 .)
    DIVIDE          reduce using rule 30 (VARIABLE -> NAME E2 .)
    MULTIPLY        reduce using rule 30 (VARIABLE -> NAME E2 .)
    PLUS            reduce using rule 30 (VARIABLE -> NAME E2 .)
    MINUS           reduce using rule 30 (VARIABLE -> NAME E2 .)
    FUNC            reduce using rule 30 (VARIABLE -> NAME E2 .)
    MAIN            reduce using rule 30 (VARIABLE -> NAME E2 .)
    LBRACKET        reduce using rule 30 (VARIABLE -> NAME E2 .)
    RPAREN          reduce using rule 30 (VARIABLE -> NAME E2 .)
    RSBRACKET       reduce using rule 30 (VARIABLE -> NAME E2 .)
    EQUALS          reduce using rule 30 (VARIABLE -> NAME E2 .)
    RBRACKET        reduce using rule 30 (VARIABLE -> NAME E2 .)
    GREATER_OR_EQUAL reduce using rule 30 (VARIABLE -> NAME E2 .)
    LESS_OR_EQUAL   reduce using rule 30 (VARIABLE -> NAME E2 .)
    GREATER_THAN    reduce using rule 30 (VARIABLE -> NAME E2 .)
    LESS_THAN       reduce using rule 30 (VARIABLE -> NAME E2 .)
    IS_EQUAL        reduce using rule 30 (VARIABLE -> NAME E2 .)
    NOT_EQUAL       reduce using rule 30 (VARIABLE -> NAME E2 .)
    AND             reduce using rule 30 (VARIABLE -> NAME E2 .)
    OR              reduce using rule 30 (VARIABLE -> NAME E2 .)


state 36

    (31) E2 -> LSBRACKET . EXP RSBRACKET
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    EXP                            shift and go to state 55
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 37

    (71) S_EXP -> EXP .

    COMMA           reduce using rule 71 (S_EXP -> EXP .)
    SEMICOLON       reduce using rule 71 (S_EXP -> EXP .)
    DIVIDE          reduce using rule 71 (S_EXP -> EXP .)
    MULTIPLY        reduce using rule 71 (S_EXP -> EXP .)
    PLUS            reduce using rule 71 (S_EXP -> EXP .)
    MINUS           reduce using rule 71 (S_EXP -> EXP .)
    FUNC            reduce using rule 71 (S_EXP -> EXP .)
    MAIN            reduce using rule 71 (S_EXP -> EXP .)
    LBRACKET        reduce using rule 71 (S_EXP -> EXP .)
    RPAREN          reduce using rule 71 (S_EXP -> EXP .)
    RSBRACKET       reduce using rule 71 (S_EXP -> EXP .)
    EQUALS          reduce using rule 71 (S_EXP -> EXP .)
    RBRACKET        reduce using rule 71 (S_EXP -> EXP .)
    GREATER_OR_EQUAL reduce using rule 71 (S_EXP -> EXP .)
    LESS_OR_EQUAL   reduce using rule 71 (S_EXP -> EXP .)
    GREATER_THAN    reduce using rule 71 (S_EXP -> EXP .)
    LESS_THAN       reduce using rule 71 (S_EXP -> EXP .)
    IS_EQUAL        reduce using rule 71 (S_EXP -> EXP .)
    NOT_EQUAL       reduce using rule 71 (S_EXP -> EXP .)
    AND             reduce using rule 71 (S_EXP -> EXP .)
    OR              reduce using rule 71 (S_EXP -> EXP .)


state 38

    (32) E2 -> empty .

    COMMA           reduce using rule 32 (E2 -> empty .)
    SEMICOLON       reduce using rule 32 (E2 -> empty .)
    DIVIDE          reduce using rule 32 (E2 -> empty .)
    MULTIPLY        reduce using rule 32 (E2 -> empty .)
    PLUS            reduce using rule 32 (E2 -> empty .)
    MINUS           reduce using rule 32 (E2 -> empty .)
    FUNC            reduce using rule 32 (E2 -> empty .)
    MAIN            reduce using rule 32 (E2 -> empty .)
    LBRACKET        reduce using rule 32 (E2 -> empty .)
    RPAREN          reduce using rule 32 (E2 -> empty .)
    RSBRACKET       reduce using rule 32 (E2 -> empty .)
    EQUALS          reduce using rule 32 (E2 -> empty .)
    RBRACKET        reduce using rule 32 (E2 -> empty .)
    GREATER_OR_EQUAL reduce using rule 32 (E2 -> empty .)
    LESS_OR_EQUAL   reduce using rule 32 (E2 -> empty .)
    GREATER_THAN    reduce using rule 32 (E2 -> empty .)
    LESS_THAN       reduce using rule 32 (E2 -> empty .)
    IS_EQUAL        reduce using rule 32 (E2 -> empty .)
    NOT_EQUAL       reduce using rule 32 (E2 -> empty .)
    AND             reduce using rule 32 (E2 -> empty .)
    OR              reduce using rule 32 (E2 -> empty .)


state 39

    (51) E2 -> S_EXP .
    (52) E2 -> S_EXP . COMMA E2

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 51 (E2 -> S_EXP .)
    DIVIDE          reduce using rule 51 (E2 -> S_EXP .)
    MULTIPLY        reduce using rule 51 (E2 -> S_EXP .)
    PLUS            reduce using rule 51 (E2 -> S_EXP .)
    MINUS           reduce using rule 51 (E2 -> S_EXP .)
    FUNC            reduce using rule 51 (E2 -> S_EXP .)
    MAIN            reduce using rule 51 (E2 -> S_EXP .)
    LBRACKET        reduce using rule 51 (E2 -> S_EXP .)
    RPAREN          reduce using rule 51 (E2 -> S_EXP .)
    RSBRACKET       reduce using rule 51 (E2 -> S_EXP .)
    EQUALS          reduce using rule 51 (E2 -> S_EXP .)
    RBRACKET        reduce using rule 51 (E2 -> S_EXP .)
    GREATER_OR_EQUAL reduce using rule 51 (E2 -> S_EXP .)
    LESS_OR_EQUAL   reduce using rule 51 (E2 -> S_EXP .)
    GREATER_THAN    reduce using rule 51 (E2 -> S_EXP .)
    LESS_THAN       reduce using rule 51 (E2 -> S_EXP .)
    IS_EQUAL        reduce using rule 51 (E2 -> S_EXP .)
    NOT_EQUAL       reduce using rule 51 (E2 -> S_EXP .)
    AND             reduce using rule 51 (E2 -> S_EXP .)
    OR              reduce using rule 51 (E2 -> S_EXP .)
    COMMA           shift and go to state 56

  ! COMMA           [ reduce using rule 51 (E2 -> S_EXP .) ]


state 40

    (70) S_EXP -> C_STRING .

    COMMA           reduce using rule 70 (S_EXP -> C_STRING .)
    SEMICOLON       reduce using rule 70 (S_EXP -> C_STRING .)
    DIVIDE          reduce using rule 70 (S_EXP -> C_STRING .)
    MULTIPLY        reduce using rule 70 (S_EXP -> C_STRING .)
    PLUS            reduce using rule 70 (S_EXP -> C_STRING .)
    MINUS           reduce using rule 70 (S_EXP -> C_STRING .)
    FUNC            reduce using rule 70 (S_EXP -> C_STRING .)
    MAIN            reduce using rule 70 (S_EXP -> C_STRING .)
    LBRACKET        reduce using rule 70 (S_EXP -> C_STRING .)
    RPAREN          reduce using rule 70 (S_EXP -> C_STRING .)
    RSBRACKET       reduce using rule 70 (S_EXP -> C_STRING .)
    EQUALS          reduce using rule 70 (S_EXP -> C_STRING .)
    RBRACKET        reduce using rule 70 (S_EXP -> C_STRING .)
    GREATER_OR_EQUAL reduce using rule 70 (S_EXP -> C_STRING .)
    LESS_OR_EQUAL   reduce using rule 70 (S_EXP -> C_STRING .)
    GREATER_THAN    reduce using rule 70 (S_EXP -> C_STRING .)
    LESS_THAN       reduce using rule 70 (S_EXP -> C_STRING .)
    IS_EQUAL        reduce using rule 70 (S_EXP -> C_STRING .)
    NOT_EQUAL       reduce using rule 70 (S_EXP -> C_STRING .)
    AND             reduce using rule 70 (S_EXP -> C_STRING .)
    OR              reduce using rule 70 (S_EXP -> C_STRING .)


state 41

    (72) EXP -> TERMINO . T popSumaResta
    (73) T -> . PLUS meterOperador EXP
    (74) T -> . MINUS meterOperador EXP
    (75) T -> . empty
    (86) empty -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    COMMA           reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    DIVIDE          reduce using rule 86 (empty -> .)
    MULTIPLY        reduce using rule 86 (empty -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    RSBRACKET       reduce using rule 86 (empty -> .)
    EQUALS          reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 86 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 86 (empty -> .)
    GREATER_THAN    reduce using rule 86 (empty -> .)
    LESS_THAN       reduce using rule 86 (empty -> .)
    IS_EQUAL        reduce using rule 86 (empty -> .)
    NOT_EQUAL       reduce using rule 86 (empty -> .)
    AND             reduce using rule 86 (empty -> .)
    OR              reduce using rule 86 (empty -> .)

  ! PLUS            [ reduce using rule 86 (empty -> .) ]
  ! MINUS           [ reduce using rule 86 (empty -> .) ]

    T                              shift and go to state 57
    empty                          shift and go to state 60

state 42

    (76) TERMINO -> FACTOR . F2 popMultDiv
    (77) F2 -> . DIVIDE meterOperador TERMINO
    (78) F2 -> . MULTIPLY meterOperador TERMINO
    (79) F2 -> . empty
    (86) empty -> .

  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
    DIVIDE          shift and go to state 62
    MULTIPLY        shift and go to state 63
    COMMA           reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    PLUS            reduce using rule 86 (empty -> .)
    MINUS           reduce using rule 86 (empty -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    RSBRACKET       reduce using rule 86 (empty -> .)
    EQUALS          reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 86 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 86 (empty -> .)
    GREATER_THAN    reduce using rule 86 (empty -> .)
    LESS_THAN       reduce using rule 86 (empty -> .)
    IS_EQUAL        reduce using rule 86 (empty -> .)
    NOT_EQUAL       reduce using rule 86 (empty -> .)
    AND             reduce using rule 86 (empty -> .)
    OR              reduce using rule 86 (empty -> .)

  ! DIVIDE          [ reduce using rule 86 (empty -> .) ]
  ! MULTIPLY        [ reduce using rule 86 (empty -> .) ]

    F2                             shift and go to state 61
    empty                          shift and go to state 64

state 43

    (80) FACTOR -> LPAREN . meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (92) meterFondoFalso -> .

    LPAREN          reduce using rule 92 (meterFondoFalso -> .)
    C_INT           reduce using rule 92 (meterFondoFalso -> .)
    C_FLOAT         reduce using rule 92 (meterFondoFalso -> .)
    C_CHAR          reduce using rule 92 (meterFondoFalso -> .)
    NAME            reduce using rule 92 (meterFondoFalso -> .)

    meterFondoFalso                shift and go to state 65

state 44

    (81) FACTOR -> C_INT .

    COMMA           reduce using rule 81 (FACTOR -> C_INT .)
    SEMICOLON       reduce using rule 81 (FACTOR -> C_INT .)
    DIVIDE          reduce using rule 81 (FACTOR -> C_INT .)
    MULTIPLY        reduce using rule 81 (FACTOR -> C_INT .)
    PLUS            reduce using rule 81 (FACTOR -> C_INT .)
    MINUS           reduce using rule 81 (FACTOR -> C_INT .)
    FUNC            reduce using rule 81 (FACTOR -> C_INT .)
    MAIN            reduce using rule 81 (FACTOR -> C_INT .)
    LBRACKET        reduce using rule 81 (FACTOR -> C_INT .)
    RPAREN          reduce using rule 81 (FACTOR -> C_INT .)
    RSBRACKET       reduce using rule 81 (FACTOR -> C_INT .)
    EQUALS          reduce using rule 81 (FACTOR -> C_INT .)
    RBRACKET        reduce using rule 81 (FACTOR -> C_INT .)
    GREATER_OR_EQUAL reduce using rule 81 (FACTOR -> C_INT .)
    LESS_OR_EQUAL   reduce using rule 81 (FACTOR -> C_INT .)
    GREATER_THAN    reduce using rule 81 (FACTOR -> C_INT .)
    LESS_THAN       reduce using rule 81 (FACTOR -> C_INT .)
    IS_EQUAL        reduce using rule 81 (FACTOR -> C_INT .)
    NOT_EQUAL       reduce using rule 81 (FACTOR -> C_INT .)
    AND             reduce using rule 81 (FACTOR -> C_INT .)
    OR              reduce using rule 81 (FACTOR -> C_INT .)


state 45

    (82) FACTOR -> C_FLOAT .

    COMMA           reduce using rule 82 (FACTOR -> C_FLOAT .)
    SEMICOLON       reduce using rule 82 (FACTOR -> C_FLOAT .)
    DIVIDE          reduce using rule 82 (FACTOR -> C_FLOAT .)
    MULTIPLY        reduce using rule 82 (FACTOR -> C_FLOAT .)
    PLUS            reduce using rule 82 (FACTOR -> C_FLOAT .)
    MINUS           reduce using rule 82 (FACTOR -> C_FLOAT .)
    FUNC            reduce using rule 82 (FACTOR -> C_FLOAT .)
    MAIN            reduce using rule 82 (FACTOR -> C_FLOAT .)
    LBRACKET        reduce using rule 82 (FACTOR -> C_FLOAT .)
    RPAREN          reduce using rule 82 (FACTOR -> C_FLOAT .)
    RSBRACKET       reduce using rule 82 (FACTOR -> C_FLOAT .)
    EQUALS          reduce using rule 82 (FACTOR -> C_FLOAT .)
    RBRACKET        reduce using rule 82 (FACTOR -> C_FLOAT .)
    GREATER_OR_EQUAL reduce using rule 82 (FACTOR -> C_FLOAT .)
    LESS_OR_EQUAL   reduce using rule 82 (FACTOR -> C_FLOAT .)
    GREATER_THAN    reduce using rule 82 (FACTOR -> C_FLOAT .)
    LESS_THAN       reduce using rule 82 (FACTOR -> C_FLOAT .)
    IS_EQUAL        reduce using rule 82 (FACTOR -> C_FLOAT .)
    NOT_EQUAL       reduce using rule 82 (FACTOR -> C_FLOAT .)
    AND             reduce using rule 82 (FACTOR -> C_FLOAT .)
    OR              reduce using rule 82 (FACTOR -> C_FLOAT .)


state 46

    (83) FACTOR -> C_CHAR .

    COMMA           reduce using rule 83 (FACTOR -> C_CHAR .)
    SEMICOLON       reduce using rule 83 (FACTOR -> C_CHAR .)
    DIVIDE          reduce using rule 83 (FACTOR -> C_CHAR .)
    MULTIPLY        reduce using rule 83 (FACTOR -> C_CHAR .)
    PLUS            reduce using rule 83 (FACTOR -> C_CHAR .)
    MINUS           reduce using rule 83 (FACTOR -> C_CHAR .)
    FUNC            reduce using rule 83 (FACTOR -> C_CHAR .)
    MAIN            reduce using rule 83 (FACTOR -> C_CHAR .)
    LBRACKET        reduce using rule 83 (FACTOR -> C_CHAR .)
    RPAREN          reduce using rule 83 (FACTOR -> C_CHAR .)
    RSBRACKET       reduce using rule 83 (FACTOR -> C_CHAR .)
    EQUALS          reduce using rule 83 (FACTOR -> C_CHAR .)
    RBRACKET        reduce using rule 83 (FACTOR -> C_CHAR .)
    GREATER_OR_EQUAL reduce using rule 83 (FACTOR -> C_CHAR .)
    LESS_OR_EQUAL   reduce using rule 83 (FACTOR -> C_CHAR .)
    GREATER_THAN    reduce using rule 83 (FACTOR -> C_CHAR .)
    LESS_THAN       reduce using rule 83 (FACTOR -> C_CHAR .)
    IS_EQUAL        reduce using rule 83 (FACTOR -> C_CHAR .)
    NOT_EQUAL       reduce using rule 83 (FACTOR -> C_CHAR .)
    AND             reduce using rule 83 (FACTOR -> C_CHAR .)
    OR              reduce using rule 83 (FACTOR -> C_CHAR .)


state 47

    (84) FACTOR -> VARIABLE . agregarPilaOp
    (94) agregarPilaOp -> .

    COMMA           reduce using rule 94 (agregarPilaOp -> .)
    SEMICOLON       reduce using rule 94 (agregarPilaOp -> .)
    DIVIDE          reduce using rule 94 (agregarPilaOp -> .)
    MULTIPLY        reduce using rule 94 (agregarPilaOp -> .)
    PLUS            reduce using rule 94 (agregarPilaOp -> .)
    MINUS           reduce using rule 94 (agregarPilaOp -> .)
    FUNC            reduce using rule 94 (agregarPilaOp -> .)
    MAIN            reduce using rule 94 (agregarPilaOp -> .)
    LBRACKET        reduce using rule 94 (agregarPilaOp -> .)
    RPAREN          reduce using rule 94 (agregarPilaOp -> .)
    RSBRACKET       reduce using rule 94 (agregarPilaOp -> .)
    EQUALS          reduce using rule 94 (agregarPilaOp -> .)
    RBRACKET        reduce using rule 94 (agregarPilaOp -> .)
    GREATER_OR_EQUAL reduce using rule 94 (agregarPilaOp -> .)
    LESS_OR_EQUAL   reduce using rule 94 (agregarPilaOp -> .)
    GREATER_THAN    reduce using rule 94 (agregarPilaOp -> .)
    LESS_THAN       reduce using rule 94 (agregarPilaOp -> .)
    IS_EQUAL        reduce using rule 94 (agregarPilaOp -> .)
    NOT_EQUAL       reduce using rule 94 (agregarPilaOp -> .)
    AND             reduce using rule 94 (agregarPilaOp -> .)
    OR              reduce using rule 94 (agregarPilaOp -> .)

    agregarPilaOp                  shift and go to state 66

state 48

    (85) FACTOR -> LLAMADAF .

    COMMA           reduce using rule 85 (FACTOR -> LLAMADAF .)
    SEMICOLON       reduce using rule 85 (FACTOR -> LLAMADAF .)
    DIVIDE          reduce using rule 85 (FACTOR -> LLAMADAF .)
    MULTIPLY        reduce using rule 85 (FACTOR -> LLAMADAF .)
    PLUS            reduce using rule 85 (FACTOR -> LLAMADAF .)
    MINUS           reduce using rule 85 (FACTOR -> LLAMADAF .)
    FUNC            reduce using rule 85 (FACTOR -> LLAMADAF .)
    MAIN            reduce using rule 85 (FACTOR -> LLAMADAF .)
    LBRACKET        reduce using rule 85 (FACTOR -> LLAMADAF .)
    RPAREN          reduce using rule 85 (FACTOR -> LLAMADAF .)
    RSBRACKET       reduce using rule 85 (FACTOR -> LLAMADAF .)
    EQUALS          reduce using rule 85 (FACTOR -> LLAMADAF .)
    RBRACKET        reduce using rule 85 (FACTOR -> LLAMADAF .)
    GREATER_OR_EQUAL reduce using rule 85 (FACTOR -> LLAMADAF .)
    LESS_OR_EQUAL   reduce using rule 85 (FACTOR -> LLAMADAF .)
    GREATER_THAN    reduce using rule 85 (FACTOR -> LLAMADAF .)
    LESS_THAN       reduce using rule 85 (FACTOR -> LLAMADAF .)
    IS_EQUAL        reduce using rule 85 (FACTOR -> LLAMADAF .)
    NOT_EQUAL       reduce using rule 85 (FACTOR -> LLAMADAF .)
    AND             reduce using rule 85 (FACTOR -> LLAMADAF .)
    OR              reduce using rule 85 (FACTOR -> LLAMADAF .)


state 49

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 68

    CUERPO                         shift and go to state 67

state 50

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN . borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO
    (111) borrarListaVar -> .

    INT             reduce using rule 111 (borrarListaVar -> .)
    FLOAT           reduce using rule 111 (borrarListaVar -> .)
    CHAR            reduce using rule 111 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 69

state 51

    (5) V1 -> TIPO VARIABLE agregarVarLista V2 . SEMICOLON agregarVariables V3

    SEMICOLON       shift and go to state 70


state 52

    (6) V2 -> COMMA . VARIABLE agregarVarLista V2
    (30) VARIABLE -> . NAME E2

    NAME            shift and go to state 30

    VARIABLE                       shift and go to state 71

state 53

    (7) V2 -> empty .

    SEMICOLON       reduce using rule 7 (V2 -> empty .)


state 54

    (45) LLAMADAF -> NAME LPAREN . E1 RPAREN
    (80) FACTOR -> LPAREN . meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (92) meterFondoFalso -> .
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO T popSumaResta
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E2 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM NAME EQUALS C_INT TO C_INT DO CUERPO
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for C_INT resolved as shift
  ! shift/reduce conflict for C_FLOAT resolved as shift
  ! shift/reduce conflict for C_CHAR resolved as shift
    NAME            shift and go to state 72
    RETURN          shift and go to state 85
    READ            shift and go to state 86
    PRINT           shift and go to state 87
    IF              shift and go to state 88
    WHILE           shift and go to state 89
    FROM            shift and go to state 90
    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46

  ! LPAREN          [ reduce using rule 92 (meterFondoFalso -> .) ]
  ! C_INT           [ reduce using rule 92 (meterFondoFalso -> .) ]
  ! C_FLOAT         [ reduce using rule 92 (meterFondoFalso -> .) ]
  ! C_CHAR          [ reduce using rule 92 (meterFondoFalso -> .) ]
  ! NAME            [ reduce using rule 92 (meterFondoFalso -> .) ]

    E1                             shift and go to state 73
    meterFondoFalso                shift and go to state 65
    ESTATUTO                       shift and go to state 74
    EXP                            shift and go to state 75
    ASIGNACION                     shift and go to state 76
    LLAMADA                        shift and go to state 77
    RETORNO                        shift and go to state 78
    LECTURA                        shift and go to state 79
    ESCRITURA                      shift and go to state 80
    CONDICION                      shift and go to state 81
    CICLO_W                        shift and go to state 82
    CICLO_F                        shift and go to state 83
    TERMINO                        shift and go to state 41
    VARIABLE                       shift and go to state 84
    FACTOR                         shift and go to state 42
    LLAMADAF                       shift and go to state 48

state 55

    (31) E2 -> LSBRACKET EXP . RSBRACKET

    RSBRACKET       shift and go to state 91


state 56

    (52) E2 -> S_EXP COMMA . E2
    (31) E2 -> . LSBRACKET EXP RSBRACKET
    (32) E2 -> . empty
    (51) E2 -> . S_EXP
    (52) E2 -> . S_EXP COMMA E2
    (86) empty -> .
    (70) S_EXP -> . C_STRING
    (71) S_EXP -> . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LSBRACKET       shift and go to state 36
    COMMA           reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    DIVIDE          reduce using rule 86 (empty -> .)
    MULTIPLY        reduce using rule 86 (empty -> .)
    PLUS            reduce using rule 86 (empty -> .)
    MINUS           reduce using rule 86 (empty -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    RSBRACKET       reduce using rule 86 (empty -> .)
    EQUALS          reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 86 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 86 (empty -> .)
    GREATER_THAN    reduce using rule 86 (empty -> .)
    LESS_THAN       reduce using rule 86 (empty -> .)
    IS_EQUAL        reduce using rule 86 (empty -> .)
    NOT_EQUAL       reduce using rule 86 (empty -> .)
    AND             reduce using rule 86 (empty -> .)
    OR              reduce using rule 86 (empty -> .)
    C_STRING        shift and go to state 40
    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    S_EXP                          shift and go to state 39
    E2                             shift and go to state 92
    EXP                            shift and go to state 37
    empty                          shift and go to state 38
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 57

    (72) EXP -> TERMINO T . popSumaResta
    (98) popSumaResta -> .

    COMMA           reduce using rule 98 (popSumaResta -> .)
    SEMICOLON       reduce using rule 98 (popSumaResta -> .)
    DIVIDE          reduce using rule 98 (popSumaResta -> .)
    MULTIPLY        reduce using rule 98 (popSumaResta -> .)
    PLUS            reduce using rule 98 (popSumaResta -> .)
    MINUS           reduce using rule 98 (popSumaResta -> .)
    FUNC            reduce using rule 98 (popSumaResta -> .)
    MAIN            reduce using rule 98 (popSumaResta -> .)
    LBRACKET        reduce using rule 98 (popSumaResta -> .)
    RPAREN          reduce using rule 98 (popSumaResta -> .)
    RSBRACKET       reduce using rule 98 (popSumaResta -> .)
    EQUALS          reduce using rule 98 (popSumaResta -> .)
    RBRACKET        reduce using rule 98 (popSumaResta -> .)
    GREATER_OR_EQUAL reduce using rule 98 (popSumaResta -> .)
    LESS_OR_EQUAL   reduce using rule 98 (popSumaResta -> .)
    GREATER_THAN    reduce using rule 98 (popSumaResta -> .)
    LESS_THAN       reduce using rule 98 (popSumaResta -> .)
    IS_EQUAL        reduce using rule 98 (popSumaResta -> .)
    NOT_EQUAL       reduce using rule 98 (popSumaResta -> .)
    AND             reduce using rule 98 (popSumaResta -> .)
    OR              reduce using rule 98 (popSumaResta -> .)

    popSumaResta                   shift and go to state 93

state 58

    (73) T -> PLUS . meterOperador EXP
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 94

state 59

    (74) T -> MINUS . meterOperador EXP
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 95

state 60

    (75) T -> empty .

    COMMA           reduce using rule 75 (T -> empty .)
    SEMICOLON       reduce using rule 75 (T -> empty .)
    DIVIDE          reduce using rule 75 (T -> empty .)
    MULTIPLY        reduce using rule 75 (T -> empty .)
    PLUS            reduce using rule 75 (T -> empty .)
    MINUS           reduce using rule 75 (T -> empty .)
    FUNC            reduce using rule 75 (T -> empty .)
    MAIN            reduce using rule 75 (T -> empty .)
    LBRACKET        reduce using rule 75 (T -> empty .)
    RPAREN          reduce using rule 75 (T -> empty .)
    RSBRACKET       reduce using rule 75 (T -> empty .)
    EQUALS          reduce using rule 75 (T -> empty .)
    RBRACKET        reduce using rule 75 (T -> empty .)
    GREATER_OR_EQUAL reduce using rule 75 (T -> empty .)
    LESS_OR_EQUAL   reduce using rule 75 (T -> empty .)
    GREATER_THAN    reduce using rule 75 (T -> empty .)
    LESS_THAN       reduce using rule 75 (T -> empty .)
    IS_EQUAL        reduce using rule 75 (T -> empty .)
    NOT_EQUAL       reduce using rule 75 (T -> empty .)
    AND             reduce using rule 75 (T -> empty .)
    OR              reduce using rule 75 (T -> empty .)


state 61

    (76) TERMINO -> FACTOR F2 . popMultDiv
    (97) popMultDiv -> .

    COMMA           reduce using rule 97 (popMultDiv -> .)
    SEMICOLON       reduce using rule 97 (popMultDiv -> .)
    DIVIDE          reduce using rule 97 (popMultDiv -> .)
    MULTIPLY        reduce using rule 97 (popMultDiv -> .)
    PLUS            reduce using rule 97 (popMultDiv -> .)
    MINUS           reduce using rule 97 (popMultDiv -> .)
    FUNC            reduce using rule 97 (popMultDiv -> .)
    MAIN            reduce using rule 97 (popMultDiv -> .)
    LBRACKET        reduce using rule 97 (popMultDiv -> .)
    RPAREN          reduce using rule 97 (popMultDiv -> .)
    RSBRACKET       reduce using rule 97 (popMultDiv -> .)
    EQUALS          reduce using rule 97 (popMultDiv -> .)
    RBRACKET        reduce using rule 97 (popMultDiv -> .)
    GREATER_OR_EQUAL reduce using rule 97 (popMultDiv -> .)
    LESS_OR_EQUAL   reduce using rule 97 (popMultDiv -> .)
    GREATER_THAN    reduce using rule 97 (popMultDiv -> .)
    LESS_THAN       reduce using rule 97 (popMultDiv -> .)
    IS_EQUAL        reduce using rule 97 (popMultDiv -> .)
    NOT_EQUAL       reduce using rule 97 (popMultDiv -> .)
    AND             reduce using rule 97 (popMultDiv -> .)
    OR              reduce using rule 97 (popMultDiv -> .)

    popMultDiv                     shift and go to state 96

state 62

    (77) F2 -> DIVIDE . meterOperador TERMINO
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 97

state 63

    (78) F2 -> MULTIPLY . meterOperador TERMINO
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 98

state 64

    (79) F2 -> empty .

    COMMA           reduce using rule 79 (F2 -> empty .)
    SEMICOLON       reduce using rule 79 (F2 -> empty .)
    DIVIDE          reduce using rule 79 (F2 -> empty .)
    MULTIPLY        reduce using rule 79 (F2 -> empty .)
    PLUS            reduce using rule 79 (F2 -> empty .)
    MINUS           reduce using rule 79 (F2 -> empty .)
    FUNC            reduce using rule 79 (F2 -> empty .)
    MAIN            reduce using rule 79 (F2 -> empty .)
    LBRACKET        reduce using rule 79 (F2 -> empty .)
    RPAREN          reduce using rule 79 (F2 -> empty .)
    RSBRACKET       reduce using rule 79 (F2 -> empty .)
    EQUALS          reduce using rule 79 (F2 -> empty .)
    RBRACKET        reduce using rule 79 (F2 -> empty .)
    GREATER_OR_EQUAL reduce using rule 79 (F2 -> empty .)
    LESS_OR_EQUAL   reduce using rule 79 (F2 -> empty .)
    GREATER_THAN    reduce using rule 79 (F2 -> empty .)
    LESS_THAN       reduce using rule 79 (F2 -> empty .)
    IS_EQUAL        reduce using rule 79 (F2 -> empty .)
    NOT_EQUAL       reduce using rule 79 (F2 -> empty .)
    AND             reduce using rule 79 (F2 -> empty .)
    OR              reduce using rule 79 (F2 -> empty .)


state 65

    (80) FACTOR -> LPAREN meterFondoFalso . H_EXP RPAREN quitarFondoFalso
    (58) H_EXP -> . T_EXP
    (59) H_EXP -> . T_EXP OR H_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    H_EXP                          shift and go to state 99
    T_EXP                          shift and go to state 100
    G_EXP                          shift and go to state 101
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 66

    (84) FACTOR -> VARIABLE agregarPilaOp .

    COMMA           reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    SEMICOLON       reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    DIVIDE          reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    MULTIPLY        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    PLUS            reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    MINUS           reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    FUNC            reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    MAIN            reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    LBRACKET        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RPAREN          reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RSBRACKET       reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    EQUALS          reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RBRACKET        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    GREATER_OR_EQUAL reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    LESS_OR_EQUAL   reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    GREATER_THAN    reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    LESS_THAN       reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    IS_EQUAL        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    NOT_EQUAL       reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    AND             reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    OR              reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)


state 67

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO .

    $end            reduce using rule 29 (PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO .)


state 68

    (17) CUERPO -> LBRACKET . E RBRACKET
    (18) E -> . E1
    (19) E -> . empty
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (86) empty -> .
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO T popSumaResta
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E2 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM NAME EQUALS C_INT TO C_INT DO CUERPO
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    RBRACKET        reduce using rule 86 (empty -> .)
    NAME            shift and go to state 72
    RETURN          shift and go to state 85
    READ            shift and go to state 86
    PRINT           shift and go to state 87
    IF              shift and go to state 88
    WHILE           shift and go to state 89
    FROM            shift and go to state 90
    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46

    E                              shift and go to state 103
    E1                             shift and go to state 104
    empty                          shift and go to state 105
    ESTATUTO                       shift and go to state 74
    EXP                            shift and go to state 75
    ASIGNACION                     shift and go to state 76
    LLAMADA                        shift and go to state 77
    RETORNO                        shift and go to state 78
    LECTURA                        shift and go to state 79
    ESCRITURA                      shift and go to state 80
    CONDICION                      shift and go to state 81
    CICLO_W                        shift and go to state 82
    CICLO_F                        shift and go to state 83
    TERMINO                        shift and go to state 41
    VARIABLE                       shift and go to state 84
    FACTOR                         shift and go to state 42
    LLAMADAF                       shift and go to state 48

state 69

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar . PARAMS agregarVariables RPAREN V4 CUERPO
    (13) PARAMS -> . TIPO NAME agregarVarLista P1
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    PARAMS                         shift and go to state 106
    TIPO                           shift and go to state 107

state 70

    (5) V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON . agregarVariables V3
    (107) agregarVariables -> .

    NAME            reduce using rule 107 (agregarVariables -> .)
    INT             reduce using rule 107 (agregarVariables -> .)
    FLOAT           reduce using rule 107 (agregarVariables -> .)
    CHAR            reduce using rule 107 (agregarVariables -> .)
    FUNC            reduce using rule 107 (agregarVariables -> .)
    MAIN            reduce using rule 107 (agregarVariables -> .)
    LBRACKET        reduce using rule 107 (agregarVariables -> .)
    RPAREN          reduce using rule 107 (agregarVariables -> .)

    agregarVariables               shift and go to state 108

state 71

    (6) V2 -> COMMA VARIABLE . agregarVarLista V2
    (110) agregarVarLista -> .

    COMMA           reduce using rule 110 (agregarVarLista -> .)
    SEMICOLON       reduce using rule 110 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 109

state 72

    (42) LLAMADA -> NAME . LPAREN E1 RPAREN SEMICOLON
    (30) VARIABLE -> NAME . E2
    (45) LLAMADAF -> NAME . LPAREN E1 RPAREN
    (31) E2 -> . LSBRACKET EXP RSBRACKET
    (32) E2 -> . empty
    (51) E2 -> . S_EXP
    (52) E2 -> . S_EXP COMMA E2
    (86) empty -> .
    (70) S_EXP -> . C_STRING
    (71) S_EXP -> . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 110
    LSBRACKET       shift and go to state 36
    EQUALS          reduce using rule 86 (empty -> .)
    DIVIDE          reduce using rule 86 (empty -> .)
    MULTIPLY        reduce using rule 86 (empty -> .)
    PLUS            reduce using rule 86 (empty -> .)
    MINUS           reduce using rule 86 (empty -> .)
    COMMA           reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    C_STRING        shift and go to state 40
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    E2                             shift and go to state 35
    EXP                            shift and go to state 37
    empty                          shift and go to state 38
    S_EXP                          shift and go to state 39
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 73

    (45) LLAMADAF -> NAME LPAREN E1 . RPAREN

    RPAREN          shift and go to state 111


state 74

    (20) E1 -> ESTATUTO .
    (21) E1 -> ESTATUTO . E1
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO T popSumaResta
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E2 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM NAME EQUALS C_INT TO C_INT DO CUERPO
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    RPAREN          reduce using rule 20 (E1 -> ESTATUTO .)
    RBRACKET        reduce using rule 20 (E1 -> ESTATUTO .)
    NAME            shift and go to state 72
    RETURN          shift and go to state 85
    READ            shift and go to state 86
    PRINT           shift and go to state 87
    IF              shift and go to state 88
    WHILE           shift and go to state 89
    FROM            shift and go to state 90
    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46

    ESTATUTO                       shift and go to state 74
    E1                             shift and go to state 112
    EXP                            shift and go to state 75
    ASIGNACION                     shift and go to state 76
    LLAMADA                        shift and go to state 77
    RETORNO                        shift and go to state 78
    LECTURA                        shift and go to state 79
    ESCRITURA                      shift and go to state 80
    CONDICION                      shift and go to state 81
    CICLO_W                        shift and go to state 82
    CICLO_F                        shift and go to state 83
    TERMINO                        shift and go to state 41
    VARIABLE                       shift and go to state 84
    FACTOR                         shift and go to state 42
    LLAMADAF                       shift and go to state 48

state 75

    (43) E1 -> EXP .
    (44) E1 -> EXP . COMMA E1

    RPAREN          reduce using rule 43 (E1 -> EXP .)
    RBRACKET        reduce using rule 43 (E1 -> EXP .)
    COMMA           shift and go to state 113


state 76

    (33) ESTATUTO -> ASIGNACION .

    NAME            reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    READ            reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    PRINT           reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    WHILE           reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    FROM            reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    LPAREN          reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    C_INT           reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    C_FLOAT         reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    C_CHAR          reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    RPAREN          reduce using rule 33 (ESTATUTO -> ASIGNACION .)
    RBRACKET        reduce using rule 33 (ESTATUTO -> ASIGNACION .)


state 77

    (34) ESTATUTO -> LLAMADA .

    NAME            reduce using rule 34 (ESTATUTO -> LLAMADA .)
    RETURN          reduce using rule 34 (ESTATUTO -> LLAMADA .)
    READ            reduce using rule 34 (ESTATUTO -> LLAMADA .)
    PRINT           reduce using rule 34 (ESTATUTO -> LLAMADA .)
    IF              reduce using rule 34 (ESTATUTO -> LLAMADA .)
    WHILE           reduce using rule 34 (ESTATUTO -> LLAMADA .)
    FROM            reduce using rule 34 (ESTATUTO -> LLAMADA .)
    LPAREN          reduce using rule 34 (ESTATUTO -> LLAMADA .)
    C_INT           reduce using rule 34 (ESTATUTO -> LLAMADA .)
    C_FLOAT         reduce using rule 34 (ESTATUTO -> LLAMADA .)
    C_CHAR          reduce using rule 34 (ESTATUTO -> LLAMADA .)
    RPAREN          reduce using rule 34 (ESTATUTO -> LLAMADA .)
    RBRACKET        reduce using rule 34 (ESTATUTO -> LLAMADA .)


state 78

    (35) ESTATUTO -> RETORNO .

    NAME            reduce using rule 35 (ESTATUTO -> RETORNO .)
    RETURN          reduce using rule 35 (ESTATUTO -> RETORNO .)
    READ            reduce using rule 35 (ESTATUTO -> RETORNO .)
    PRINT           reduce using rule 35 (ESTATUTO -> RETORNO .)
    IF              reduce using rule 35 (ESTATUTO -> RETORNO .)
    WHILE           reduce using rule 35 (ESTATUTO -> RETORNO .)
    FROM            reduce using rule 35 (ESTATUTO -> RETORNO .)
    LPAREN          reduce using rule 35 (ESTATUTO -> RETORNO .)
    C_INT           reduce using rule 35 (ESTATUTO -> RETORNO .)
    C_FLOAT         reduce using rule 35 (ESTATUTO -> RETORNO .)
    C_CHAR          reduce using rule 35 (ESTATUTO -> RETORNO .)
    RPAREN          reduce using rule 35 (ESTATUTO -> RETORNO .)
    RBRACKET        reduce using rule 35 (ESTATUTO -> RETORNO .)


state 79

    (36) ESTATUTO -> LECTURA .

    NAME            reduce using rule 36 (ESTATUTO -> LECTURA .)
    RETURN          reduce using rule 36 (ESTATUTO -> LECTURA .)
    READ            reduce using rule 36 (ESTATUTO -> LECTURA .)
    PRINT           reduce using rule 36 (ESTATUTO -> LECTURA .)
    IF              reduce using rule 36 (ESTATUTO -> LECTURA .)
    WHILE           reduce using rule 36 (ESTATUTO -> LECTURA .)
    FROM            reduce using rule 36 (ESTATUTO -> LECTURA .)
    LPAREN          reduce using rule 36 (ESTATUTO -> LECTURA .)
    C_INT           reduce using rule 36 (ESTATUTO -> LECTURA .)
    C_FLOAT         reduce using rule 36 (ESTATUTO -> LECTURA .)
    C_CHAR          reduce using rule 36 (ESTATUTO -> LECTURA .)
    RPAREN          reduce using rule 36 (ESTATUTO -> LECTURA .)
    RBRACKET        reduce using rule 36 (ESTATUTO -> LECTURA .)


state 80

    (37) ESTATUTO -> ESCRITURA .

    NAME            reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    RETURN          reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    READ            reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    PRINT           reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    IF              reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    WHILE           reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    FROM            reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    LPAREN          reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    C_INT           reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    C_FLOAT         reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    C_CHAR          reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    RPAREN          reduce using rule 37 (ESTATUTO -> ESCRITURA .)
    RBRACKET        reduce using rule 37 (ESTATUTO -> ESCRITURA .)


state 81

    (38) ESTATUTO -> CONDICION .

    NAME            reduce using rule 38 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 38 (ESTATUTO -> CONDICION .)
    READ            reduce using rule 38 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 38 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 38 (ESTATUTO -> CONDICION .)
    WHILE           reduce using rule 38 (ESTATUTO -> CONDICION .)
    FROM            reduce using rule 38 (ESTATUTO -> CONDICION .)
    LPAREN          reduce using rule 38 (ESTATUTO -> CONDICION .)
    C_INT           reduce using rule 38 (ESTATUTO -> CONDICION .)
    C_FLOAT         reduce using rule 38 (ESTATUTO -> CONDICION .)
    C_CHAR          reduce using rule 38 (ESTATUTO -> CONDICION .)
    RPAREN          reduce using rule 38 (ESTATUTO -> CONDICION .)
    RBRACKET        reduce using rule 38 (ESTATUTO -> CONDICION .)


state 82

    (39) ESTATUTO -> CICLO_W .

    NAME            reduce using rule 39 (ESTATUTO -> CICLO_W .)
    RETURN          reduce using rule 39 (ESTATUTO -> CICLO_W .)
    READ            reduce using rule 39 (ESTATUTO -> CICLO_W .)
    PRINT           reduce using rule 39 (ESTATUTO -> CICLO_W .)
    IF              reduce using rule 39 (ESTATUTO -> CICLO_W .)
    WHILE           reduce using rule 39 (ESTATUTO -> CICLO_W .)
    FROM            reduce using rule 39 (ESTATUTO -> CICLO_W .)
    LPAREN          reduce using rule 39 (ESTATUTO -> CICLO_W .)
    C_INT           reduce using rule 39 (ESTATUTO -> CICLO_W .)
    C_FLOAT         reduce using rule 39 (ESTATUTO -> CICLO_W .)
    C_CHAR          reduce using rule 39 (ESTATUTO -> CICLO_W .)
    RPAREN          reduce using rule 39 (ESTATUTO -> CICLO_W .)
    RBRACKET        reduce using rule 39 (ESTATUTO -> CICLO_W .)


state 83

    (40) ESTATUTO -> CICLO_F .

    NAME            reduce using rule 40 (ESTATUTO -> CICLO_F .)
    RETURN          reduce using rule 40 (ESTATUTO -> CICLO_F .)
    READ            reduce using rule 40 (ESTATUTO -> CICLO_F .)
    PRINT           reduce using rule 40 (ESTATUTO -> CICLO_F .)
    IF              reduce using rule 40 (ESTATUTO -> CICLO_F .)
    WHILE           reduce using rule 40 (ESTATUTO -> CICLO_F .)
    FROM            reduce using rule 40 (ESTATUTO -> CICLO_F .)
    LPAREN          reduce using rule 40 (ESTATUTO -> CICLO_F .)
    C_INT           reduce using rule 40 (ESTATUTO -> CICLO_F .)
    C_FLOAT         reduce using rule 40 (ESTATUTO -> CICLO_F .)
    C_CHAR          reduce using rule 40 (ESTATUTO -> CICLO_F .)
    RPAREN          reduce using rule 40 (ESTATUTO -> CICLO_F .)
    RBRACKET        reduce using rule 40 (ESTATUTO -> CICLO_F .)


state 84

    (41) ASIGNACION -> VARIABLE . agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (84) FACTOR -> VARIABLE . agregarPilaOp
    (94) agregarPilaOp -> .

    EQUALS          reduce using rule 94 (agregarPilaOp -> .)
    DIVIDE          reduce using rule 94 (agregarPilaOp -> .)
    MULTIPLY        reduce using rule 94 (agregarPilaOp -> .)
    PLUS            reduce using rule 94 (agregarPilaOp -> .)
    MINUS           reduce using rule 94 (agregarPilaOp -> .)
    COMMA           reduce using rule 94 (agregarPilaOp -> .)
    RPAREN          reduce using rule 94 (agregarPilaOp -> .)
    RBRACKET        reduce using rule 94 (agregarPilaOp -> .)

    agregarPilaOp                  shift and go to state 114

state 85

    (46) RETORNO -> RETURN . LPAREN EXP RPAREN SEMICOLON

    LPAREN          shift and go to state 115


state 86

    (47) LECTURA -> READ . LPAREN V3 RPAREN SEMICOLON

    LPAREN          shift and go to state 116


state 87

    (50) ESCRITURA -> PRINT . LPAREN E2 RPAREN SEMICOLON

    LPAREN          shift and go to state 117


state 88

    (53) CONDICION -> IF . LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto

    LPAREN          shift and go to state 118


state 89

    (56) CICLO_W -> WHILE . agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (89) agregarWhile -> .

    LPAREN          reduce using rule 89 (agregarWhile -> .)

    agregarWhile                   shift and go to state 119

state 90

    (57) CICLO_F -> FROM . NAME EQUALS C_INT TO C_INT DO CUERPO

    NAME            shift and go to state 120


state 91

    (31) E2 -> LSBRACKET EXP RSBRACKET .

    COMMA           reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    SEMICOLON       reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    DIVIDE          reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    MULTIPLY        reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    PLUS            reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    MINUS           reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    FUNC            reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    MAIN            reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    LBRACKET        reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    RPAREN          reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    RSBRACKET       reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    EQUALS          reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    RBRACKET        reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    GREATER_OR_EQUAL reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    LESS_OR_EQUAL   reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    GREATER_THAN    reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    LESS_THAN       reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    IS_EQUAL        reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    NOT_EQUAL       reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    AND             reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)
    OR              reduce using rule 31 (E2 -> LSBRACKET EXP RSBRACKET .)


state 92

    (52) E2 -> S_EXP COMMA E2 .

    COMMA           reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    SEMICOLON       reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    DIVIDE          reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    MULTIPLY        reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    PLUS            reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    MINUS           reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    FUNC            reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    MAIN            reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    LBRACKET        reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    RPAREN          reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    RSBRACKET       reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    EQUALS          reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    RBRACKET        reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    GREATER_OR_EQUAL reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    LESS_OR_EQUAL   reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    GREATER_THAN    reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    LESS_THAN       reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    IS_EQUAL        reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    NOT_EQUAL       reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    AND             reduce using rule 52 (E2 -> S_EXP COMMA E2 .)
    OR              reduce using rule 52 (E2 -> S_EXP COMMA E2 .)


state 93

    (72) EXP -> TERMINO T popSumaResta .

    COMMA           reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    SEMICOLON       reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    DIVIDE          reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    MULTIPLY        reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    PLUS            reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    MINUS           reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    FUNC            reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    MAIN            reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    LBRACKET        reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    RPAREN          reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    RSBRACKET       reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    EQUALS          reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    RBRACKET        reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    GREATER_OR_EQUAL reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    LESS_OR_EQUAL   reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    GREATER_THAN    reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    LESS_THAN       reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    IS_EQUAL        reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    NOT_EQUAL       reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    AND             reduce using rule 72 (EXP -> TERMINO T popSumaResta .)
    OR              reduce using rule 72 (EXP -> TERMINO T popSumaResta .)


state 94

    (73) T -> PLUS meterOperador . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 95

    (74) T -> MINUS meterOperador . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    EXP                            shift and go to state 122
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 96

    (76) TERMINO -> FACTOR F2 popMultDiv .

    COMMA           reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    SEMICOLON       reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    DIVIDE          reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    MULTIPLY        reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    PLUS            reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    MINUS           reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    FUNC            reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    MAIN            reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    LBRACKET        reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    RPAREN          reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    RSBRACKET       reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    EQUALS          reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    RBRACKET        reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    GREATER_OR_EQUAL reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    LESS_OR_EQUAL   reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    GREATER_THAN    reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    LESS_THAN       reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    IS_EQUAL        reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    NOT_EQUAL       reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    AND             reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)
    OR              reduce using rule 76 (TERMINO -> FACTOR F2 popMultDiv .)


state 97

    (77) F2 -> DIVIDE meterOperador . TERMINO
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    TERMINO                        shift and go to state 123
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 98

    (78) F2 -> MULTIPLY meterOperador . TERMINO
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 99

    (80) FACTOR -> LPAREN meterFondoFalso H_EXP . RPAREN quitarFondoFalso

    RPAREN          shift and go to state 125


state 100

    (58) H_EXP -> T_EXP .
    (59) H_EXP -> T_EXP . OR H_EXP

    RPAREN          reduce using rule 58 (H_EXP -> T_EXP .)
    OR              shift and go to state 126


state 101

    (60) T_EXP -> G_EXP .
    (61) T_EXP -> G_EXP . AND T_EXP

    OR              reduce using rule 60 (T_EXP -> G_EXP .)
    RPAREN          reduce using rule 60 (T_EXP -> G_EXP .)
    AND             shift and go to state 127


state 102

    (62) G_EXP -> EXP . B popBool
    (63) B -> . GREATER_OR_EQUAL meterOperador G_EXP
    (64) B -> . LESS_OR_EQUAL meterOperador EXP
    (65) B -> . GREATER_THAN meterOperador EXP
    (66) B -> . LESS_THAN meterOperador EXP
    (67) B -> . IS_EQUAL meterOperador EXP
    (68) B -> . NOT_EQUAL meterOperador EXP
    (69) B -> . empty
    (86) empty -> .

    GREATER_OR_EQUAL shift and go to state 129
    LESS_OR_EQUAL   shift and go to state 130
    GREATER_THAN    shift and go to state 131
    LESS_THAN       shift and go to state 132
    IS_EQUAL        shift and go to state 133
    NOT_EQUAL       shift and go to state 134
    AND             reduce using rule 86 (empty -> .)
    OR              reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)

    B                              shift and go to state 128
    empty                          shift and go to state 135

state 103

    (17) CUERPO -> LBRACKET E . RBRACKET

    RBRACKET        shift and go to state 136


state 104

    (18) E -> E1 .

    RBRACKET        reduce using rule 18 (E -> E1 .)


state 105

    (19) E -> empty .

    RBRACKET        reduce using rule 19 (E -> empty .)


state 106

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS . agregarVariables RPAREN V4 CUERPO
    (107) agregarVariables -> .

    RPAREN          reduce using rule 107 (agregarVariables -> .)

    agregarVariables               shift and go to state 137

state 107

    (13) PARAMS -> TIPO . NAME agregarVarLista P1

    NAME            shift and go to state 138


state 108

    (5) V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables . V3
    (8) V3 -> . borrarListaVar V1
    (9) V3 -> . empty
    (48) V3 -> . VARIABLE COMMA V3
    (49) V3 -> . VARIABLE
    (111) borrarListaVar -> .
    (86) empty -> .
    (30) VARIABLE -> . NAME E2

    INT             reduce using rule 111 (borrarListaVar -> .)
    FLOAT           reduce using rule 111 (borrarListaVar -> .)
    CHAR            reduce using rule 111 (borrarListaVar -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    NAME            shift and go to state 30

    VARIABLE                       shift and go to state 139
    V3                             shift and go to state 140
    borrarListaVar                 shift and go to state 141
    empty                          shift and go to state 142

state 109

    (6) V2 -> COMMA VARIABLE agregarVarLista . V2
    (6) V2 -> . COMMA VARIABLE agregarVarLista V2
    (7) V2 -> . empty
    (86) empty -> .

    COMMA           shift and go to state 52
    SEMICOLON       reduce using rule 86 (empty -> .)

    V2                             shift and go to state 143
    empty                          shift and go to state 53

state 110

    (42) LLAMADA -> NAME LPAREN . E1 RPAREN SEMICOLON
    (45) LLAMADAF -> NAME LPAREN . E1 RPAREN
    (80) FACTOR -> LPAREN . meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (92) meterFondoFalso -> .
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO T popSumaResta
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E2 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM NAME EQUALS C_INT TO C_INT DO CUERPO
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for C_INT resolved as shift
  ! shift/reduce conflict for C_FLOAT resolved as shift
  ! shift/reduce conflict for C_CHAR resolved as shift
    NAME            shift and go to state 72
    RETURN          shift and go to state 85
    READ            shift and go to state 86
    PRINT           shift and go to state 87
    IF              shift and go to state 88
    WHILE           shift and go to state 89
    FROM            shift and go to state 90
    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46

  ! LPAREN          [ reduce using rule 92 (meterFondoFalso -> .) ]
  ! C_INT           [ reduce using rule 92 (meterFondoFalso -> .) ]
  ! C_FLOAT         [ reduce using rule 92 (meterFondoFalso -> .) ]
  ! C_CHAR          [ reduce using rule 92 (meterFondoFalso -> .) ]
  ! NAME            [ reduce using rule 92 (meterFondoFalso -> .) ]

    E1                             shift and go to state 144
    meterFondoFalso                shift and go to state 65
    ESTATUTO                       shift and go to state 74
    EXP                            shift and go to state 75
    ASIGNACION                     shift and go to state 76
    LLAMADA                        shift and go to state 77
    RETORNO                        shift and go to state 78
    LECTURA                        shift and go to state 79
    ESCRITURA                      shift and go to state 80
    CONDICION                      shift and go to state 81
    CICLO_W                        shift and go to state 82
    CICLO_F                        shift and go to state 83
    TERMINO                        shift and go to state 41
    VARIABLE                       shift and go to state 84
    FACTOR                         shift and go to state 42
    LLAMADAF                       shift and go to state 48

state 111

    (45) LLAMADAF -> NAME LPAREN E1 RPAREN .

    COMMA           reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    SEMICOLON       reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    DIVIDE          reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MULTIPLY        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    PLUS            reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MINUS           reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    FUNC            reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MAIN            reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    LBRACKET        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RPAREN          reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RSBRACKET       reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    EQUALS          reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RBRACKET        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    GREATER_OR_EQUAL reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    LESS_OR_EQUAL   reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    GREATER_THAN    reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    LESS_THAN       reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    IS_EQUAL        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    NOT_EQUAL       reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    AND             reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    OR              reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)


state 112

    (21) E1 -> ESTATUTO E1 .

    RPAREN          reduce using rule 21 (E1 -> ESTATUTO E1 .)
    RBRACKET        reduce using rule 21 (E1 -> ESTATUTO E1 .)


state 113

    (44) E1 -> EXP COMMA . E1
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (43) E1 -> . EXP
    (44) E1 -> . EXP COMMA E1
    (33) ESTATUTO -> . ASIGNACION
    (34) ESTATUTO -> . LLAMADA
    (35) ESTATUTO -> . RETORNO
    (36) ESTATUTO -> . LECTURA
    (37) ESTATUTO -> . ESCRITURA
    (38) ESTATUTO -> . CONDICION
    (39) ESTATUTO -> . CICLO_W
    (40) ESTATUTO -> . CICLO_F
    (72) EXP -> . TERMINO T popSumaResta
    (41) ASIGNACION -> . VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON
    (42) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (46) RETORNO -> . RETURN LPAREN EXP RPAREN SEMICOLON
    (47) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (50) ESCRITURA -> . PRINT LPAREN E2 RPAREN SEMICOLON
    (53) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (56) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (57) CICLO_F -> . FROM NAME EQUALS C_INT TO C_INT DO CUERPO
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (30) VARIABLE -> . NAME E2
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    NAME            shift and go to state 72
    RETURN          shift and go to state 85
    READ            shift and go to state 86
    PRINT           shift and go to state 87
    IF              shift and go to state 88
    WHILE           shift and go to state 89
    FROM            shift and go to state 90
    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46

    EXP                            shift and go to state 75
    E1                             shift and go to state 145
    ESTATUTO                       shift and go to state 74
    ASIGNACION                     shift and go to state 76
    LLAMADA                        shift and go to state 77
    RETORNO                        shift and go to state 78
    LECTURA                        shift and go to state 79
    ESCRITURA                      shift and go to state 80
    CONDICION                      shift and go to state 81
    CICLO_W                        shift and go to state 82
    CICLO_F                        shift and go to state 83
    TERMINO                        shift and go to state 41
    VARIABLE                       shift and go to state 84
    FACTOR                         shift and go to state 42
    LLAMADAF                       shift and go to state 48

state 114

    (41) ASIGNACION -> VARIABLE agregarPilaOp . EQUALS meterOperador EXP popIgual SEMICOLON
    (84) FACTOR -> VARIABLE agregarPilaOp .

    EQUALS          shift and go to state 146
    DIVIDE          reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    MULTIPLY        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    PLUS            reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    MINUS           reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    COMMA           reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RPAREN          reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)
    RBRACKET        reduce using rule 84 (FACTOR -> VARIABLE agregarPilaOp .)


state 115

    (46) RETORNO -> RETURN LPAREN . EXP RPAREN SEMICOLON
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    EXP                            shift and go to state 147
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 116

    (47) LECTURA -> READ LPAREN . V3 RPAREN SEMICOLON
    (8) V3 -> . borrarListaVar V1
    (9) V3 -> . empty
    (48) V3 -> . VARIABLE COMMA V3
    (49) V3 -> . VARIABLE
    (111) borrarListaVar -> .
    (86) empty -> .
    (30) VARIABLE -> . NAME E2

    INT             reduce using rule 111 (borrarListaVar -> .)
    FLOAT           reduce using rule 111 (borrarListaVar -> .)
    CHAR            reduce using rule 111 (borrarListaVar -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    NAME            shift and go to state 30

    V3                             shift and go to state 148
    borrarListaVar                 shift and go to state 141
    empty                          shift and go to state 142
    VARIABLE                       shift and go to state 139

state 117

    (50) ESCRITURA -> PRINT LPAREN . E2 RPAREN SEMICOLON
    (31) E2 -> . LSBRACKET EXP RSBRACKET
    (32) E2 -> . empty
    (51) E2 -> . S_EXP
    (52) E2 -> . S_EXP COMMA E2
    (86) empty -> .
    (70) S_EXP -> . C_STRING
    (71) S_EXP -> . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LSBRACKET       shift and go to state 36
    RPAREN          reduce using rule 86 (empty -> .)
    C_STRING        shift and go to state 40
    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    E2                             shift and go to state 149
    EXP                            shift and go to state 37
    empty                          shift and go to state 38
    S_EXP                          shift and go to state 39
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 118

    (53) CONDICION -> IF LPAREN . H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (58) H_EXP -> . T_EXP
    (59) H_EXP -> . T_EXP OR H_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    H_EXP                          shift and go to state 150
    T_EXP                          shift and go to state 100
    G_EXP                          shift and go to state 101
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 119

    (56) CICLO_W -> WHILE agregarWhile . LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile

    LPAREN          shift and go to state 151


state 120

    (57) CICLO_F -> FROM NAME . EQUALS C_INT TO C_INT DO CUERPO

    EQUALS          shift and go to state 152


state 121

    (73) T -> PLUS meterOperador EXP .

    COMMA           reduce using rule 73 (T -> PLUS meterOperador EXP .)
    SEMICOLON       reduce using rule 73 (T -> PLUS meterOperador EXP .)
    DIVIDE          reduce using rule 73 (T -> PLUS meterOperador EXP .)
    MULTIPLY        reduce using rule 73 (T -> PLUS meterOperador EXP .)
    PLUS            reduce using rule 73 (T -> PLUS meterOperador EXP .)
    MINUS           reduce using rule 73 (T -> PLUS meterOperador EXP .)
    FUNC            reduce using rule 73 (T -> PLUS meterOperador EXP .)
    MAIN            reduce using rule 73 (T -> PLUS meterOperador EXP .)
    LBRACKET        reduce using rule 73 (T -> PLUS meterOperador EXP .)
    RPAREN          reduce using rule 73 (T -> PLUS meterOperador EXP .)
    RSBRACKET       reduce using rule 73 (T -> PLUS meterOperador EXP .)
    EQUALS          reduce using rule 73 (T -> PLUS meterOperador EXP .)
    RBRACKET        reduce using rule 73 (T -> PLUS meterOperador EXP .)
    GREATER_OR_EQUAL reduce using rule 73 (T -> PLUS meterOperador EXP .)
    LESS_OR_EQUAL   reduce using rule 73 (T -> PLUS meterOperador EXP .)
    GREATER_THAN    reduce using rule 73 (T -> PLUS meterOperador EXP .)
    LESS_THAN       reduce using rule 73 (T -> PLUS meterOperador EXP .)
    IS_EQUAL        reduce using rule 73 (T -> PLUS meterOperador EXP .)
    NOT_EQUAL       reduce using rule 73 (T -> PLUS meterOperador EXP .)
    AND             reduce using rule 73 (T -> PLUS meterOperador EXP .)
    OR              reduce using rule 73 (T -> PLUS meterOperador EXP .)


state 122

    (74) T -> MINUS meterOperador EXP .

    COMMA           reduce using rule 74 (T -> MINUS meterOperador EXP .)
    SEMICOLON       reduce using rule 74 (T -> MINUS meterOperador EXP .)
    DIVIDE          reduce using rule 74 (T -> MINUS meterOperador EXP .)
    MULTIPLY        reduce using rule 74 (T -> MINUS meterOperador EXP .)
    PLUS            reduce using rule 74 (T -> MINUS meterOperador EXP .)
    MINUS           reduce using rule 74 (T -> MINUS meterOperador EXP .)
    FUNC            reduce using rule 74 (T -> MINUS meterOperador EXP .)
    MAIN            reduce using rule 74 (T -> MINUS meterOperador EXP .)
    LBRACKET        reduce using rule 74 (T -> MINUS meterOperador EXP .)
    RPAREN          reduce using rule 74 (T -> MINUS meterOperador EXP .)
    RSBRACKET       reduce using rule 74 (T -> MINUS meterOperador EXP .)
    EQUALS          reduce using rule 74 (T -> MINUS meterOperador EXP .)
    RBRACKET        reduce using rule 74 (T -> MINUS meterOperador EXP .)
    GREATER_OR_EQUAL reduce using rule 74 (T -> MINUS meterOperador EXP .)
    LESS_OR_EQUAL   reduce using rule 74 (T -> MINUS meterOperador EXP .)
    GREATER_THAN    reduce using rule 74 (T -> MINUS meterOperador EXP .)
    LESS_THAN       reduce using rule 74 (T -> MINUS meterOperador EXP .)
    IS_EQUAL        reduce using rule 74 (T -> MINUS meterOperador EXP .)
    NOT_EQUAL       reduce using rule 74 (T -> MINUS meterOperador EXP .)
    AND             reduce using rule 74 (T -> MINUS meterOperador EXP .)
    OR              reduce using rule 74 (T -> MINUS meterOperador EXP .)


state 123

    (77) F2 -> DIVIDE meterOperador TERMINO .

    COMMA           reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    SEMICOLON       reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    DIVIDE          reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    MULTIPLY        reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    PLUS            reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    MINUS           reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    FUNC            reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    MAIN            reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    LBRACKET        reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    RPAREN          reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    RSBRACKET       reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    EQUALS          reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    RBRACKET        reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    GREATER_OR_EQUAL reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    LESS_OR_EQUAL   reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    GREATER_THAN    reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    LESS_THAN       reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    IS_EQUAL        reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    NOT_EQUAL       reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    AND             reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)
    OR              reduce using rule 77 (F2 -> DIVIDE meterOperador TERMINO .)


state 124

    (78) F2 -> MULTIPLY meterOperador TERMINO .

    COMMA           reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    SEMICOLON       reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    DIVIDE          reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    MULTIPLY        reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    PLUS            reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    MINUS           reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    FUNC            reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    MAIN            reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    LBRACKET        reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    RPAREN          reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    RSBRACKET       reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    EQUALS          reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    RBRACKET        reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    GREATER_OR_EQUAL reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    LESS_OR_EQUAL   reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    GREATER_THAN    reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    LESS_THAN       reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    IS_EQUAL        reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    NOT_EQUAL       reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    AND             reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)
    OR              reduce using rule 78 (F2 -> MULTIPLY meterOperador TERMINO .)


state 125

    (80) FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN . quitarFondoFalso
    (93) quitarFondoFalso -> .

    COMMA           reduce using rule 93 (quitarFondoFalso -> .)
    SEMICOLON       reduce using rule 93 (quitarFondoFalso -> .)
    DIVIDE          reduce using rule 93 (quitarFondoFalso -> .)
    MULTIPLY        reduce using rule 93 (quitarFondoFalso -> .)
    PLUS            reduce using rule 93 (quitarFondoFalso -> .)
    MINUS           reduce using rule 93 (quitarFondoFalso -> .)
    FUNC            reduce using rule 93 (quitarFondoFalso -> .)
    MAIN            reduce using rule 93 (quitarFondoFalso -> .)
    LBRACKET        reduce using rule 93 (quitarFondoFalso -> .)
    RPAREN          reduce using rule 93 (quitarFondoFalso -> .)
    RSBRACKET       reduce using rule 93 (quitarFondoFalso -> .)
    EQUALS          reduce using rule 93 (quitarFondoFalso -> .)
    RBRACKET        reduce using rule 93 (quitarFondoFalso -> .)
    GREATER_OR_EQUAL reduce using rule 93 (quitarFondoFalso -> .)
    LESS_OR_EQUAL   reduce using rule 93 (quitarFondoFalso -> .)
    GREATER_THAN    reduce using rule 93 (quitarFondoFalso -> .)
    LESS_THAN       reduce using rule 93 (quitarFondoFalso -> .)
    IS_EQUAL        reduce using rule 93 (quitarFondoFalso -> .)
    NOT_EQUAL       reduce using rule 93 (quitarFondoFalso -> .)
    AND             reduce using rule 93 (quitarFondoFalso -> .)
    OR              reduce using rule 93 (quitarFondoFalso -> .)

    quitarFondoFalso               shift and go to state 153

state 126

    (59) H_EXP -> T_EXP OR . H_EXP
    (58) H_EXP -> . T_EXP
    (59) H_EXP -> . T_EXP OR H_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    T_EXP                          shift and go to state 100
    H_EXP                          shift and go to state 154
    G_EXP                          shift and go to state 101
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 127

    (61) T_EXP -> G_EXP AND . T_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    G_EXP                          shift and go to state 101
    T_EXP                          shift and go to state 155
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 128

    (62) G_EXP -> EXP B . popBool
    (95) popBool -> .

    AND             reduce using rule 95 (popBool -> .)
    OR              reduce using rule 95 (popBool -> .)
    RPAREN          reduce using rule 95 (popBool -> .)

    popBool                        shift and go to state 156

state 129

    (63) B -> GREATER_OR_EQUAL . meterOperador G_EXP
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 157

state 130

    (64) B -> LESS_OR_EQUAL . meterOperador EXP
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 158

state 131

    (65) B -> GREATER_THAN . meterOperador EXP
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 159

state 132

    (66) B -> LESS_THAN . meterOperador EXP
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 160

state 133

    (67) B -> IS_EQUAL . meterOperador EXP
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 161

state 134

    (68) B -> NOT_EQUAL . meterOperador EXP
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 162

state 135

    (69) B -> empty .

    AND             reduce using rule 69 (B -> empty .)
    OR              reduce using rule 69 (B -> empty .)
    RPAREN          reduce using rule 69 (B -> empty .)


state 136

    (17) CUERPO -> LBRACKET E RBRACKET .

    $end            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    FUNC            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    MAIN            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    ELSE            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    NAME            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RETURN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    READ            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    PRINT           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    IF              reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    WHILE           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    FROM            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    LPAREN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    C_INT           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    C_FLOAT         reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    C_CHAR          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RPAREN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)


state 137

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables . RPAREN V4 CUERPO

    RPAREN          shift and go to state 163


state 138

    (13) PARAMS -> TIPO NAME . agregarVarLista P1
    (110) agregarVarLista -> .

    COMMA           reduce using rule 110 (agregarVarLista -> .)
    RPAREN          reduce using rule 110 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 164

state 139

    (48) V3 -> VARIABLE . COMMA V3
    (49) V3 -> VARIABLE .

    COMMA           shift and go to state 165
    FUNC            reduce using rule 49 (V3 -> VARIABLE .)
    MAIN            reduce using rule 49 (V3 -> VARIABLE .)
    LBRACKET        reduce using rule 49 (V3 -> VARIABLE .)
    RPAREN          reduce using rule 49 (V3 -> VARIABLE .)


state 140

    (5) V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .

    FUNC            reduce using rule 5 (V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .)
    MAIN            reduce using rule 5 (V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .)
    LBRACKET        reduce using rule 5 (V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .)
    RPAREN          reduce using rule 5 (V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3 .)


state 141

    (8) V3 -> borrarListaVar . V1
    (5) V1 -> . TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    V1                             shift and go to state 166
    TIPO                           shift and go to state 22

state 142

    (9) V3 -> empty .

    FUNC            reduce using rule 9 (V3 -> empty .)
    MAIN            reduce using rule 9 (V3 -> empty .)
    LBRACKET        reduce using rule 9 (V3 -> empty .)
    RPAREN          reduce using rule 9 (V3 -> empty .)


state 143

    (6) V2 -> COMMA VARIABLE agregarVarLista V2 .

    SEMICOLON       reduce using rule 6 (V2 -> COMMA VARIABLE agregarVarLista V2 .)


state 144

    (42) LLAMADA -> NAME LPAREN E1 . RPAREN SEMICOLON
    (45) LLAMADAF -> NAME LPAREN E1 . RPAREN

    RPAREN          shift and go to state 167


state 145

    (44) E1 -> EXP COMMA E1 .

    RPAREN          reduce using rule 44 (E1 -> EXP COMMA E1 .)
    RBRACKET        reduce using rule 44 (E1 -> EXP COMMA E1 .)


state 146

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS . meterOperador EXP popIgual SEMICOLON
    (103) meterOperador -> .

    LPAREN          reduce using rule 103 (meterOperador -> .)
    C_INT           reduce using rule 103 (meterOperador -> .)
    C_FLOAT         reduce using rule 103 (meterOperador -> .)
    C_CHAR          reduce using rule 103 (meterOperador -> .)
    NAME            reduce using rule 103 (meterOperador -> .)

    meterOperador                  shift and go to state 168

state 147

    (46) RETORNO -> RETURN LPAREN EXP . RPAREN SEMICOLON

    RPAREN          shift and go to state 169


state 148

    (47) LECTURA -> READ LPAREN V3 . RPAREN SEMICOLON

    RPAREN          shift and go to state 170


state 149

    (50) ESCRITURA -> PRINT LPAREN E2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 171


state 150

    (53) CONDICION -> IF LPAREN H_EXP . RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto

    RPAREN          shift and go to state 172


state 151

    (56) CICLO_W -> WHILE agregarWhile LPAREN . H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (58) H_EXP -> . T_EXP
    (59) H_EXP -> . T_EXP OR H_EXP
    (60) T_EXP -> . G_EXP
    (61) T_EXP -> . G_EXP AND T_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    H_EXP                          shift and go to state 173
    T_EXP                          shift and go to state 100
    G_EXP                          shift and go to state 101
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 152

    (57) CICLO_F -> FROM NAME EQUALS . C_INT TO C_INT DO CUERPO

    C_INT           shift and go to state 174


state 153

    (80) FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .

    COMMA           reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    SEMICOLON       reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    DIVIDE          reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    MULTIPLY        reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    PLUS            reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    MINUS           reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    FUNC            reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    MAIN            reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    LBRACKET        reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RPAREN          reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RSBRACKET       reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    EQUALS          reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RBRACKET        reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    GREATER_OR_EQUAL reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    LESS_OR_EQUAL   reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    GREATER_THAN    reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    LESS_THAN       reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    IS_EQUAL        reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    NOT_EQUAL       reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    AND             reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    OR              reduce using rule 80 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)


state 154

    (59) H_EXP -> T_EXP OR H_EXP .

    RPAREN          reduce using rule 59 (H_EXP -> T_EXP OR H_EXP .)


state 155

    (61) T_EXP -> G_EXP AND T_EXP .

    OR              reduce using rule 61 (T_EXP -> G_EXP AND T_EXP .)
    RPAREN          reduce using rule 61 (T_EXP -> G_EXP AND T_EXP .)


state 156

    (62) G_EXP -> EXP B popBool .

    AND             reduce using rule 62 (G_EXP -> EXP B popBool .)
    OR              reduce using rule 62 (G_EXP -> EXP B popBool .)
    RPAREN          reduce using rule 62 (G_EXP -> EXP B popBool .)


state 157

    (63) B -> GREATER_OR_EQUAL meterOperador . G_EXP
    (62) G_EXP -> . EXP B popBool
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    G_EXP                          shift and go to state 175
    EXP                            shift and go to state 102
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 158

    (64) B -> LESS_OR_EQUAL meterOperador . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    EXP                            shift and go to state 176
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 159

    (65) B -> GREATER_THAN meterOperador . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    EXP                            shift and go to state 177
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 160

    (66) B -> LESS_THAN meterOperador . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    EXP                            shift and go to state 178
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 161

    (67) B -> IS_EQUAL meterOperador . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    EXP                            shift and go to state 179
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 162

    (68) B -> NOT_EQUAL meterOperador . EXP
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    EXP                            shift and go to state 180
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    VARIABLE                       shift and go to state 47
    LLAMADAF                       shift and go to state 48

state 163

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN . V4 CUERPO
    (11) V4 -> . VARS
    (12) V4 -> . empty
    (4) VARS -> . borrarListaVar VAR V1
    (86) empty -> .
    (111) borrarListaVar -> .

    LBRACKET        reduce using rule 86 (empty -> .)
    VAR             reduce using rule 111 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 7
    V4                             shift and go to state 181
    VARS                           shift and go to state 182
    empty                          shift and go to state 183

state 164

    (13) PARAMS -> TIPO NAME agregarVarLista . P1
    (14) P1 -> . P2
    (15) P1 -> . empty
    (16) P2 -> . COMMA PARAMS P1
    (86) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 187
    RPAREN          reduce using rule 86 (empty -> .)

  ! COMMA           [ reduce using rule 86 (empty -> .) ]

    P1                             shift and go to state 184
    P2                             shift and go to state 185
    empty                          shift and go to state 186

state 165

    (48) V3 -> VARIABLE COMMA . V3
    (8) V3 -> . borrarListaVar V1
    (9) V3 -> . empty
    (48) V3 -> . VARIABLE COMMA V3
    (49) V3 -> . VARIABLE
    (111) borrarListaVar -> .
    (86) empty -> .
    (30) VARIABLE -> . NAME E2

    INT             reduce using rule 111 (borrarListaVar -> .)
    FLOAT           reduce using rule 111 (borrarListaVar -> .)
    CHAR            reduce using rule 111 (borrarListaVar -> .)
    FUNC            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACKET        reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    NAME            shift and go to state 30

    VARIABLE                       shift and go to state 139
    V3                             shift and go to state 188
    borrarListaVar                 shift and go to state 141
    empty                          shift and go to state 142

state 166

    (8) V3 -> borrarListaVar V1 .

    FUNC            reduce using rule 8 (V3 -> borrarListaVar V1 .)
    MAIN            reduce using rule 8 (V3 -> borrarListaVar V1 .)
    LBRACKET        reduce using rule 8 (V3 -> borrarListaVar V1 .)
    RPAREN          reduce using rule 8 (V3 -> borrarListaVar V1 .)


state 167

    (42) LLAMADA -> NAME LPAREN E1 RPAREN . SEMICOLON
    (45) LLAMADAF -> NAME LPAREN E1 RPAREN .

    SEMICOLON       shift and go to state 189
    DIVIDE          reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MULTIPLY        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    PLUS            reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MINUS           reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    COMMA           reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RPAREN          reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RBRACKET        reduce using rule 45 (LLAMADAF -> NAME LPAREN E1 RPAREN .)


state 168

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador . EXP popIgual SEMICOLON
    (72) EXP -> . TERMINO T popSumaResta
    (76) TERMINO -> . FACTOR F2 popMultDiv
    (80) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (81) FACTOR -> . C_INT
    (82) FACTOR -> . C_FLOAT
    (83) FACTOR -> . C_CHAR
    (84) FACTOR -> . VARIABLE agregarPilaOp
    (85) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME E2
    (45) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 43
    C_INT           shift and go to state 44
    C_FLOAT         shift and go to state 45
    C_CHAR          shift and go to state 46
    NAME            shift and go to state 34

    VARIABLE                       shift and go to state 47
    EXP                            shift and go to state 190
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 42
    LLAMADAF                       shift and go to state 48

state 169

    (46) RETORNO -> RETURN LPAREN EXP RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 191


state 170

    (47) LECTURA -> READ LPAREN V3 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 192


state 171

    (50) ESCRITURA -> PRINT LPAREN E2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 193


state 172

    (53) CONDICION -> IF LPAREN H_EXP RPAREN . gotoIf THEN CUERPO ELSE1 terminarGoto
    (87) gotoIf -> .

    THEN            reduce using rule 87 (gotoIf -> .)

    gotoIf                         shift and go to state 194

state 173

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP . RPAREN DO gotoIf CUERPO terminarWhile

    RPAREN          shift and go to state 195


state 174

    (57) CICLO_F -> FROM NAME EQUALS C_INT . TO C_INT DO CUERPO

    TO              shift and go to state 196


state 175

    (63) B -> GREATER_OR_EQUAL meterOperador G_EXP .

    AND             reduce using rule 63 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 63 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 63 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)


state 176

    (64) B -> LESS_OR_EQUAL meterOperador EXP .

    AND             reduce using rule 64 (B -> LESS_OR_EQUAL meterOperador EXP .)
    OR              reduce using rule 64 (B -> LESS_OR_EQUAL meterOperador EXP .)
    RPAREN          reduce using rule 64 (B -> LESS_OR_EQUAL meterOperador EXP .)


state 177

    (65) B -> GREATER_THAN meterOperador EXP .

    AND             reduce using rule 65 (B -> GREATER_THAN meterOperador EXP .)
    OR              reduce using rule 65 (B -> GREATER_THAN meterOperador EXP .)
    RPAREN          reduce using rule 65 (B -> GREATER_THAN meterOperador EXP .)


state 178

    (66) B -> LESS_THAN meterOperador EXP .

    AND             reduce using rule 66 (B -> LESS_THAN meterOperador EXP .)
    OR              reduce using rule 66 (B -> LESS_THAN meterOperador EXP .)
    RPAREN          reduce using rule 66 (B -> LESS_THAN meterOperador EXP .)


state 179

    (67) B -> IS_EQUAL meterOperador EXP .

    AND             reduce using rule 67 (B -> IS_EQUAL meterOperador EXP .)
    OR              reduce using rule 67 (B -> IS_EQUAL meterOperador EXP .)
    RPAREN          reduce using rule 67 (B -> IS_EQUAL meterOperador EXP .)


state 180

    (68) B -> NOT_EQUAL meterOperador EXP .

    AND             reduce using rule 68 (B -> NOT_EQUAL meterOperador EXP .)
    OR              reduce using rule 68 (B -> NOT_EQUAL meterOperador EXP .)
    RPAREN          reduce using rule 68 (B -> NOT_EQUAL meterOperador EXP .)


state 181

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 68

    CUERPO                         shift and go to state 197

state 182

    (11) V4 -> VARS .

    LBRACKET        reduce using rule 11 (V4 -> VARS .)


state 183

    (12) V4 -> empty .

    LBRACKET        reduce using rule 12 (V4 -> empty .)


state 184

    (13) PARAMS -> TIPO NAME agregarVarLista P1 .

    RPAREN          reduce using rule 13 (PARAMS -> TIPO NAME agregarVarLista P1 .)
    COMMA           reduce using rule 13 (PARAMS -> TIPO NAME agregarVarLista P1 .)


state 185

    (14) P1 -> P2 .

    COMMA           reduce using rule 14 (P1 -> P2 .)
    RPAREN          reduce using rule 14 (P1 -> P2 .)


state 186

    (15) P1 -> empty .

    COMMA           reduce using rule 15 (P1 -> empty .)
    RPAREN          reduce using rule 15 (P1 -> empty .)


state 187

    (16) P2 -> COMMA . PARAMS P1
    (13) PARAMS -> . TIPO NAME agregarVarLista P1
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    PARAMS                         shift and go to state 198
    TIPO                           shift and go to state 107

state 188

    (48) V3 -> VARIABLE COMMA V3 .

    FUNC            reduce using rule 48 (V3 -> VARIABLE COMMA V3 .)
    MAIN            reduce using rule 48 (V3 -> VARIABLE COMMA V3 .)
    LBRACKET        reduce using rule 48 (V3 -> VARIABLE COMMA V3 .)
    RPAREN          reduce using rule 48 (V3 -> VARIABLE COMMA V3 .)


state 189

    (42) LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .

    NAME            reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    READ            reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    IF              reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    FROM            reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    C_INT           reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 42 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)


state 190

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP . popIgual SEMICOLON
    (96) popIgual -> .

    SEMICOLON       reduce using rule 96 (popIgual -> .)

    popIgual                       shift and go to state 199

state 191

    (46) RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .

    NAME            reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    RETURN          reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    READ            reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    PRINT           reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    IF              reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    WHILE           reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    FROM            reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    LPAREN          reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    C_INT           reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    RPAREN          reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 46 (RETORNO -> RETURN LPAREN EXP RPAREN SEMICOLON .)


state 192

    (47) LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .

    NAME            reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    READ            reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    IF              reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    FROM            reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    C_INT           reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 47 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)


state 193

    (50) ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .

    NAME            reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    READ            reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    IF              reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    FROM            reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    C_INT           reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 50 (ESCRITURA -> PRINT LPAREN E2 RPAREN SEMICOLON .)


state 194

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf . THEN CUERPO ELSE1 terminarGoto

    THEN            shift and go to state 200


state 195

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN . DO gotoIf CUERPO terminarWhile

    DO              shift and go to state 201


state 196

    (57) CICLO_F -> FROM NAME EQUALS C_INT TO . C_INT DO CUERPO

    C_INT           shift and go to state 202


state 197

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO .

    FUNC            reduce using rule 10 (FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO .)
    MAIN            reduce using rule 10 (FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar PARAMS agregarVariables RPAREN V4 CUERPO .)


state 198

    (16) P2 -> COMMA PARAMS . P1
    (14) P1 -> . P2
    (15) P1 -> . empty
    (16) P2 -> . COMMA PARAMS P1
    (86) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 187
    RPAREN          reduce using rule 86 (empty -> .)

  ! COMMA           [ reduce using rule 86 (empty -> .) ]

    P1                             shift and go to state 203
    P2                             shift and go to state 185
    empty                          shift and go to state 186

state 199

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual . SEMICOLON

    SEMICOLON       shift and go to state 204


state 200

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN . CUERPO ELSE1 terminarGoto
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 68

    CUERPO                         shift and go to state 205

state 201

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO . gotoIf CUERPO terminarWhile
    (87) gotoIf -> .

    LBRACKET        reduce using rule 87 (gotoIf -> .)

    gotoIf                         shift and go to state 206

state 202

    (57) CICLO_F -> FROM NAME EQUALS C_INT TO C_INT . DO CUERPO

    DO              shift and go to state 207


state 203

    (16) P2 -> COMMA PARAMS P1 .

    COMMA           reduce using rule 16 (P2 -> COMMA PARAMS P1 .)
    RPAREN          reduce using rule 16 (P2 -> COMMA PARAMS P1 .)


state 204

    (41) ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .

    NAME            reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    RETURN          reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    READ            reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    PRINT           reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    IF              reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    WHILE           reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    FROM            reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    LPAREN          reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    C_INT           reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    C_FLOAT         reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    C_CHAR          reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    RPAREN          reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)
    RBRACKET        reduce using rule 41 (ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON .)


state 205

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO . ELSE1 terminarGoto
    (54) ELSE1 -> . ELSE gotoElse CUERPO
    (55) ELSE1 -> . empty
    (86) empty -> .

    ELSE            shift and go to state 209
    NAME            reduce using rule 86 (empty -> .)
    RETURN          reduce using rule 86 (empty -> .)
    READ            reduce using rule 86 (empty -> .)
    PRINT           reduce using rule 86 (empty -> .)
    IF              reduce using rule 86 (empty -> .)
    WHILE           reduce using rule 86 (empty -> .)
    FROM            reduce using rule 86 (empty -> .)
    LPAREN          reduce using rule 86 (empty -> .)
    C_INT           reduce using rule 86 (empty -> .)
    C_FLOAT         reduce using rule 86 (empty -> .)
    C_CHAR          reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)

    ELSE1                          shift and go to state 208
    empty                          shift and go to state 210

state 206

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf . CUERPO terminarWhile
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 68

    CUERPO                         shift and go to state 211

state 207

    (57) CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 68

    CUERPO                         shift and go to state 212

state 208

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 . terminarGoto
    (88) terminarGoto -> .

    NAME            reduce using rule 88 (terminarGoto -> .)
    RETURN          reduce using rule 88 (terminarGoto -> .)
    READ            reduce using rule 88 (terminarGoto -> .)
    PRINT           reduce using rule 88 (terminarGoto -> .)
    IF              reduce using rule 88 (terminarGoto -> .)
    WHILE           reduce using rule 88 (terminarGoto -> .)
    FROM            reduce using rule 88 (terminarGoto -> .)
    LPAREN          reduce using rule 88 (terminarGoto -> .)
    C_INT           reduce using rule 88 (terminarGoto -> .)
    C_FLOAT         reduce using rule 88 (terminarGoto -> .)
    C_CHAR          reduce using rule 88 (terminarGoto -> .)
    RPAREN          reduce using rule 88 (terminarGoto -> .)
    RBRACKET        reduce using rule 88 (terminarGoto -> .)

    terminarGoto                   shift and go to state 213

state 209

    (54) ELSE1 -> ELSE . gotoElse CUERPO
    (91) gotoElse -> .

    LBRACKET        reduce using rule 91 (gotoElse -> .)

    gotoElse                       shift and go to state 214

state 210

    (55) ELSE1 -> empty .

    NAME            reduce using rule 55 (ELSE1 -> empty .)
    RETURN          reduce using rule 55 (ELSE1 -> empty .)
    READ            reduce using rule 55 (ELSE1 -> empty .)
    PRINT           reduce using rule 55 (ELSE1 -> empty .)
    IF              reduce using rule 55 (ELSE1 -> empty .)
    WHILE           reduce using rule 55 (ELSE1 -> empty .)
    FROM            reduce using rule 55 (ELSE1 -> empty .)
    LPAREN          reduce using rule 55 (ELSE1 -> empty .)
    C_INT           reduce using rule 55 (ELSE1 -> empty .)
    C_FLOAT         reduce using rule 55 (ELSE1 -> empty .)
    C_CHAR          reduce using rule 55 (ELSE1 -> empty .)
    RPAREN          reduce using rule 55 (ELSE1 -> empty .)
    RBRACKET        reduce using rule 55 (ELSE1 -> empty .)


state 211

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO . terminarWhile
    (90) terminarWhile -> .

    NAME            reduce using rule 90 (terminarWhile -> .)
    RETURN          reduce using rule 90 (terminarWhile -> .)
    READ            reduce using rule 90 (terminarWhile -> .)
    PRINT           reduce using rule 90 (terminarWhile -> .)
    IF              reduce using rule 90 (terminarWhile -> .)
    WHILE           reduce using rule 90 (terminarWhile -> .)
    FROM            reduce using rule 90 (terminarWhile -> .)
    LPAREN          reduce using rule 90 (terminarWhile -> .)
    C_INT           reduce using rule 90 (terminarWhile -> .)
    C_FLOAT         reduce using rule 90 (terminarWhile -> .)
    C_CHAR          reduce using rule 90 (terminarWhile -> .)
    RPAREN          reduce using rule 90 (terminarWhile -> .)
    RBRACKET        reduce using rule 90 (terminarWhile -> .)

    terminarWhile                  shift and go to state 215

state 212

    (57) CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .

    NAME            reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    RETURN          reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    READ            reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    PRINT           reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    IF              reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    WHILE           reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    FROM            reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    LPAREN          reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    C_INT           reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    C_FLOAT         reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    C_CHAR          reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    RPAREN          reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)
    RBRACKET        reduce using rule 57 (CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO .)


state 213

    (53) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .

    NAME            reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RETURN          reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    READ            reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    PRINT           reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    IF              reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    WHILE           reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    FROM            reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    LPAREN          reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    C_INT           reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    C_FLOAT         reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    C_CHAR          reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RPAREN          reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RBRACKET        reduce using rule 53 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)


state 214

    (54) ELSE1 -> ELSE gotoElse . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 68

    CUERPO                         shift and go to state 216

state 215

    (56) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .

    NAME            reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RETURN          reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    READ            reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    PRINT           reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    IF              reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    WHILE           reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    FROM            reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    LPAREN          reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    C_INT           reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    C_FLOAT         reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    C_CHAR          reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RPAREN          reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RBRACKET        reduce using rule 56 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)


state 216

    (54) ELSE1 -> ELSE gotoElse CUERPO .

    NAME            reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    RETURN          reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    READ            reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    PRINT           reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    IF              reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    WHILE           reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    FROM            reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    LPAREN          reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    C_INT           reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    C_FLOAT         reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    C_CHAR          reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    RPAREN          reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)
    RBRACKET        reduce using rule 54 (ELSE1 -> ELSE gotoElse CUERPO .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 42 resolved as shift
WARNING: shift/reduce conflict for NAME in state 54 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 54 resolved as shift
WARNING: shift/reduce conflict for C_INT in state 54 resolved as shift
WARNING: shift/reduce conflict for C_FLOAT in state 54 resolved as shift
WARNING: shift/reduce conflict for C_CHAR in state 54 resolved as shift
WARNING: shift/reduce conflict for NAME in state 110 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 110 resolved as shift
WARNING: shift/reduce conflict for C_INT in state 110 resolved as shift
WARNING: shift/reduce conflict for C_FLOAT in state 110 resolved as shift
WARNING: shift/reduce conflict for C_CHAR in state 110 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 164 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 198 resolved as shift
