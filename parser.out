Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo
Rule 2     F -> FUNCION F
Rule 3     F -> empty
Rule 4     VARS -> borrarListaVar VAR V1
Rule 5     V1 -> TIPO VARIABLEDer V2 SEMICOLON V3
Rule 6     V2 -> COMMA VARIABLEDer V2
Rule 7     V2 -> empty
Rule 8     V3 -> V1
Rule 9     V3 -> empty
Rule 10    FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO
Rule 11    V4 -> VARS
Rule 12    V4 -> empty
Rule 13    PARAMS -> TIPO NAME agregarVarLista P1
Rule 14    P1 -> P2
Rule 15    P1 -> empty
Rule 16    P2 -> COMMA PARAMS P1
Rule 17    CUERPO -> LBRACKET E RBRACKET
Rule 18    E -> E1
Rule 19    E -> empty
Rule 20    E1 -> ESTATUTO
Rule 21    E1 -> ESTATUTO E1
Rule 22    TIPO -> INT
Rule 23    TIPO -> FLOAT
Rule 24    TIPO -> CHAR
Rule 25    TIPO_FUNCION -> INT
Rule 26    TIPO_FUNCION -> FLOAT
Rule 27    TIPO_FUNCION -> CHAR
Rule 28    TIPO_FUNCION -> VOID
Rule 29    PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO
Rule 30    VARIABLE -> NAME agregarPilaOp E2
Rule 31    E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso
Rule 32    E2 -> empty
Rule 33    VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der
Rule 34    E2Der -> LSBRACKET C_INT declararArray RSBRACKET
Rule 35    E2Der -> empty
Rule 36    ESTATUTO -> ASIGNACION
Rule 37    ESTATUTO -> LLAMADA
Rule 38    ESTATUTO -> RETORNO
Rule 39    ESTATUTO -> LECTURA
Rule 40    ESTATUTO -> ESCRITURA
Rule 41    ESTATUTO -> CONDICION
Rule 42    ESTATUTO -> CICLO_W
Rule 43    ESTATUTO -> CICLO_F
Rule 44    ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON
Rule 45    LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON
Rule 46    E1 -> EXP
Rule 47    E1 -> EXP COMMA E1
Rule 48    LLAMADAF -> NAME LPAREN E1 RPAREN
Rule 49    RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON
Rule 50    LECTURA -> READ LPAREN V3 RPAREN SEMICOLON
Rule 51    V3 -> VARIABLE popRead COMMA V3
Rule 52    V3 -> VARIABLE popRead
Rule 53    ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON
Rule 54    E3 -> S_EXP popPrint
Rule 55    E3 -> S_EXP popPrint COMMA E3
Rule 56    CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
Rule 57    ELSE1 -> ELSE gotoElse CUERPO
Rule 58    ELSE1 -> empty
Rule 59    CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
Rule 60    CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
Rule 61    H_EXP -> T_EXP
Rule 62    H_EXP -> T_EXP OR H_EXP
Rule 63    T_EXP -> G_EXP
Rule 64    T_EXP -> G_EXP AND T_EXP
Rule 65    G_EXP -> EXP B popBool
Rule 66    B -> GREATER_OR_EQUAL meterOperador G_EXP
Rule 67    B -> LESS_OR_EQUAL meterOperador G_EXP
Rule 68    B -> GREATER_THAN meterOperador G_EXP
Rule 69    B -> LESS_THAN meterOperador G_EXP
Rule 70    B -> IS_EQUAL meterOperador G_EXP
Rule 71    B -> NOT_EQUAL meterOperador G_EXP
Rule 72    B -> empty
Rule 73    S_EXP -> C_STRING agregarConstString
Rule 74    S_EXP -> EXP
Rule 75    EXP -> TERMINO popSumaResta T
Rule 76    T -> PLUS meterOperador EXP
Rule 77    T -> MINUS meterOperador EXP
Rule 78    T -> empty
Rule 79    TERMINO -> FACTOR popMultDiv F2
Rule 80    F2 -> DIVIDE meterOperador TERMINO
Rule 81    F2 -> MULTIPLY meterOperador TERMINO
Rule 82    F2 -> empty
Rule 83    FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
Rule 84    FACTOR -> C_INT agregarConstInt
Rule 85    FACTOR -> C_FLOAT agregarConstFloat
Rule 86    FACTOR -> C_CHAR agregarConstChar
Rule 87    FACTOR -> VARIABLE
Rule 88    FACTOR -> LLAMADAF
Rule 89    empty -> <empty>
Rule 90    agregarLocalVar -> <empty>
Rule 91    agregarParamTable -> <empty>
Rule 92    guardarArreglo -> <empty>
Rule 93    verificarArreglo -> <empty>
Rule 94    declararArray -> <empty>
Rule 95    agregarFrom -> <empty>
Rule 96    crearCompFrom -> <empty>
Rule 97    sumarFrom -> <empty>
Rule 98    agregarConstInt -> <empty>
Rule 99    agregarConstFloat -> <empty>
Rule 100   agregarConstChar -> <empty>
Rule 101   agregarConstString -> <empty>
Rule 102   scopeGlobal -> <empty>
Rule 103   scopeLocal -> <empty>
Rule 104   scopeTemp -> <empty>
Rule 105   scopeConst -> <empty>
Rule 106   gotoIf -> <empty>
Rule 107   terminarGoto -> <empty>
Rule 108   agregarWhile -> <empty>
Rule 109   terminarWhile -> <empty>
Rule 110   gotoElse -> <empty>
Rule 111   meterFondoFalso -> <empty>
Rule 112   quitarFondoFalso -> <empty>
Rule 113   agregarPilaOp -> <empty>
Rule 114   popPrint -> <empty>
Rule 115   popRead -> <empty>
Rule 116   popReturn -> <empty>
Rule 117   popBool -> <empty>
Rule 118   popIgual -> <empty>
Rule 119   popMultDiv -> <empty>
Rule 120   popSumaResta -> <empty>
Rule 121   meterIgual -> <empty>
Rule 122   meterBool -> <empty>
Rule 123   meterMultDiv -> <empty>
Rule 124   meterSumaResta -> <empty>
Rule 125   meterOperador -> <empty>
Rule 126   crearFuncGlobal -> <empty>
Rule 127   crearFuncMain -> <empty>
Rule 128   agregarFunc -> <empty>
Rule 129   agregarVariables -> <empty>
Rule 130   printFunciones -> <empty>
Rule 131   printTodo -> <empty>
Rule 132   agregarVarLista -> <empty>
Rule 133   borrarListaVar -> <empty>

Terminals, with rules where they appear

AND                  : 64
CHAR                 : 24 27
COMMA                : 6 16 47 51 55
C_CHAR               : 86
C_FLOAT              : 85
C_INT                : 34 84
C_STRING             : 73
DIVIDE               : 80
DO                   : 59 60
ELSE                 : 57
EQUALS               : 44 60
FLOAT                : 23 26
FROM                 : 60
FUNC                 : 10
GREATER_OR_EQUAL     : 66
GREATER_THAN         : 68
IF                   : 56
INT                  : 22 25
IS_EQUAL             : 70
LBRACKET             : 17
LESS_OR_EQUAL        : 67
LESS_THAN            : 69
LPAREN               : 10 29 45 48 49 50 53 56 59 83
LSBRACKET            : 31 34
MAIN                 : 29
MINUS                : 77
MULTIPLY             : 81
NAME                 : 1 10 13 30 33 45 48
NOT_EQUAL            : 71
OR                   : 62
PLUS                 : 76
PRINT                : 53
PROGRAM              : 1
RBRACKET             : 17
READ                 : 50
RETURN               : 49
RPAREN               : 10 29 45 48 49 50 53 56 59 83
RSBRACKET            : 31 34
SEMICOLON            : 1 5 44 45 49 50 53
THEN                 : 56
TO                   : 60
VAR                  : 4
VOID                 : 28
WHILE                : 59
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 36
B                    : 65
CICLO_F              : 43
CICLO_W              : 42
CONDICION            : 41
CUERPO               : 10 29 56 57 59 60
E                    : 17
E1                   : 18 21 45 47 48
E2                   : 30
E2Der                : 33
E3                   : 53 55
ELSE1                : 56
ESCRITURA            : 40
ESTATUTO             : 20 21
EXP                  : 31 44 46 47 49 60 60 65 74 76 77
F                    : 1 2
F2                   : 79
FACTOR               : 79
FUNCION              : 2
G_EXP                : 63 64 66 67 68 69 70 71
H_EXP                : 56 59 62 83
LECTURA              : 39
LLAMADA              : 37
LLAMADAF             : 88
P1                   : 13 16
P2                   : 14
PARAMS               : 10 16
PRINCIPAL            : 1
PROGRAMA             : 0
RETORNO              : 38
S_EXP                : 54 55
T                    : 75
TERMINO              : 75 80 81
TIPO                 : 5 13
TIPO_FUNCION         : 10
T_EXP                : 61 62 64
V1                   : 4 8
V2                   : 5 6
V3                   : 5 50 51
V4                   : 10
VARIABLE             : 44 51 52 60 87
VARIABLEDer          : 5 6
VARS                 : 1 11
agregarConstChar     : 86
agregarConstFloat    : 85
agregarConstInt      : 84
agregarConstString   : 73
agregarFrom          : 60
agregarFunc          : 10
agregarLocalVar      : 10
agregarParamTable    : 10
agregarPilaOp        : 30
agregarVarLista      : 13 33
agregarVariables     : 10 33
agregarWhile         : 59 60
borrarListaVar       : 4 10 33
crearCompFrom        : 60
crearFuncGlobal      : 1
crearFuncMain        : 29
declararArray        : 34
empty                : 3 7 9 12 15 19 32 35 58 72 78 82
gotoElse             : 57
gotoIf               : 56 59 60
guardarArreglo       : 31
meterBool            : 
meterFondoFalso      : 31 83
meterIgual           : 
meterMultDiv         : 
meterOperador        : 44 60 66 67 68 69 70 71 76 77 80 81
meterSumaResta       : 
popBool              : 65
popIgual             : 44 60
popMultDiv           : 79
popPrint             : 54 55
popRead              : 51 52
popReturn            : 49
popSumaResta         : 75
printFunciones       : 
printTodo            : 1
quitarFondoFalso     : 31 83
scopeConst           : 
scopeGlobal          : 1
scopeLocal           : 10
scopeTemp            : 
sumarFrom            : 60
terminarGoto         : 56
terminarWhile        : 59 60
verificarArreglo     : 31

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo
    (126) crearFuncGlobal -> .

    PROGRAM         reduce using rule 126 (crearFuncGlobal -> .)

    PROGRAMA                       shift and go to state 1
    crearFuncGlobal                shift and go to state 2

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> crearFuncGlobal . PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo

    PROGRAM         shift and go to state 3


state 3

    (1) PROGRAMA -> crearFuncGlobal PROGRAM . NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo

    NAME            shift and go to state 4


state 4

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME . SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo

    SEMICOLON       shift and go to state 5


state 5

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON . scopeGlobal VARS F PRINCIPAL printTodo
    (102) scopeGlobal -> .

    VAR             reduce using rule 102 (scopeGlobal -> .)

    scopeGlobal                    shift and go to state 6

state 6

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal . VARS F PRINCIPAL printTodo
    (4) VARS -> . borrarListaVar VAR V1
    (133) borrarListaVar -> .

    VAR             reduce using rule 133 (borrarListaVar -> .)

    VARS                           shift and go to state 7
    borrarListaVar                 shift and go to state 8

state 7

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS . F PRINCIPAL printTodo
    (2) F -> . FUNCION F
    (3) F -> . empty
    (10) FUNCION -> . FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO
    (89) empty -> .

    FUNC            shift and go to state 12
    MAIN            reduce using rule 89 (empty -> .)

    F                              shift and go to state 9
    FUNCION                        shift and go to state 10
    empty                          shift and go to state 11

state 8

    (4) VARS -> borrarListaVar . VAR V1

    VAR             shift and go to state 13


state 9

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F . PRINCIPAL printTodo
    (29) PRINCIPAL -> . MAIN LPAREN crearFuncMain RPAREN CUERPO

    MAIN            shift and go to state 15

    PRINCIPAL                      shift and go to state 14

state 10

    (2) F -> FUNCION . F
    (2) F -> . FUNCION F
    (3) F -> . empty
    (10) FUNCION -> . FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO
    (89) empty -> .

    FUNC            shift and go to state 12
    MAIN            reduce using rule 89 (empty -> .)

    FUNCION                        shift and go to state 10
    F                              shift and go to state 16
    empty                          shift and go to state 11

state 11

    (3) F -> empty .

    MAIN            reduce using rule 3 (F -> empty .)


state 12

    (10) FUNCION -> FUNC . TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO
    (25) TIPO_FUNCION -> . INT
    (26) TIPO_FUNCION -> . FLOAT
    (27) TIPO_FUNCION -> . CHAR
    (28) TIPO_FUNCION -> . VOID

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    VOID            shift and go to state 21

    TIPO_FUNCION                   shift and go to state 17

state 13

    (4) VARS -> borrarListaVar VAR . V1
    (5) V1 -> . TIPO VARIABLEDer V2 SEMICOLON V3
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    V1                             shift and go to state 22
    TIPO                           shift and go to state 23

state 14

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL . printTodo
    (131) printTodo -> .

    $end            reduce using rule 131 (printTodo -> .)

    printTodo                      shift and go to state 27

state 15

    (29) PRINCIPAL -> MAIN . LPAREN crearFuncMain RPAREN CUERPO

    LPAREN          shift and go to state 28


state 16

    (2) F -> FUNCION F .

    MAIN            reduce using rule 2 (F -> FUNCION F .)


state 17

    (10) FUNCION -> FUNC TIPO_FUNCION . NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO

    NAME            shift and go to state 29


state 18

    (25) TIPO_FUNCION -> INT .

    NAME            reduce using rule 25 (TIPO_FUNCION -> INT .)


state 19

    (26) TIPO_FUNCION -> FLOAT .

    NAME            reduce using rule 26 (TIPO_FUNCION -> FLOAT .)


state 20

    (27) TIPO_FUNCION -> CHAR .

    NAME            reduce using rule 27 (TIPO_FUNCION -> CHAR .)


state 21

    (28) TIPO_FUNCION -> VOID .

    NAME            reduce using rule 28 (TIPO_FUNCION -> VOID .)


state 22

    (4) VARS -> borrarListaVar VAR V1 .

    FUNC            reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)
    MAIN            reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)
    LBRACKET        reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)


state 23

    (5) V1 -> TIPO . VARIABLEDer V2 SEMICOLON V3
    (33) VARIABLEDer -> . NAME agregarVarLista agregarVariables borrarListaVar E2Der

    NAME            shift and go to state 31

    VARIABLEDer                    shift and go to state 30

state 24

    (22) TIPO -> INT .

    NAME            reduce using rule 22 (TIPO -> INT .)


state 25

    (23) TIPO -> FLOAT .

    NAME            reduce using rule 23 (TIPO -> FLOAT .)


state 26

    (24) TIPO -> CHAR .

    NAME            reduce using rule 24 (TIPO -> CHAR .)


state 27

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo .

    $end            reduce using rule 1 (PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo .)


state 28

    (29) PRINCIPAL -> MAIN LPAREN . crearFuncMain RPAREN CUERPO
    (127) crearFuncMain -> .

    RPAREN          reduce using rule 127 (crearFuncMain -> .)

    crearFuncMain                  shift and go to state 32

state 29

    (10) FUNCION -> FUNC TIPO_FUNCION NAME . agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO
    (128) agregarFunc -> .

    LPAREN          reduce using rule 128 (agregarFunc -> .)

    agregarFunc                    shift and go to state 33

state 30

    (5) V1 -> TIPO VARIABLEDer . V2 SEMICOLON V3
    (6) V2 -> . COMMA VARIABLEDer V2
    (7) V2 -> . empty
    (89) empty -> .

    COMMA           shift and go to state 35
    SEMICOLON       reduce using rule 89 (empty -> .)

    V2                             shift and go to state 34
    empty                          shift and go to state 36

state 31

    (33) VARIABLEDer -> NAME . agregarVarLista agregarVariables borrarListaVar E2Der
    (132) agregarVarLista -> .

    LSBRACKET       reduce using rule 132 (agregarVarLista -> .)
    COMMA           reduce using rule 132 (agregarVarLista -> .)
    SEMICOLON       reduce using rule 132 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 37

state 32

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain . RPAREN CUERPO

    RPAREN          shift and go to state 38


state 33

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc . LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO

    LPAREN          shift and go to state 39


state 34

    (5) V1 -> TIPO VARIABLEDer V2 . SEMICOLON V3

    SEMICOLON       shift and go to state 40


state 35

    (6) V2 -> COMMA . VARIABLEDer V2
    (33) VARIABLEDer -> . NAME agregarVarLista agregarVariables borrarListaVar E2Der

    NAME            shift and go to state 31

    VARIABLEDer                    shift and go to state 41

state 36

    (7) V2 -> empty .

    SEMICOLON       reduce using rule 7 (V2 -> empty .)


state 37

    (33) VARIABLEDer -> NAME agregarVarLista . agregarVariables borrarListaVar E2Der
    (129) agregarVariables -> .

    LSBRACKET       reduce using rule 129 (agregarVariables -> .)
    COMMA           reduce using rule 129 (agregarVariables -> .)
    SEMICOLON       reduce using rule 129 (agregarVariables -> .)

    agregarVariables               shift and go to state 42

state 38

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 43

state 39

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN . borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO
    (133) borrarListaVar -> .

    INT             reduce using rule 133 (borrarListaVar -> .)
    FLOAT           reduce using rule 133 (borrarListaVar -> .)
    CHAR            reduce using rule 133 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 45

state 40

    (5) V1 -> TIPO VARIABLEDer V2 SEMICOLON . V3
    (8) V3 -> . V1
    (9) V3 -> . empty
    (51) V3 -> . VARIABLE popRead COMMA V3
    (52) V3 -> . VARIABLE popRead
    (5) V1 -> . TIPO VARIABLEDer V2 SEMICOLON V3
    (89) empty -> .
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    FUNC            reduce using rule 89 (empty -> .)
    MAIN            reduce using rule 89 (empty -> .)
    LBRACKET        reduce using rule 89 (empty -> .)
    RPAREN          reduce using rule 89 (empty -> .)
    NAME            shift and go to state 50
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    TIPO                           shift and go to state 23
    V3                             shift and go to state 46
    V1                             shift and go to state 47
    empty                          shift and go to state 48
    VARIABLE                       shift and go to state 49

state 41

    (6) V2 -> COMMA VARIABLEDer . V2
    (6) V2 -> . COMMA VARIABLEDer V2
    (7) V2 -> . empty
    (89) empty -> .

    COMMA           shift and go to state 35
    SEMICOLON       reduce using rule 89 (empty -> .)

    V2                             shift and go to state 51
    empty                          shift and go to state 36

state 42

    (33) VARIABLEDer -> NAME agregarVarLista agregarVariables . borrarListaVar E2Der
    (133) borrarListaVar -> .

    LSBRACKET       reduce using rule 133 (borrarListaVar -> .)
    COMMA           reduce using rule 133 (borrarListaVar -> .)
    SEMICOLON       reduce using rule 133 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 52

state 43

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO .

    $end            reduce using rule 29 (PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO .)


state 44

    (17) CUERPO -> LBRACKET . E RBRACKET
    (18) E -> . E1
    (19) E -> . empty
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (46) E1 -> . EXP
    (47) E1 -> . EXP COMMA E1
    (89) empty -> .
    (36) ESTATUTO -> . ASIGNACION
    (37) ESTATUTO -> . LLAMADA
    (38) ESTATUTO -> . RETORNO
    (39) ESTATUTO -> . LECTURA
    (40) ESTATUTO -> . ESCRITURA
    (41) ESTATUTO -> . CONDICION
    (42) ESTATUTO -> . CICLO_W
    (43) ESTATUTO -> . CICLO_F
    (75) EXP -> . TERMINO popSumaResta T
    (44) ASIGNACION -> . VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON
    (45) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (49) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (50) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (53) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (56) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (59) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (60) CICLO_F -> . FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (79) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    RBRACKET        reduce using rule 89 (empty -> .)
    NAME            shift and go to state 68
    RETURN          shift and go to state 70
    READ            shift and go to state 71
    PRINT           shift and go to state 72
    IF              shift and go to state 73
    WHILE           shift and go to state 74
    FROM            shift and go to state 75
    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79

    E                              shift and go to state 53
    E1                             shift and go to state 54
    empty                          shift and go to state 55
    ESTATUTO                       shift and go to state 56
    EXP                            shift and go to state 57
    ASIGNACION                     shift and go to state 58
    LLAMADA                        shift and go to state 59
    RETORNO                        shift and go to state 60
    LECTURA                        shift and go to state 61
    ESCRITURA                      shift and go to state 62
    CONDICION                      shift and go to state 63
    CICLO_W                        shift and go to state 64
    CICLO_F                        shift and go to state 65
    TERMINO                        shift and go to state 66
    VARIABLE                       shift and go to state 67
    FACTOR                         shift and go to state 76
    LLAMADAF                       shift and go to state 80

state 45

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar . scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO
    (103) scopeLocal -> .

    INT             reduce using rule 103 (scopeLocal -> .)
    FLOAT           reduce using rule 103 (scopeLocal -> .)
    CHAR            reduce using rule 103 (scopeLocal -> .)

    scopeLocal                     shift and go to state 81

state 46

    (5) V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .

    FUNC            reduce using rule 5 (V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .)
    MAIN            reduce using rule 5 (V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .)
    LBRACKET        reduce using rule 5 (V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .)
    RPAREN          reduce using rule 5 (V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .)


state 47

    (8) V3 -> V1 .

    FUNC            reduce using rule 8 (V3 -> V1 .)
    MAIN            reduce using rule 8 (V3 -> V1 .)
    LBRACKET        reduce using rule 8 (V3 -> V1 .)
    RPAREN          reduce using rule 8 (V3 -> V1 .)


state 48

    (9) V3 -> empty .

    FUNC            reduce using rule 9 (V3 -> empty .)
    MAIN            reduce using rule 9 (V3 -> empty .)
    LBRACKET        reduce using rule 9 (V3 -> empty .)
    RPAREN          reduce using rule 9 (V3 -> empty .)


state 49

    (51) V3 -> VARIABLE . popRead COMMA V3
    (52) V3 -> VARIABLE . popRead
    (115) popRead -> .

    COMMA           reduce using rule 115 (popRead -> .)
    FUNC            reduce using rule 115 (popRead -> .)
    MAIN            reduce using rule 115 (popRead -> .)
    LBRACKET        reduce using rule 115 (popRead -> .)
    RPAREN          reduce using rule 115 (popRead -> .)

    popRead                        shift and go to state 82

state 50

    (30) VARIABLE -> NAME . agregarPilaOp E2
    (113) agregarPilaOp -> .

    LSBRACKET       reduce using rule 113 (agregarPilaOp -> .)
    COMMA           reduce using rule 113 (agregarPilaOp -> .)
    FUNC            reduce using rule 113 (agregarPilaOp -> .)
    MAIN            reduce using rule 113 (agregarPilaOp -> .)
    LBRACKET        reduce using rule 113 (agregarPilaOp -> .)
    RPAREN          reduce using rule 113 (agregarPilaOp -> .)
    EQUALS          reduce using rule 113 (agregarPilaOp -> .)

    agregarPilaOp                  shift and go to state 83

state 51

    (6) V2 -> COMMA VARIABLEDer V2 .

    SEMICOLON       reduce using rule 6 (V2 -> COMMA VARIABLEDer V2 .)


state 52

    (33) VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar . E2Der
    (34) E2Der -> . LSBRACKET C_INT declararArray RSBRACKET
    (35) E2Der -> . empty
    (89) empty -> .

    LSBRACKET       shift and go to state 85
    COMMA           reduce using rule 89 (empty -> .)
    SEMICOLON       reduce using rule 89 (empty -> .)

    E2Der                          shift and go to state 84
    empty                          shift and go to state 86

state 53

    (17) CUERPO -> LBRACKET E . RBRACKET

    RBRACKET        shift and go to state 87


state 54

    (18) E -> E1 .

    RBRACKET        reduce using rule 18 (E -> E1 .)


state 55

    (19) E -> empty .

    RBRACKET        reduce using rule 19 (E -> empty .)


state 56

    (20) E1 -> ESTATUTO .
    (21) E1 -> ESTATUTO . E1
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (46) E1 -> . EXP
    (47) E1 -> . EXP COMMA E1
    (36) ESTATUTO -> . ASIGNACION
    (37) ESTATUTO -> . LLAMADA
    (38) ESTATUTO -> . RETORNO
    (39) ESTATUTO -> . LECTURA
    (40) ESTATUTO -> . ESCRITURA
    (41) ESTATUTO -> . CONDICION
    (42) ESTATUTO -> . CICLO_W
    (43) ESTATUTO -> . CICLO_F
    (75) EXP -> . TERMINO popSumaResta T
    (44) ASIGNACION -> . VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON
    (45) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (49) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (50) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (53) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (56) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (59) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (60) CICLO_F -> . FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (79) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    RBRACKET        reduce using rule 20 (E1 -> ESTATUTO .)
    RPAREN          reduce using rule 20 (E1 -> ESTATUTO .)
    NAME            shift and go to state 68
    RETURN          shift and go to state 70
    READ            shift and go to state 71
    PRINT           shift and go to state 72
    IF              shift and go to state 73
    WHILE           shift and go to state 74
    FROM            shift and go to state 75
    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79

    ESTATUTO                       shift and go to state 56
    E1                             shift and go to state 88
    EXP                            shift and go to state 57
    ASIGNACION                     shift and go to state 58
    LLAMADA                        shift and go to state 59
    RETORNO                        shift and go to state 60
    LECTURA                        shift and go to state 61
    ESCRITURA                      shift and go to state 62
    CONDICION                      shift and go to state 63
    CICLO_W                        shift and go to state 64
    CICLO_F                        shift and go to state 65
    TERMINO                        shift and go to state 66
    VARIABLE                       shift and go to state 67
    FACTOR                         shift and go to state 76
    LLAMADAF                       shift and go to state 80

state 57

    (46) E1 -> EXP .
    (47) E1 -> EXP . COMMA E1

    RBRACKET        reduce using rule 46 (E1 -> EXP .)
    RPAREN          reduce using rule 46 (E1 -> EXP .)
    COMMA           shift and go to state 89


state 58

    (36) ESTATUTO -> ASIGNACION .

    NAME            reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    READ            reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    PRINT           reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    WHILE           reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    FROM            reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    LPAREN          reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    C_INT           reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    C_FLOAT         reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    C_CHAR          reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    RBRACKET        reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    RPAREN          reduce using rule 36 (ESTATUTO -> ASIGNACION .)


state 59

    (37) ESTATUTO -> LLAMADA .

    NAME            reduce using rule 37 (ESTATUTO -> LLAMADA .)
    RETURN          reduce using rule 37 (ESTATUTO -> LLAMADA .)
    READ            reduce using rule 37 (ESTATUTO -> LLAMADA .)
    PRINT           reduce using rule 37 (ESTATUTO -> LLAMADA .)
    IF              reduce using rule 37 (ESTATUTO -> LLAMADA .)
    WHILE           reduce using rule 37 (ESTATUTO -> LLAMADA .)
    FROM            reduce using rule 37 (ESTATUTO -> LLAMADA .)
    LPAREN          reduce using rule 37 (ESTATUTO -> LLAMADA .)
    C_INT           reduce using rule 37 (ESTATUTO -> LLAMADA .)
    C_FLOAT         reduce using rule 37 (ESTATUTO -> LLAMADA .)
    C_CHAR          reduce using rule 37 (ESTATUTO -> LLAMADA .)
    RBRACKET        reduce using rule 37 (ESTATUTO -> LLAMADA .)
    RPAREN          reduce using rule 37 (ESTATUTO -> LLAMADA .)


state 60

    (38) ESTATUTO -> RETORNO .

    NAME            reduce using rule 38 (ESTATUTO -> RETORNO .)
    RETURN          reduce using rule 38 (ESTATUTO -> RETORNO .)
    READ            reduce using rule 38 (ESTATUTO -> RETORNO .)
    PRINT           reduce using rule 38 (ESTATUTO -> RETORNO .)
    IF              reduce using rule 38 (ESTATUTO -> RETORNO .)
    WHILE           reduce using rule 38 (ESTATUTO -> RETORNO .)
    FROM            reduce using rule 38 (ESTATUTO -> RETORNO .)
    LPAREN          reduce using rule 38 (ESTATUTO -> RETORNO .)
    C_INT           reduce using rule 38 (ESTATUTO -> RETORNO .)
    C_FLOAT         reduce using rule 38 (ESTATUTO -> RETORNO .)
    C_CHAR          reduce using rule 38 (ESTATUTO -> RETORNO .)
    RBRACKET        reduce using rule 38 (ESTATUTO -> RETORNO .)
    RPAREN          reduce using rule 38 (ESTATUTO -> RETORNO .)


state 61

    (39) ESTATUTO -> LECTURA .

    NAME            reduce using rule 39 (ESTATUTO -> LECTURA .)
    RETURN          reduce using rule 39 (ESTATUTO -> LECTURA .)
    READ            reduce using rule 39 (ESTATUTO -> LECTURA .)
    PRINT           reduce using rule 39 (ESTATUTO -> LECTURA .)
    IF              reduce using rule 39 (ESTATUTO -> LECTURA .)
    WHILE           reduce using rule 39 (ESTATUTO -> LECTURA .)
    FROM            reduce using rule 39 (ESTATUTO -> LECTURA .)
    LPAREN          reduce using rule 39 (ESTATUTO -> LECTURA .)
    C_INT           reduce using rule 39 (ESTATUTO -> LECTURA .)
    C_FLOAT         reduce using rule 39 (ESTATUTO -> LECTURA .)
    C_CHAR          reduce using rule 39 (ESTATUTO -> LECTURA .)
    RBRACKET        reduce using rule 39 (ESTATUTO -> LECTURA .)
    RPAREN          reduce using rule 39 (ESTATUTO -> LECTURA .)


state 62

    (40) ESTATUTO -> ESCRITURA .

    NAME            reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    RETURN          reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    READ            reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    PRINT           reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    IF              reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    WHILE           reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    FROM            reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    LPAREN          reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    C_INT           reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    C_FLOAT         reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    C_CHAR          reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    RBRACKET        reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    RPAREN          reduce using rule 40 (ESTATUTO -> ESCRITURA .)


state 63

    (41) ESTATUTO -> CONDICION .

    NAME            reduce using rule 41 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 41 (ESTATUTO -> CONDICION .)
    READ            reduce using rule 41 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 41 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 41 (ESTATUTO -> CONDICION .)
    WHILE           reduce using rule 41 (ESTATUTO -> CONDICION .)
    FROM            reduce using rule 41 (ESTATUTO -> CONDICION .)
    LPAREN          reduce using rule 41 (ESTATUTO -> CONDICION .)
    C_INT           reduce using rule 41 (ESTATUTO -> CONDICION .)
    C_FLOAT         reduce using rule 41 (ESTATUTO -> CONDICION .)
    C_CHAR          reduce using rule 41 (ESTATUTO -> CONDICION .)
    RBRACKET        reduce using rule 41 (ESTATUTO -> CONDICION .)
    RPAREN          reduce using rule 41 (ESTATUTO -> CONDICION .)


state 64

    (42) ESTATUTO -> CICLO_W .

    NAME            reduce using rule 42 (ESTATUTO -> CICLO_W .)
    RETURN          reduce using rule 42 (ESTATUTO -> CICLO_W .)
    READ            reduce using rule 42 (ESTATUTO -> CICLO_W .)
    PRINT           reduce using rule 42 (ESTATUTO -> CICLO_W .)
    IF              reduce using rule 42 (ESTATUTO -> CICLO_W .)
    WHILE           reduce using rule 42 (ESTATUTO -> CICLO_W .)
    FROM            reduce using rule 42 (ESTATUTO -> CICLO_W .)
    LPAREN          reduce using rule 42 (ESTATUTO -> CICLO_W .)
    C_INT           reduce using rule 42 (ESTATUTO -> CICLO_W .)
    C_FLOAT         reduce using rule 42 (ESTATUTO -> CICLO_W .)
    C_CHAR          reduce using rule 42 (ESTATUTO -> CICLO_W .)
    RBRACKET        reduce using rule 42 (ESTATUTO -> CICLO_W .)
    RPAREN          reduce using rule 42 (ESTATUTO -> CICLO_W .)


state 65

    (43) ESTATUTO -> CICLO_F .

    NAME            reduce using rule 43 (ESTATUTO -> CICLO_F .)
    RETURN          reduce using rule 43 (ESTATUTO -> CICLO_F .)
    READ            reduce using rule 43 (ESTATUTO -> CICLO_F .)
    PRINT           reduce using rule 43 (ESTATUTO -> CICLO_F .)
    IF              reduce using rule 43 (ESTATUTO -> CICLO_F .)
    WHILE           reduce using rule 43 (ESTATUTO -> CICLO_F .)
    FROM            reduce using rule 43 (ESTATUTO -> CICLO_F .)
    LPAREN          reduce using rule 43 (ESTATUTO -> CICLO_F .)
    C_INT           reduce using rule 43 (ESTATUTO -> CICLO_F .)
    C_FLOAT         reduce using rule 43 (ESTATUTO -> CICLO_F .)
    C_CHAR          reduce using rule 43 (ESTATUTO -> CICLO_F .)
    RBRACKET        reduce using rule 43 (ESTATUTO -> CICLO_F .)
    RPAREN          reduce using rule 43 (ESTATUTO -> CICLO_F .)


state 66

    (75) EXP -> TERMINO . popSumaResta T
    (120) popSumaResta -> .

    PLUS            reduce using rule 120 (popSumaResta -> .)
    MINUS           reduce using rule 120 (popSumaResta -> .)
    COMMA           reduce using rule 120 (popSumaResta -> .)
    RBRACKET        reduce using rule 120 (popSumaResta -> .)
    RPAREN          reduce using rule 120 (popSumaResta -> .)
    GREATER_OR_EQUAL reduce using rule 120 (popSumaResta -> .)
    LESS_OR_EQUAL   reduce using rule 120 (popSumaResta -> .)
    GREATER_THAN    reduce using rule 120 (popSumaResta -> .)
    LESS_THAN       reduce using rule 120 (popSumaResta -> .)
    IS_EQUAL        reduce using rule 120 (popSumaResta -> .)
    NOT_EQUAL       reduce using rule 120 (popSumaResta -> .)
    AND             reduce using rule 120 (popSumaResta -> .)
    OR              reduce using rule 120 (popSumaResta -> .)
    SEMICOLON       reduce using rule 120 (popSumaResta -> .)
    RSBRACKET       reduce using rule 120 (popSumaResta -> .)
    TO              reduce using rule 120 (popSumaResta -> .)
    DO              reduce using rule 120 (popSumaResta -> .)

    popSumaResta                   shift and go to state 90

state 67

    (44) ASIGNACION -> VARIABLE . EQUALS meterOperador EXP popIgual SEMICOLON
    (87) FACTOR -> VARIABLE .

    EQUALS          shift and go to state 91
    DIVIDE          reduce using rule 87 (FACTOR -> VARIABLE .)
    MULTIPLY        reduce using rule 87 (FACTOR -> VARIABLE .)
    PLUS            reduce using rule 87 (FACTOR -> VARIABLE .)
    MINUS           reduce using rule 87 (FACTOR -> VARIABLE .)
    COMMA           reduce using rule 87 (FACTOR -> VARIABLE .)
    RBRACKET        reduce using rule 87 (FACTOR -> VARIABLE .)
    RPAREN          reduce using rule 87 (FACTOR -> VARIABLE .)


state 68

    (45) LLAMADA -> NAME . LPAREN E1 RPAREN SEMICOLON
    (30) VARIABLE -> NAME . agregarPilaOp E2
    (48) LLAMADAF -> NAME . LPAREN E1 RPAREN
    (113) agregarPilaOp -> .

    LPAREN          shift and go to state 92
    LSBRACKET       reduce using rule 113 (agregarPilaOp -> .)
    EQUALS          reduce using rule 113 (agregarPilaOp -> .)
    DIVIDE          reduce using rule 113 (agregarPilaOp -> .)
    MULTIPLY        reduce using rule 113 (agregarPilaOp -> .)
    PLUS            reduce using rule 113 (agregarPilaOp -> .)
    MINUS           reduce using rule 113 (agregarPilaOp -> .)
    COMMA           reduce using rule 113 (agregarPilaOp -> .)
    RBRACKET        reduce using rule 113 (agregarPilaOp -> .)
    RPAREN          reduce using rule 113 (agregarPilaOp -> .)

    agregarPilaOp                  shift and go to state 83

state 69

    (83) FACTOR -> LPAREN . meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (111) meterFondoFalso -> .

    LPAREN          reduce using rule 111 (meterFondoFalso -> .)
    C_INT           reduce using rule 111 (meterFondoFalso -> .)
    C_FLOAT         reduce using rule 111 (meterFondoFalso -> .)
    C_CHAR          reduce using rule 111 (meterFondoFalso -> .)
    NAME            reduce using rule 111 (meterFondoFalso -> .)

    meterFondoFalso                shift and go to state 93

state 70

    (49) RETORNO -> RETURN . LPAREN EXP popReturn RPAREN SEMICOLON

    LPAREN          shift and go to state 94


state 71

    (50) LECTURA -> READ . LPAREN V3 RPAREN SEMICOLON

    LPAREN          shift and go to state 95


state 72

    (53) ESCRITURA -> PRINT . LPAREN E3 RPAREN SEMICOLON

    LPAREN          shift and go to state 96


state 73

    (56) CONDICION -> IF . LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto

    LPAREN          shift and go to state 97


state 74

    (59) CICLO_W -> WHILE . agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (108) agregarWhile -> .

    LPAREN          reduce using rule 108 (agregarWhile -> .)

    agregarWhile                   shift and go to state 98

state 75

    (60) CICLO_F -> FROM . agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (108) agregarWhile -> .

    NAME            reduce using rule 108 (agregarWhile -> .)

    agregarWhile                   shift and go to state 99

state 76

    (79) TERMINO -> FACTOR . popMultDiv F2
    (119) popMultDiv -> .

    DIVIDE          reduce using rule 119 (popMultDiv -> .)
    MULTIPLY        reduce using rule 119 (popMultDiv -> .)
    PLUS            reduce using rule 119 (popMultDiv -> .)
    MINUS           reduce using rule 119 (popMultDiv -> .)
    COMMA           reduce using rule 119 (popMultDiv -> .)
    RBRACKET        reduce using rule 119 (popMultDiv -> .)
    RPAREN          reduce using rule 119 (popMultDiv -> .)
    GREATER_OR_EQUAL reduce using rule 119 (popMultDiv -> .)
    LESS_OR_EQUAL   reduce using rule 119 (popMultDiv -> .)
    GREATER_THAN    reduce using rule 119 (popMultDiv -> .)
    LESS_THAN       reduce using rule 119 (popMultDiv -> .)
    IS_EQUAL        reduce using rule 119 (popMultDiv -> .)
    NOT_EQUAL       reduce using rule 119 (popMultDiv -> .)
    AND             reduce using rule 119 (popMultDiv -> .)
    OR              reduce using rule 119 (popMultDiv -> .)
    SEMICOLON       reduce using rule 119 (popMultDiv -> .)
    RSBRACKET       reduce using rule 119 (popMultDiv -> .)
    TO              reduce using rule 119 (popMultDiv -> .)
    DO              reduce using rule 119 (popMultDiv -> .)

    popMultDiv                     shift and go to state 100

state 77

    (84) FACTOR -> C_INT . agregarConstInt
    (98) agregarConstInt -> .

    DIVIDE          reduce using rule 98 (agregarConstInt -> .)
    MULTIPLY        reduce using rule 98 (agregarConstInt -> .)
    PLUS            reduce using rule 98 (agregarConstInt -> .)
    MINUS           reduce using rule 98 (agregarConstInt -> .)
    COMMA           reduce using rule 98 (agregarConstInt -> .)
    RBRACKET        reduce using rule 98 (agregarConstInt -> .)
    RPAREN          reduce using rule 98 (agregarConstInt -> .)
    GREATER_OR_EQUAL reduce using rule 98 (agregarConstInt -> .)
    LESS_OR_EQUAL   reduce using rule 98 (agregarConstInt -> .)
    GREATER_THAN    reduce using rule 98 (agregarConstInt -> .)
    LESS_THAN       reduce using rule 98 (agregarConstInt -> .)
    IS_EQUAL        reduce using rule 98 (agregarConstInt -> .)
    NOT_EQUAL       reduce using rule 98 (agregarConstInt -> .)
    AND             reduce using rule 98 (agregarConstInt -> .)
    OR              reduce using rule 98 (agregarConstInt -> .)
    SEMICOLON       reduce using rule 98 (agregarConstInt -> .)
    RSBRACKET       reduce using rule 98 (agregarConstInt -> .)
    TO              reduce using rule 98 (agregarConstInt -> .)
    DO              reduce using rule 98 (agregarConstInt -> .)

    agregarConstInt                shift and go to state 101

state 78

    (85) FACTOR -> C_FLOAT . agregarConstFloat
    (99) agregarConstFloat -> .

    DIVIDE          reduce using rule 99 (agregarConstFloat -> .)
    MULTIPLY        reduce using rule 99 (agregarConstFloat -> .)
    PLUS            reduce using rule 99 (agregarConstFloat -> .)
    MINUS           reduce using rule 99 (agregarConstFloat -> .)
    COMMA           reduce using rule 99 (agregarConstFloat -> .)
    RBRACKET        reduce using rule 99 (agregarConstFloat -> .)
    RPAREN          reduce using rule 99 (agregarConstFloat -> .)
    GREATER_OR_EQUAL reduce using rule 99 (agregarConstFloat -> .)
    LESS_OR_EQUAL   reduce using rule 99 (agregarConstFloat -> .)
    GREATER_THAN    reduce using rule 99 (agregarConstFloat -> .)
    LESS_THAN       reduce using rule 99 (agregarConstFloat -> .)
    IS_EQUAL        reduce using rule 99 (agregarConstFloat -> .)
    NOT_EQUAL       reduce using rule 99 (agregarConstFloat -> .)
    AND             reduce using rule 99 (agregarConstFloat -> .)
    OR              reduce using rule 99 (agregarConstFloat -> .)
    SEMICOLON       reduce using rule 99 (agregarConstFloat -> .)
    RSBRACKET       reduce using rule 99 (agregarConstFloat -> .)
    TO              reduce using rule 99 (agregarConstFloat -> .)
    DO              reduce using rule 99 (agregarConstFloat -> .)

    agregarConstFloat              shift and go to state 102

state 79

    (86) FACTOR -> C_CHAR . agregarConstChar
    (100) agregarConstChar -> .

    DIVIDE          reduce using rule 100 (agregarConstChar -> .)
    MULTIPLY        reduce using rule 100 (agregarConstChar -> .)
    PLUS            reduce using rule 100 (agregarConstChar -> .)
    MINUS           reduce using rule 100 (agregarConstChar -> .)
    COMMA           reduce using rule 100 (agregarConstChar -> .)
    RBRACKET        reduce using rule 100 (agregarConstChar -> .)
    RPAREN          reduce using rule 100 (agregarConstChar -> .)
    GREATER_OR_EQUAL reduce using rule 100 (agregarConstChar -> .)
    LESS_OR_EQUAL   reduce using rule 100 (agregarConstChar -> .)
    GREATER_THAN    reduce using rule 100 (agregarConstChar -> .)
    LESS_THAN       reduce using rule 100 (agregarConstChar -> .)
    IS_EQUAL        reduce using rule 100 (agregarConstChar -> .)
    NOT_EQUAL       reduce using rule 100 (agregarConstChar -> .)
    AND             reduce using rule 100 (agregarConstChar -> .)
    OR              reduce using rule 100 (agregarConstChar -> .)
    SEMICOLON       reduce using rule 100 (agregarConstChar -> .)
    RSBRACKET       reduce using rule 100 (agregarConstChar -> .)
    TO              reduce using rule 100 (agregarConstChar -> .)
    DO              reduce using rule 100 (agregarConstChar -> .)

    agregarConstChar               shift and go to state 103

state 80

    (88) FACTOR -> LLAMADAF .

    DIVIDE          reduce using rule 88 (FACTOR -> LLAMADAF .)
    MULTIPLY        reduce using rule 88 (FACTOR -> LLAMADAF .)
    PLUS            reduce using rule 88 (FACTOR -> LLAMADAF .)
    MINUS           reduce using rule 88 (FACTOR -> LLAMADAF .)
    COMMA           reduce using rule 88 (FACTOR -> LLAMADAF .)
    RBRACKET        reduce using rule 88 (FACTOR -> LLAMADAF .)
    RPAREN          reduce using rule 88 (FACTOR -> LLAMADAF .)
    GREATER_OR_EQUAL reduce using rule 88 (FACTOR -> LLAMADAF .)
    LESS_OR_EQUAL   reduce using rule 88 (FACTOR -> LLAMADAF .)
    GREATER_THAN    reduce using rule 88 (FACTOR -> LLAMADAF .)
    LESS_THAN       reduce using rule 88 (FACTOR -> LLAMADAF .)
    IS_EQUAL        reduce using rule 88 (FACTOR -> LLAMADAF .)
    NOT_EQUAL       reduce using rule 88 (FACTOR -> LLAMADAF .)
    AND             reduce using rule 88 (FACTOR -> LLAMADAF .)
    OR              reduce using rule 88 (FACTOR -> LLAMADAF .)
    SEMICOLON       reduce using rule 88 (FACTOR -> LLAMADAF .)
    RSBRACKET       reduce using rule 88 (FACTOR -> LLAMADAF .)
    TO              reduce using rule 88 (FACTOR -> LLAMADAF .)
    DO              reduce using rule 88 (FACTOR -> LLAMADAF .)


state 81

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal . PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO
    (13) PARAMS -> . TIPO NAME agregarVarLista P1
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    PARAMS                         shift and go to state 104
    TIPO                           shift and go to state 105

state 82

    (51) V3 -> VARIABLE popRead . COMMA V3
    (52) V3 -> VARIABLE popRead .

    COMMA           shift and go to state 106
    FUNC            reduce using rule 52 (V3 -> VARIABLE popRead .)
    MAIN            reduce using rule 52 (V3 -> VARIABLE popRead .)
    LBRACKET        reduce using rule 52 (V3 -> VARIABLE popRead .)
    RPAREN          reduce using rule 52 (V3 -> VARIABLE popRead .)


state 83

    (30) VARIABLE -> NAME agregarPilaOp . E2
    (31) E2 -> . LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso
    (32) E2 -> . empty
    (89) empty -> .

    LSBRACKET       shift and go to state 108
    COMMA           reduce using rule 89 (empty -> .)
    FUNC            reduce using rule 89 (empty -> .)
    MAIN            reduce using rule 89 (empty -> .)
    LBRACKET        reduce using rule 89 (empty -> .)
    RPAREN          reduce using rule 89 (empty -> .)
    EQUALS          reduce using rule 89 (empty -> .)
    DIVIDE          reduce using rule 89 (empty -> .)
    MULTIPLY        reduce using rule 89 (empty -> .)
    PLUS            reduce using rule 89 (empty -> .)
    MINUS           reduce using rule 89 (empty -> .)
    RBRACKET        reduce using rule 89 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 89 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 89 (empty -> .)
    GREATER_THAN    reduce using rule 89 (empty -> .)
    LESS_THAN       reduce using rule 89 (empty -> .)
    IS_EQUAL        reduce using rule 89 (empty -> .)
    NOT_EQUAL       reduce using rule 89 (empty -> .)
    AND             reduce using rule 89 (empty -> .)
    OR              reduce using rule 89 (empty -> .)
    SEMICOLON       reduce using rule 89 (empty -> .)
    RSBRACKET       reduce using rule 89 (empty -> .)
    TO              reduce using rule 89 (empty -> .)
    DO              reduce using rule 89 (empty -> .)

    E2                             shift and go to state 107
    empty                          shift and go to state 109

state 84

    (33) VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der .

    COMMA           reduce using rule 33 (VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der .)
    SEMICOLON       reduce using rule 33 (VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der .)


state 85

    (34) E2Der -> LSBRACKET . C_INT declararArray RSBRACKET

    C_INT           shift and go to state 110


state 86

    (35) E2Der -> empty .

    COMMA           reduce using rule 35 (E2Der -> empty .)
    SEMICOLON       reduce using rule 35 (E2Der -> empty .)


state 87

    (17) CUERPO -> LBRACKET E RBRACKET .

    $end            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    ELSE            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    NAME            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RETURN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    READ            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    PRINT           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    IF              reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    WHILE           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    FROM            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    LPAREN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    C_INT           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    C_FLOAT         reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    C_CHAR          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RPAREN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    FUNC            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    MAIN            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)


state 88

    (21) E1 -> ESTATUTO E1 .

    RBRACKET        reduce using rule 21 (E1 -> ESTATUTO E1 .)
    RPAREN          reduce using rule 21 (E1 -> ESTATUTO E1 .)


state 89

    (47) E1 -> EXP COMMA . E1
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (46) E1 -> . EXP
    (47) E1 -> . EXP COMMA E1
    (36) ESTATUTO -> . ASIGNACION
    (37) ESTATUTO -> . LLAMADA
    (38) ESTATUTO -> . RETORNO
    (39) ESTATUTO -> . LECTURA
    (40) ESTATUTO -> . ESCRITURA
    (41) ESTATUTO -> . CONDICION
    (42) ESTATUTO -> . CICLO_W
    (43) ESTATUTO -> . CICLO_F
    (75) EXP -> . TERMINO popSumaResta T
    (44) ASIGNACION -> . VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON
    (45) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (49) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (50) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (53) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (56) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (59) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (60) CICLO_F -> . FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (79) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    NAME            shift and go to state 68
    RETURN          shift and go to state 70
    READ            shift and go to state 71
    PRINT           shift and go to state 72
    IF              shift and go to state 73
    WHILE           shift and go to state 74
    FROM            shift and go to state 75
    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79

    EXP                            shift and go to state 57
    E1                             shift and go to state 111
    ESTATUTO                       shift and go to state 56
    ASIGNACION                     shift and go to state 58
    LLAMADA                        shift and go to state 59
    RETORNO                        shift and go to state 60
    LECTURA                        shift and go to state 61
    ESCRITURA                      shift and go to state 62
    CONDICION                      shift and go to state 63
    CICLO_W                        shift and go to state 64
    CICLO_F                        shift and go to state 65
    TERMINO                        shift and go to state 66
    VARIABLE                       shift and go to state 67
    FACTOR                         shift and go to state 76
    LLAMADAF                       shift and go to state 80

state 90

    (75) EXP -> TERMINO popSumaResta . T
    (76) T -> . PLUS meterOperador EXP
    (77) T -> . MINUS meterOperador EXP
    (78) T -> . empty
    (89) empty -> .

    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    COMMA           reduce using rule 89 (empty -> .)
    RBRACKET        reduce using rule 89 (empty -> .)
    RPAREN          reduce using rule 89 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 89 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 89 (empty -> .)
    GREATER_THAN    reduce using rule 89 (empty -> .)
    LESS_THAN       reduce using rule 89 (empty -> .)
    IS_EQUAL        reduce using rule 89 (empty -> .)
    NOT_EQUAL       reduce using rule 89 (empty -> .)
    AND             reduce using rule 89 (empty -> .)
    OR              reduce using rule 89 (empty -> .)
    SEMICOLON       reduce using rule 89 (empty -> .)
    RSBRACKET       reduce using rule 89 (empty -> .)
    TO              reduce using rule 89 (empty -> .)
    DO              reduce using rule 89 (empty -> .)

    T                              shift and go to state 112
    empty                          shift and go to state 115

state 91

    (44) ASIGNACION -> VARIABLE EQUALS . meterOperador EXP popIgual SEMICOLON
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 116

state 92

    (45) LLAMADA -> NAME LPAREN . E1 RPAREN SEMICOLON
    (48) LLAMADAF -> NAME LPAREN . E1 RPAREN
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (46) E1 -> . EXP
    (47) E1 -> . EXP COMMA E1
    (36) ESTATUTO -> . ASIGNACION
    (37) ESTATUTO -> . LLAMADA
    (38) ESTATUTO -> . RETORNO
    (39) ESTATUTO -> . LECTURA
    (40) ESTATUTO -> . ESCRITURA
    (41) ESTATUTO -> . CONDICION
    (42) ESTATUTO -> . CICLO_W
    (43) ESTATUTO -> . CICLO_F
    (75) EXP -> . TERMINO popSumaResta T
    (44) ASIGNACION -> . VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON
    (45) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (49) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (50) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (53) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (56) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (59) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (60) CICLO_F -> . FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (79) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    NAME            shift and go to state 68
    RETURN          shift and go to state 70
    READ            shift and go to state 71
    PRINT           shift and go to state 72
    IF              shift and go to state 73
    WHILE           shift and go to state 74
    FROM            shift and go to state 75
    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79

    E1                             shift and go to state 117
    ESTATUTO                       shift and go to state 56
    EXP                            shift and go to state 57
    ASIGNACION                     shift and go to state 58
    LLAMADA                        shift and go to state 59
    RETORNO                        shift and go to state 60
    LECTURA                        shift and go to state 61
    ESCRITURA                      shift and go to state 62
    CONDICION                      shift and go to state 63
    CICLO_W                        shift and go to state 64
    CICLO_F                        shift and go to state 65
    TERMINO                        shift and go to state 66
    VARIABLE                       shift and go to state 67
    FACTOR                         shift and go to state 76
    LLAMADAF                       shift and go to state 80

state 93

    (83) FACTOR -> LPAREN meterFondoFalso . H_EXP RPAREN quitarFondoFalso
    (61) H_EXP -> . T_EXP
    (62) H_EXP -> . T_EXP OR H_EXP
    (63) T_EXP -> . G_EXP
    (64) T_EXP -> . G_EXP AND T_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    H_EXP                          shift and go to state 118
    T_EXP                          shift and go to state 119
    G_EXP                          shift and go to state 120
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 94

    (49) RETORNO -> RETURN LPAREN . EXP popReturn RPAREN SEMICOLON
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    EXP                            shift and go to state 124
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 95

    (50) LECTURA -> READ LPAREN . V3 RPAREN SEMICOLON
    (8) V3 -> . V1
    (9) V3 -> . empty
    (51) V3 -> . VARIABLE popRead COMMA V3
    (52) V3 -> . VARIABLE popRead
    (5) V1 -> . TIPO VARIABLEDer V2 SEMICOLON V3
    (89) empty -> .
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    RPAREN          reduce using rule 89 (empty -> .)
    NAME            shift and go to state 50
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    V3                             shift and go to state 125
    V1                             shift and go to state 47
    empty                          shift and go to state 48
    VARIABLE                       shift and go to state 49
    TIPO                           shift and go to state 23

state 96

    (53) ESCRITURA -> PRINT LPAREN . E3 RPAREN SEMICOLON
    (54) E3 -> . S_EXP popPrint
    (55) E3 -> . S_EXP popPrint COMMA E3
    (73) S_EXP -> . C_STRING agregarConstString
    (74) S_EXP -> . EXP
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    C_STRING        shift and go to state 128
    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    E3                             shift and go to state 126
    S_EXP                          shift and go to state 127
    EXP                            shift and go to state 129
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 97

    (56) CONDICION -> IF LPAREN . H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (61) H_EXP -> . T_EXP
    (62) H_EXP -> . T_EXP OR H_EXP
    (63) T_EXP -> . G_EXP
    (64) T_EXP -> . G_EXP AND T_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    H_EXP                          shift and go to state 130
    T_EXP                          shift and go to state 119
    G_EXP                          shift and go to state 120
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 98

    (59) CICLO_W -> WHILE agregarWhile . LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile

    LPAREN          shift and go to state 131


state 99

    (60) CICLO_F -> FROM agregarWhile . VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (30) VARIABLE -> . NAME agregarPilaOp E2

    NAME            shift and go to state 50

    VARIABLE                       shift and go to state 132

state 100

    (79) TERMINO -> FACTOR popMultDiv . F2
    (80) F2 -> . DIVIDE meterOperador TERMINO
    (81) F2 -> . MULTIPLY meterOperador TERMINO
    (82) F2 -> . empty
    (89) empty -> .

    DIVIDE          shift and go to state 134
    MULTIPLY        shift and go to state 135
    PLUS            reduce using rule 89 (empty -> .)
    MINUS           reduce using rule 89 (empty -> .)
    COMMA           reduce using rule 89 (empty -> .)
    RBRACKET        reduce using rule 89 (empty -> .)
    RPAREN          reduce using rule 89 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 89 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 89 (empty -> .)
    GREATER_THAN    reduce using rule 89 (empty -> .)
    LESS_THAN       reduce using rule 89 (empty -> .)
    IS_EQUAL        reduce using rule 89 (empty -> .)
    NOT_EQUAL       reduce using rule 89 (empty -> .)
    AND             reduce using rule 89 (empty -> .)
    OR              reduce using rule 89 (empty -> .)
    SEMICOLON       reduce using rule 89 (empty -> .)
    RSBRACKET       reduce using rule 89 (empty -> .)
    TO              reduce using rule 89 (empty -> .)
    DO              reduce using rule 89 (empty -> .)

    F2                             shift and go to state 133
    empty                          shift and go to state 136

state 101

    (84) FACTOR -> C_INT agregarConstInt .

    DIVIDE          reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    MULTIPLY        reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    PLUS            reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    MINUS           reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    COMMA           reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    RBRACKET        reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    RPAREN          reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    GREATER_OR_EQUAL reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    LESS_OR_EQUAL   reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    GREATER_THAN    reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    LESS_THAN       reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    IS_EQUAL        reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    NOT_EQUAL       reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    AND             reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    OR              reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    SEMICOLON       reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    RSBRACKET       reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    TO              reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)
    DO              reduce using rule 84 (FACTOR -> C_INT agregarConstInt .)


state 102

    (85) FACTOR -> C_FLOAT agregarConstFloat .

    DIVIDE          reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    MULTIPLY        reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    PLUS            reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    MINUS           reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    COMMA           reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    RBRACKET        reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    RPAREN          reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    GREATER_OR_EQUAL reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    LESS_OR_EQUAL   reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    GREATER_THAN    reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    LESS_THAN       reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    IS_EQUAL        reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    NOT_EQUAL       reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    AND             reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    OR              reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    SEMICOLON       reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    RSBRACKET       reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    TO              reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)
    DO              reduce using rule 85 (FACTOR -> C_FLOAT agregarConstFloat .)


state 103

    (86) FACTOR -> C_CHAR agregarConstChar .

    DIVIDE          reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    MULTIPLY        reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    PLUS            reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    MINUS           reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    COMMA           reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    RBRACKET        reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    RPAREN          reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    GREATER_OR_EQUAL reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    LESS_OR_EQUAL   reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    GREATER_THAN    reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    LESS_THAN       reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    IS_EQUAL        reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    NOT_EQUAL       reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    AND             reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    OR              reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    SEMICOLON       reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    RSBRACKET       reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    TO              reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)
    DO              reduce using rule 86 (FACTOR -> C_CHAR agregarConstChar .)


state 104

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS . agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO
    (91) agregarParamTable -> .

    RPAREN          reduce using rule 91 (agregarParamTable -> .)

    agregarParamTable              shift and go to state 137

state 105

    (13) PARAMS -> TIPO . NAME agregarVarLista P1

    NAME            shift and go to state 138


state 106

    (51) V3 -> VARIABLE popRead COMMA . V3
    (8) V3 -> . V1
    (9) V3 -> . empty
    (51) V3 -> . VARIABLE popRead COMMA V3
    (52) V3 -> . VARIABLE popRead
    (5) V1 -> . TIPO VARIABLEDer V2 SEMICOLON V3
    (89) empty -> .
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    FUNC            reduce using rule 89 (empty -> .)
    MAIN            reduce using rule 89 (empty -> .)
    LBRACKET        reduce using rule 89 (empty -> .)
    RPAREN          reduce using rule 89 (empty -> .)
    NAME            shift and go to state 50
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    VARIABLE                       shift and go to state 49
    V3                             shift and go to state 139
    V1                             shift and go to state 47
    empty                          shift and go to state 48
    TIPO                           shift and go to state 23

state 107

    (30) VARIABLE -> NAME agregarPilaOp E2 .

    COMMA           reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    FUNC            reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    MAIN            reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    LBRACKET        reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    RPAREN          reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    EQUALS          reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    DIVIDE          reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    MULTIPLY        reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    PLUS            reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    MINUS           reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    RBRACKET        reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    GREATER_OR_EQUAL reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    LESS_OR_EQUAL   reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    GREATER_THAN    reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    LESS_THAN       reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    IS_EQUAL        reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    NOT_EQUAL       reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    AND             reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    OR              reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    SEMICOLON       reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    RSBRACKET       reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    TO              reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    DO              reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)


state 108

    (31) E2 -> LSBRACKET . guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso
    (92) guardarArreglo -> .

    LPAREN          reduce using rule 92 (guardarArreglo -> .)
    C_INT           reduce using rule 92 (guardarArreglo -> .)
    C_FLOAT         reduce using rule 92 (guardarArreglo -> .)
    C_CHAR          reduce using rule 92 (guardarArreglo -> .)
    NAME            reduce using rule 92 (guardarArreglo -> .)

    guardarArreglo                 shift and go to state 140

state 109

    (32) E2 -> empty .

    COMMA           reduce using rule 32 (E2 -> empty .)
    FUNC            reduce using rule 32 (E2 -> empty .)
    MAIN            reduce using rule 32 (E2 -> empty .)
    LBRACKET        reduce using rule 32 (E2 -> empty .)
    RPAREN          reduce using rule 32 (E2 -> empty .)
    EQUALS          reduce using rule 32 (E2 -> empty .)
    DIVIDE          reduce using rule 32 (E2 -> empty .)
    MULTIPLY        reduce using rule 32 (E2 -> empty .)
    PLUS            reduce using rule 32 (E2 -> empty .)
    MINUS           reduce using rule 32 (E2 -> empty .)
    RBRACKET        reduce using rule 32 (E2 -> empty .)
    GREATER_OR_EQUAL reduce using rule 32 (E2 -> empty .)
    LESS_OR_EQUAL   reduce using rule 32 (E2 -> empty .)
    GREATER_THAN    reduce using rule 32 (E2 -> empty .)
    LESS_THAN       reduce using rule 32 (E2 -> empty .)
    IS_EQUAL        reduce using rule 32 (E2 -> empty .)
    NOT_EQUAL       reduce using rule 32 (E2 -> empty .)
    AND             reduce using rule 32 (E2 -> empty .)
    OR              reduce using rule 32 (E2 -> empty .)
    SEMICOLON       reduce using rule 32 (E2 -> empty .)
    RSBRACKET       reduce using rule 32 (E2 -> empty .)
    TO              reduce using rule 32 (E2 -> empty .)
    DO              reduce using rule 32 (E2 -> empty .)


state 110

    (34) E2Der -> LSBRACKET C_INT . declararArray RSBRACKET
    (94) declararArray -> .

    RSBRACKET       reduce using rule 94 (declararArray -> .)

    declararArray                  shift and go to state 141

state 111

    (47) E1 -> EXP COMMA E1 .

    RBRACKET        reduce using rule 47 (E1 -> EXP COMMA E1 .)
    RPAREN          reduce using rule 47 (E1 -> EXP COMMA E1 .)


state 112

    (75) EXP -> TERMINO popSumaResta T .

    COMMA           reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    RBRACKET        reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    RPAREN          reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    GREATER_OR_EQUAL reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    LESS_OR_EQUAL   reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    GREATER_THAN    reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    LESS_THAN       reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    IS_EQUAL        reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    NOT_EQUAL       reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    AND             reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    OR              reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    SEMICOLON       reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    RSBRACKET       reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    TO              reduce using rule 75 (EXP -> TERMINO popSumaResta T .)
    DO              reduce using rule 75 (EXP -> TERMINO popSumaResta T .)


state 113

    (76) T -> PLUS . meterOperador EXP
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 142

state 114

    (77) T -> MINUS . meterOperador EXP
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 143

state 115

    (78) T -> empty .

    COMMA           reduce using rule 78 (T -> empty .)
    RBRACKET        reduce using rule 78 (T -> empty .)
    RPAREN          reduce using rule 78 (T -> empty .)
    GREATER_OR_EQUAL reduce using rule 78 (T -> empty .)
    LESS_OR_EQUAL   reduce using rule 78 (T -> empty .)
    GREATER_THAN    reduce using rule 78 (T -> empty .)
    LESS_THAN       reduce using rule 78 (T -> empty .)
    IS_EQUAL        reduce using rule 78 (T -> empty .)
    NOT_EQUAL       reduce using rule 78 (T -> empty .)
    AND             reduce using rule 78 (T -> empty .)
    OR              reduce using rule 78 (T -> empty .)
    SEMICOLON       reduce using rule 78 (T -> empty .)
    RSBRACKET       reduce using rule 78 (T -> empty .)
    TO              reduce using rule 78 (T -> empty .)
    DO              reduce using rule 78 (T -> empty .)


state 116

    (44) ASIGNACION -> VARIABLE EQUALS meterOperador . EXP popIgual SEMICOLON
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    VARIABLE                       shift and go to state 122
    EXP                            shift and go to state 144
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    LLAMADAF                       shift and go to state 80

state 117

    (45) LLAMADA -> NAME LPAREN E1 . RPAREN SEMICOLON
    (48) LLAMADAF -> NAME LPAREN E1 . RPAREN

    RPAREN          shift and go to state 145


state 118

    (83) FACTOR -> LPAREN meterFondoFalso H_EXP . RPAREN quitarFondoFalso

    RPAREN          shift and go to state 146


state 119

    (61) H_EXP -> T_EXP .
    (62) H_EXP -> T_EXP . OR H_EXP

    RPAREN          reduce using rule 61 (H_EXP -> T_EXP .)
    OR              shift and go to state 147


state 120

    (63) T_EXP -> G_EXP .
    (64) T_EXP -> G_EXP . AND T_EXP

    OR              reduce using rule 63 (T_EXP -> G_EXP .)
    RPAREN          reduce using rule 63 (T_EXP -> G_EXP .)
    AND             shift and go to state 148


state 121

    (65) G_EXP -> EXP . B popBool
    (66) B -> . GREATER_OR_EQUAL meterOperador G_EXP
    (67) B -> . LESS_OR_EQUAL meterOperador G_EXP
    (68) B -> . GREATER_THAN meterOperador G_EXP
    (69) B -> . LESS_THAN meterOperador G_EXP
    (70) B -> . IS_EQUAL meterOperador G_EXP
    (71) B -> . NOT_EQUAL meterOperador G_EXP
    (72) B -> . empty
    (89) empty -> .

    GREATER_OR_EQUAL shift and go to state 150
    LESS_OR_EQUAL   shift and go to state 151
    GREATER_THAN    shift and go to state 152
    LESS_THAN       shift and go to state 153
    IS_EQUAL        shift and go to state 154
    NOT_EQUAL       shift and go to state 155
    AND             reduce using rule 89 (empty -> .)
    OR              reduce using rule 89 (empty -> .)
    RPAREN          reduce using rule 89 (empty -> .)

    B                              shift and go to state 149
    empty                          shift and go to state 156

state 122

    (87) FACTOR -> VARIABLE .

    DIVIDE          reduce using rule 87 (FACTOR -> VARIABLE .)
    MULTIPLY        reduce using rule 87 (FACTOR -> VARIABLE .)
    PLUS            reduce using rule 87 (FACTOR -> VARIABLE .)
    MINUS           reduce using rule 87 (FACTOR -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 87 (FACTOR -> VARIABLE .)
    LESS_OR_EQUAL   reduce using rule 87 (FACTOR -> VARIABLE .)
    GREATER_THAN    reduce using rule 87 (FACTOR -> VARIABLE .)
    LESS_THAN       reduce using rule 87 (FACTOR -> VARIABLE .)
    IS_EQUAL        reduce using rule 87 (FACTOR -> VARIABLE .)
    NOT_EQUAL       reduce using rule 87 (FACTOR -> VARIABLE .)
    AND             reduce using rule 87 (FACTOR -> VARIABLE .)
    OR              reduce using rule 87 (FACTOR -> VARIABLE .)
    RPAREN          reduce using rule 87 (FACTOR -> VARIABLE .)
    COMMA           reduce using rule 87 (FACTOR -> VARIABLE .)
    SEMICOLON       reduce using rule 87 (FACTOR -> VARIABLE .)
    RBRACKET        reduce using rule 87 (FACTOR -> VARIABLE .)
    RSBRACKET       reduce using rule 87 (FACTOR -> VARIABLE .)
    TO              reduce using rule 87 (FACTOR -> VARIABLE .)
    DO              reduce using rule 87 (FACTOR -> VARIABLE .)


state 123

    (30) VARIABLE -> NAME . agregarPilaOp E2
    (48) LLAMADAF -> NAME . LPAREN E1 RPAREN
    (113) agregarPilaOp -> .

    LPAREN          shift and go to state 157
    LSBRACKET       reduce using rule 113 (agregarPilaOp -> .)
    DIVIDE          reduce using rule 113 (agregarPilaOp -> .)
    MULTIPLY        reduce using rule 113 (agregarPilaOp -> .)
    PLUS            reduce using rule 113 (agregarPilaOp -> .)
    MINUS           reduce using rule 113 (agregarPilaOp -> .)
    GREATER_OR_EQUAL reduce using rule 113 (agregarPilaOp -> .)
    LESS_OR_EQUAL   reduce using rule 113 (agregarPilaOp -> .)
    GREATER_THAN    reduce using rule 113 (agregarPilaOp -> .)
    LESS_THAN       reduce using rule 113 (agregarPilaOp -> .)
    IS_EQUAL        reduce using rule 113 (agregarPilaOp -> .)
    NOT_EQUAL       reduce using rule 113 (agregarPilaOp -> .)
    AND             reduce using rule 113 (agregarPilaOp -> .)
    OR              reduce using rule 113 (agregarPilaOp -> .)
    RPAREN          reduce using rule 113 (agregarPilaOp -> .)
    COMMA           reduce using rule 113 (agregarPilaOp -> .)
    SEMICOLON       reduce using rule 113 (agregarPilaOp -> .)
    RBRACKET        reduce using rule 113 (agregarPilaOp -> .)
    RSBRACKET       reduce using rule 113 (agregarPilaOp -> .)
    TO              reduce using rule 113 (agregarPilaOp -> .)
    DO              reduce using rule 113 (agregarPilaOp -> .)

    agregarPilaOp                  shift and go to state 83

state 124

    (49) RETORNO -> RETURN LPAREN EXP . popReturn RPAREN SEMICOLON
    (116) popReturn -> .

    RPAREN          reduce using rule 116 (popReturn -> .)

    popReturn                      shift and go to state 158

state 125

    (50) LECTURA -> READ LPAREN V3 . RPAREN SEMICOLON

    RPAREN          shift and go to state 159


state 126

    (53) ESCRITURA -> PRINT LPAREN E3 . RPAREN SEMICOLON

    RPAREN          shift and go to state 160


state 127

    (54) E3 -> S_EXP . popPrint
    (55) E3 -> S_EXP . popPrint COMMA E3
    (114) popPrint -> .

    COMMA           reduce using rule 114 (popPrint -> .)
    RPAREN          reduce using rule 114 (popPrint -> .)

    popPrint                       shift and go to state 161

state 128

    (73) S_EXP -> C_STRING . agregarConstString
    (101) agregarConstString -> .

    COMMA           reduce using rule 101 (agregarConstString -> .)
    RPAREN          reduce using rule 101 (agregarConstString -> .)

    agregarConstString             shift and go to state 162

state 129

    (74) S_EXP -> EXP .

    COMMA           reduce using rule 74 (S_EXP -> EXP .)
    RPAREN          reduce using rule 74 (S_EXP -> EXP .)


state 130

    (56) CONDICION -> IF LPAREN H_EXP . RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto

    RPAREN          shift and go to state 163


state 131

    (59) CICLO_W -> WHILE agregarWhile LPAREN . H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (61) H_EXP -> . T_EXP
    (62) H_EXP -> . T_EXP OR H_EXP
    (63) T_EXP -> . G_EXP
    (64) T_EXP -> . G_EXP AND T_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    H_EXP                          shift and go to state 164
    T_EXP                          shift and go to state 119
    G_EXP                          shift and go to state 120
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 132

    (60) CICLO_F -> FROM agregarWhile VARIABLE . agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (95) agregarFrom -> .

    EQUALS          reduce using rule 95 (agregarFrom -> .)

    agregarFrom                    shift and go to state 165

state 133

    (79) TERMINO -> FACTOR popMultDiv F2 .

    PLUS            reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    MINUS           reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    COMMA           reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    RBRACKET        reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    RPAREN          reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    GREATER_OR_EQUAL reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    LESS_OR_EQUAL   reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    GREATER_THAN    reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    LESS_THAN       reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    IS_EQUAL        reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    NOT_EQUAL       reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    AND             reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    OR              reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    SEMICOLON       reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    RSBRACKET       reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    TO              reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)
    DO              reduce using rule 79 (TERMINO -> FACTOR popMultDiv F2 .)


state 134

    (80) F2 -> DIVIDE . meterOperador TERMINO
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 166

state 135

    (81) F2 -> MULTIPLY . meterOperador TERMINO
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 167

state 136

    (82) F2 -> empty .

    PLUS            reduce using rule 82 (F2 -> empty .)
    MINUS           reduce using rule 82 (F2 -> empty .)
    COMMA           reduce using rule 82 (F2 -> empty .)
    RBRACKET        reduce using rule 82 (F2 -> empty .)
    RPAREN          reduce using rule 82 (F2 -> empty .)
    GREATER_OR_EQUAL reduce using rule 82 (F2 -> empty .)
    LESS_OR_EQUAL   reduce using rule 82 (F2 -> empty .)
    GREATER_THAN    reduce using rule 82 (F2 -> empty .)
    LESS_THAN       reduce using rule 82 (F2 -> empty .)
    IS_EQUAL        reduce using rule 82 (F2 -> empty .)
    NOT_EQUAL       reduce using rule 82 (F2 -> empty .)
    AND             reduce using rule 82 (F2 -> empty .)
    OR              reduce using rule 82 (F2 -> empty .)
    SEMICOLON       reduce using rule 82 (F2 -> empty .)
    RSBRACKET       reduce using rule 82 (F2 -> empty .)
    TO              reduce using rule 82 (F2 -> empty .)
    DO              reduce using rule 82 (F2 -> empty .)


state 137

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable . agregarVariables RPAREN V4 agregarLocalVar CUERPO
    (129) agregarVariables -> .

    RPAREN          reduce using rule 129 (agregarVariables -> .)

    agregarVariables               shift and go to state 168

state 138

    (13) PARAMS -> TIPO NAME . agregarVarLista P1
    (132) agregarVarLista -> .

    COMMA           reduce using rule 132 (agregarVarLista -> .)
    RPAREN          reduce using rule 132 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 169

state 139

    (51) V3 -> VARIABLE popRead COMMA V3 .

    FUNC            reduce using rule 51 (V3 -> VARIABLE popRead COMMA V3 .)
    MAIN            reduce using rule 51 (V3 -> VARIABLE popRead COMMA V3 .)
    LBRACKET        reduce using rule 51 (V3 -> VARIABLE popRead COMMA V3 .)
    RPAREN          reduce using rule 51 (V3 -> VARIABLE popRead COMMA V3 .)


state 140

    (31) E2 -> LSBRACKET guardarArreglo . meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso
    (111) meterFondoFalso -> .

    LPAREN          reduce using rule 111 (meterFondoFalso -> .)
    C_INT           reduce using rule 111 (meterFondoFalso -> .)
    C_FLOAT         reduce using rule 111 (meterFondoFalso -> .)
    C_CHAR          reduce using rule 111 (meterFondoFalso -> .)
    NAME            reduce using rule 111 (meterFondoFalso -> .)

    meterFondoFalso                shift and go to state 170

state 141

    (34) E2Der -> LSBRACKET C_INT declararArray . RSBRACKET

    RSBRACKET       shift and go to state 171


state 142

    (76) T -> PLUS meterOperador . EXP
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    EXP                            shift and go to state 172
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 143

    (77) T -> MINUS meterOperador . EXP
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    EXP                            shift and go to state 173
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 144

    (44) ASIGNACION -> VARIABLE EQUALS meterOperador EXP . popIgual SEMICOLON
    (118) popIgual -> .

    SEMICOLON       reduce using rule 118 (popIgual -> .)

    popIgual                       shift and go to state 174

state 145

    (45) LLAMADA -> NAME LPAREN E1 RPAREN . SEMICOLON
    (48) LLAMADAF -> NAME LPAREN E1 RPAREN .

    SEMICOLON       shift and go to state 175
    DIVIDE          reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MULTIPLY        reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    PLUS            reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MINUS           reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    COMMA           reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RBRACKET        reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RPAREN          reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)


state 146

    (83) FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN . quitarFondoFalso
    (112) quitarFondoFalso -> .

    DIVIDE          reduce using rule 112 (quitarFondoFalso -> .)
    MULTIPLY        reduce using rule 112 (quitarFondoFalso -> .)
    PLUS            reduce using rule 112 (quitarFondoFalso -> .)
    MINUS           reduce using rule 112 (quitarFondoFalso -> .)
    COMMA           reduce using rule 112 (quitarFondoFalso -> .)
    RBRACKET        reduce using rule 112 (quitarFondoFalso -> .)
    RPAREN          reduce using rule 112 (quitarFondoFalso -> .)
    GREATER_OR_EQUAL reduce using rule 112 (quitarFondoFalso -> .)
    LESS_OR_EQUAL   reduce using rule 112 (quitarFondoFalso -> .)
    GREATER_THAN    reduce using rule 112 (quitarFondoFalso -> .)
    LESS_THAN       reduce using rule 112 (quitarFondoFalso -> .)
    IS_EQUAL        reduce using rule 112 (quitarFondoFalso -> .)
    NOT_EQUAL       reduce using rule 112 (quitarFondoFalso -> .)
    AND             reduce using rule 112 (quitarFondoFalso -> .)
    OR              reduce using rule 112 (quitarFondoFalso -> .)
    SEMICOLON       reduce using rule 112 (quitarFondoFalso -> .)
    RSBRACKET       reduce using rule 112 (quitarFondoFalso -> .)
    TO              reduce using rule 112 (quitarFondoFalso -> .)
    DO              reduce using rule 112 (quitarFondoFalso -> .)

    quitarFondoFalso               shift and go to state 176

state 147

    (62) H_EXP -> T_EXP OR . H_EXP
    (61) H_EXP -> . T_EXP
    (62) H_EXP -> . T_EXP OR H_EXP
    (63) T_EXP -> . G_EXP
    (64) T_EXP -> . G_EXP AND T_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    T_EXP                          shift and go to state 119
    H_EXP                          shift and go to state 177
    G_EXP                          shift and go to state 120
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 148

    (64) T_EXP -> G_EXP AND . T_EXP
    (63) T_EXP -> . G_EXP
    (64) T_EXP -> . G_EXP AND T_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    G_EXP                          shift and go to state 120
    T_EXP                          shift and go to state 178
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 149

    (65) G_EXP -> EXP B . popBool
    (117) popBool -> .

    AND             reduce using rule 117 (popBool -> .)
    OR              reduce using rule 117 (popBool -> .)
    RPAREN          reduce using rule 117 (popBool -> .)

    popBool                        shift and go to state 179

state 150

    (66) B -> GREATER_OR_EQUAL . meterOperador G_EXP
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 180

state 151

    (67) B -> LESS_OR_EQUAL . meterOperador G_EXP
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 181

state 152

    (68) B -> GREATER_THAN . meterOperador G_EXP
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 182

state 153

    (69) B -> LESS_THAN . meterOperador G_EXP
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 183

state 154

    (70) B -> IS_EQUAL . meterOperador G_EXP
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 184

state 155

    (71) B -> NOT_EQUAL . meterOperador G_EXP
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 185

state 156

    (72) B -> empty .

    AND             reduce using rule 72 (B -> empty .)
    OR              reduce using rule 72 (B -> empty .)
    RPAREN          reduce using rule 72 (B -> empty .)


state 157

    (48) LLAMADAF -> NAME LPAREN . E1 RPAREN
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (46) E1 -> . EXP
    (47) E1 -> . EXP COMMA E1
    (36) ESTATUTO -> . ASIGNACION
    (37) ESTATUTO -> . LLAMADA
    (38) ESTATUTO -> . RETORNO
    (39) ESTATUTO -> . LECTURA
    (40) ESTATUTO -> . ESCRITURA
    (41) ESTATUTO -> . CONDICION
    (42) ESTATUTO -> . CICLO_W
    (43) ESTATUTO -> . CICLO_F
    (75) EXP -> . TERMINO popSumaResta T
    (44) ASIGNACION -> . VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON
    (45) LLAMADA -> . NAME LPAREN E1 RPAREN SEMICOLON
    (49) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (50) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (53) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (56) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (59) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (60) CICLO_F -> . FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (79) TERMINO -> . FACTOR popMultDiv F2
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    NAME            shift and go to state 68
    RETURN          shift and go to state 70
    READ            shift and go to state 71
    PRINT           shift and go to state 72
    IF              shift and go to state 73
    WHILE           shift and go to state 74
    FROM            shift and go to state 75
    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79

    E1                             shift and go to state 186
    ESTATUTO                       shift and go to state 56
    EXP                            shift and go to state 57
    ASIGNACION                     shift and go to state 58
    LLAMADA                        shift and go to state 59
    RETORNO                        shift and go to state 60
    LECTURA                        shift and go to state 61
    ESCRITURA                      shift and go to state 62
    CONDICION                      shift and go to state 63
    CICLO_W                        shift and go to state 64
    CICLO_F                        shift and go to state 65
    TERMINO                        shift and go to state 66
    VARIABLE                       shift and go to state 67
    FACTOR                         shift and go to state 76
    LLAMADAF                       shift and go to state 80

state 158

    (49) RETORNO -> RETURN LPAREN EXP popReturn . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 159

    (50) LECTURA -> READ LPAREN V3 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 188


state 160

    (53) ESCRITURA -> PRINT LPAREN E3 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 161

    (54) E3 -> S_EXP popPrint .
    (55) E3 -> S_EXP popPrint . COMMA E3

    RPAREN          reduce using rule 54 (E3 -> S_EXP popPrint .)
    COMMA           shift and go to state 190


state 162

    (73) S_EXP -> C_STRING agregarConstString .

    COMMA           reduce using rule 73 (S_EXP -> C_STRING agregarConstString .)
    RPAREN          reduce using rule 73 (S_EXP -> C_STRING agregarConstString .)


state 163

    (56) CONDICION -> IF LPAREN H_EXP RPAREN . gotoIf THEN CUERPO ELSE1 terminarGoto
    (106) gotoIf -> .

    THEN            reduce using rule 106 (gotoIf -> .)

    gotoIf                         shift and go to state 191

state 164

    (59) CICLO_W -> WHILE agregarWhile LPAREN H_EXP . RPAREN DO gotoIf CUERPO terminarWhile

    RPAREN          shift and go to state 192


state 165

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom . EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile

    EQUALS          shift and go to state 193


state 166

    (80) F2 -> DIVIDE meterOperador . TERMINO
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    TERMINO                        shift and go to state 194
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 167

    (81) F2 -> MULTIPLY meterOperador . TERMINO
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    TERMINO                        shift and go to state 195
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 168

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables . RPAREN V4 agregarLocalVar CUERPO

    RPAREN          shift and go to state 196


state 169

    (13) PARAMS -> TIPO NAME agregarVarLista . P1
    (14) P1 -> . P2
    (15) P1 -> . empty
    (16) P2 -> . COMMA PARAMS P1
    (89) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 200
    RPAREN          reduce using rule 89 (empty -> .)

  ! COMMA           [ reduce using rule 89 (empty -> .) ]

    P1                             shift and go to state 197
    P2                             shift and go to state 198
    empty                          shift and go to state 199

state 170

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso . EXP RSBRACKET verificarArreglo quitarFondoFalso
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    EXP                            shift and go to state 201
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 171

    (34) E2Der -> LSBRACKET C_INT declararArray RSBRACKET .

    COMMA           reduce using rule 34 (E2Der -> LSBRACKET C_INT declararArray RSBRACKET .)
    SEMICOLON       reduce using rule 34 (E2Der -> LSBRACKET C_INT declararArray RSBRACKET .)


state 172

    (76) T -> PLUS meterOperador EXP .

    COMMA           reduce using rule 76 (T -> PLUS meterOperador EXP .)
    RBRACKET        reduce using rule 76 (T -> PLUS meterOperador EXP .)
    RPAREN          reduce using rule 76 (T -> PLUS meterOperador EXP .)
    GREATER_OR_EQUAL reduce using rule 76 (T -> PLUS meterOperador EXP .)
    LESS_OR_EQUAL   reduce using rule 76 (T -> PLUS meterOperador EXP .)
    GREATER_THAN    reduce using rule 76 (T -> PLUS meterOperador EXP .)
    LESS_THAN       reduce using rule 76 (T -> PLUS meterOperador EXP .)
    IS_EQUAL        reduce using rule 76 (T -> PLUS meterOperador EXP .)
    NOT_EQUAL       reduce using rule 76 (T -> PLUS meterOperador EXP .)
    AND             reduce using rule 76 (T -> PLUS meterOperador EXP .)
    OR              reduce using rule 76 (T -> PLUS meterOperador EXP .)
    SEMICOLON       reduce using rule 76 (T -> PLUS meterOperador EXP .)
    RSBRACKET       reduce using rule 76 (T -> PLUS meterOperador EXP .)
    TO              reduce using rule 76 (T -> PLUS meterOperador EXP .)
    DO              reduce using rule 76 (T -> PLUS meterOperador EXP .)


state 173

    (77) T -> MINUS meterOperador EXP .

    COMMA           reduce using rule 77 (T -> MINUS meterOperador EXP .)
    RBRACKET        reduce using rule 77 (T -> MINUS meterOperador EXP .)
    RPAREN          reduce using rule 77 (T -> MINUS meterOperador EXP .)
    GREATER_OR_EQUAL reduce using rule 77 (T -> MINUS meterOperador EXP .)
    LESS_OR_EQUAL   reduce using rule 77 (T -> MINUS meterOperador EXP .)
    GREATER_THAN    reduce using rule 77 (T -> MINUS meterOperador EXP .)
    LESS_THAN       reduce using rule 77 (T -> MINUS meterOperador EXP .)
    IS_EQUAL        reduce using rule 77 (T -> MINUS meterOperador EXP .)
    NOT_EQUAL       reduce using rule 77 (T -> MINUS meterOperador EXP .)
    AND             reduce using rule 77 (T -> MINUS meterOperador EXP .)
    OR              reduce using rule 77 (T -> MINUS meterOperador EXP .)
    SEMICOLON       reduce using rule 77 (T -> MINUS meterOperador EXP .)
    RSBRACKET       reduce using rule 77 (T -> MINUS meterOperador EXP .)
    TO              reduce using rule 77 (T -> MINUS meterOperador EXP .)
    DO              reduce using rule 77 (T -> MINUS meterOperador EXP .)


state 174

    (44) ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual . SEMICOLON

    SEMICOLON       shift and go to state 202


state 175

    (45) LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .

    NAME            reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    READ            reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    IF              reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    FROM            reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    C_INT           reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 45 (LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON .)


state 176

    (83) FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .

    DIVIDE          reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    MULTIPLY        reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    PLUS            reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    MINUS           reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    COMMA           reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RBRACKET        reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RPAREN          reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    GREATER_OR_EQUAL reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    LESS_OR_EQUAL   reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    GREATER_THAN    reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    LESS_THAN       reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    IS_EQUAL        reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    NOT_EQUAL       reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    AND             reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    OR              reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    SEMICOLON       reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RSBRACKET       reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    TO              reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    DO              reduce using rule 83 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)


state 177

    (62) H_EXP -> T_EXP OR H_EXP .

    RPAREN          reduce using rule 62 (H_EXP -> T_EXP OR H_EXP .)


state 178

    (64) T_EXP -> G_EXP AND T_EXP .

    OR              reduce using rule 64 (T_EXP -> G_EXP AND T_EXP .)
    RPAREN          reduce using rule 64 (T_EXP -> G_EXP AND T_EXP .)


state 179

    (65) G_EXP -> EXP B popBool .

    AND             reduce using rule 65 (G_EXP -> EXP B popBool .)
    OR              reduce using rule 65 (G_EXP -> EXP B popBool .)
    RPAREN          reduce using rule 65 (G_EXP -> EXP B popBool .)


state 180

    (66) B -> GREATER_OR_EQUAL meterOperador . G_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    G_EXP                          shift and go to state 203
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 181

    (67) B -> LESS_OR_EQUAL meterOperador . G_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    G_EXP                          shift and go to state 204
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 182

    (68) B -> GREATER_THAN meterOperador . G_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    G_EXP                          shift and go to state 205
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 183

    (69) B -> LESS_THAN meterOperador . G_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    G_EXP                          shift and go to state 206
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 184

    (70) B -> IS_EQUAL meterOperador . G_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    G_EXP                          shift and go to state 207
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 185

    (71) B -> NOT_EQUAL meterOperador . G_EXP
    (65) G_EXP -> . EXP B popBool
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    G_EXP                          shift and go to state 208
    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 186

    (48) LLAMADAF -> NAME LPAREN E1 . RPAREN

    RPAREN          shift and go to state 209


state 187

    (49) RETORNO -> RETURN LPAREN EXP popReturn RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 210


state 188

    (50) LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .

    NAME            reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    READ            reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    IF              reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    FROM            reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    C_INT           reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 50 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)


state 189

    (53) ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .

    NAME            reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    RETURN          reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    READ            reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    PRINT           reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    IF              reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    WHILE           reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    FROM            reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    C_INT           reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 53 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)


state 190

    (55) E3 -> S_EXP popPrint COMMA . E3
    (54) E3 -> . S_EXP popPrint
    (55) E3 -> . S_EXP popPrint COMMA E3
    (73) S_EXP -> . C_STRING agregarConstString
    (74) S_EXP -> . EXP
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    C_STRING        shift and go to state 128
    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    S_EXP                          shift and go to state 127
    E3                             shift and go to state 211
    EXP                            shift and go to state 129
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    VARIABLE                       shift and go to state 122
    LLAMADAF                       shift and go to state 80

state 191

    (56) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf . THEN CUERPO ELSE1 terminarGoto

    THEN            shift and go to state 212


state 192

    (59) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN . DO gotoIf CUERPO terminarWhile

    DO              shift and go to state 213


state 193

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS . meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (125) meterOperador -> .

    LPAREN          reduce using rule 125 (meterOperador -> .)
    C_INT           reduce using rule 125 (meterOperador -> .)
    C_FLOAT         reduce using rule 125 (meterOperador -> .)
    C_CHAR          reduce using rule 125 (meterOperador -> .)
    NAME            reduce using rule 125 (meterOperador -> .)

    meterOperador                  shift and go to state 214

state 194

    (80) F2 -> DIVIDE meterOperador TERMINO .

    PLUS            reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    MINUS           reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    COMMA           reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    RBRACKET        reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    RPAREN          reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    GREATER_OR_EQUAL reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    LESS_OR_EQUAL   reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    GREATER_THAN    reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    LESS_THAN       reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    IS_EQUAL        reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    NOT_EQUAL       reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    AND             reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    OR              reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    SEMICOLON       reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    RSBRACKET       reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    TO              reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)
    DO              reduce using rule 80 (F2 -> DIVIDE meterOperador TERMINO .)


state 195

    (81) F2 -> MULTIPLY meterOperador TERMINO .

    PLUS            reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    MINUS           reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    COMMA           reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    RBRACKET        reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    RPAREN          reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    GREATER_OR_EQUAL reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    LESS_OR_EQUAL   reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    GREATER_THAN    reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    LESS_THAN       reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    IS_EQUAL        reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    NOT_EQUAL       reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    AND             reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    OR              reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    SEMICOLON       reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    RSBRACKET       reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    TO              reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)
    DO              reduce using rule 81 (F2 -> MULTIPLY meterOperador TERMINO .)


state 196

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN . V4 agregarLocalVar CUERPO
    (11) V4 -> . VARS
    (12) V4 -> . empty
    (4) VARS -> . borrarListaVar VAR V1
    (89) empty -> .
    (133) borrarListaVar -> .

    LBRACKET        reduce using rule 89 (empty -> .)
    VAR             reduce using rule 133 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 8
    V4                             shift and go to state 215
    VARS                           shift and go to state 216
    empty                          shift and go to state 217

state 197

    (13) PARAMS -> TIPO NAME agregarVarLista P1 .

    RPAREN          reduce using rule 13 (PARAMS -> TIPO NAME agregarVarLista P1 .)
    COMMA           reduce using rule 13 (PARAMS -> TIPO NAME agregarVarLista P1 .)


state 198

    (14) P1 -> P2 .

    COMMA           reduce using rule 14 (P1 -> P2 .)
    RPAREN          reduce using rule 14 (P1 -> P2 .)


state 199

    (15) P1 -> empty .

    COMMA           reduce using rule 15 (P1 -> empty .)
    RPAREN          reduce using rule 15 (P1 -> empty .)


state 200

    (16) P2 -> COMMA . PARAMS P1
    (13) PARAMS -> . TIPO NAME agregarVarLista P1
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    PARAMS                         shift and go to state 218
    TIPO                           shift and go to state 105

state 201

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP . RSBRACKET verificarArreglo quitarFondoFalso

    RSBRACKET       shift and go to state 219


state 202

    (44) ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .

    NAME            reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    RETURN          reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    READ            reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    PRINT           reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    IF              reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    WHILE           reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    FROM            reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    LPAREN          reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    C_INT           reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    C_FLOAT         reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    C_CHAR          reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    RBRACKET        reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    RPAREN          reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)


state 203

    (66) B -> GREATER_OR_EQUAL meterOperador G_EXP .

    AND             reduce using rule 66 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 66 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 66 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)


state 204

    (67) B -> LESS_OR_EQUAL meterOperador G_EXP .

    AND             reduce using rule 67 (B -> LESS_OR_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 67 (B -> LESS_OR_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 67 (B -> LESS_OR_EQUAL meterOperador G_EXP .)


state 205

    (68) B -> GREATER_THAN meterOperador G_EXP .

    AND             reduce using rule 68 (B -> GREATER_THAN meterOperador G_EXP .)
    OR              reduce using rule 68 (B -> GREATER_THAN meterOperador G_EXP .)
    RPAREN          reduce using rule 68 (B -> GREATER_THAN meterOperador G_EXP .)


state 206

    (69) B -> LESS_THAN meterOperador G_EXP .

    AND             reduce using rule 69 (B -> LESS_THAN meterOperador G_EXP .)
    OR              reduce using rule 69 (B -> LESS_THAN meterOperador G_EXP .)
    RPAREN          reduce using rule 69 (B -> LESS_THAN meterOperador G_EXP .)


state 207

    (70) B -> IS_EQUAL meterOperador G_EXP .

    AND             reduce using rule 70 (B -> IS_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 70 (B -> IS_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 70 (B -> IS_EQUAL meterOperador G_EXP .)


state 208

    (71) B -> NOT_EQUAL meterOperador G_EXP .

    AND             reduce using rule 71 (B -> NOT_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 71 (B -> NOT_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 71 (B -> NOT_EQUAL meterOperador G_EXP .)


state 209

    (48) LLAMADAF -> NAME LPAREN E1 RPAREN .

    DIVIDE          reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MULTIPLY        reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    PLUS            reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    MINUS           reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    GREATER_OR_EQUAL reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    LESS_OR_EQUAL   reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    GREATER_THAN    reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    LESS_THAN       reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    IS_EQUAL        reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    NOT_EQUAL       reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    AND             reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    OR              reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RPAREN          reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    COMMA           reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    SEMICOLON       reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RBRACKET        reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    RSBRACKET       reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    TO              reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)
    DO              reduce using rule 48 (LLAMADAF -> NAME LPAREN E1 RPAREN .)


state 210

    (49) RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .

    NAME            reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    READ            reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    PRINT           reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    IF              reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    WHILE           reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    FROM            reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    LPAREN          reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    C_INT           reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    C_FLOAT         reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    C_CHAR          reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    RPAREN          reduce using rule 49 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)


state 211

    (55) E3 -> S_EXP popPrint COMMA E3 .

    RPAREN          reduce using rule 55 (E3 -> S_EXP popPrint COMMA E3 .)


state 212

    (56) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN . CUERPO ELSE1 terminarGoto
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 220

state 213

    (59) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO . gotoIf CUERPO terminarWhile
    (106) gotoIf -> .

    LBRACKET        reduce using rule 106 (gotoIf -> .)

    gotoIf                         shift and go to state 221

state 214

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador . EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    VARIABLE                       shift and go to state 122
    EXP                            shift and go to state 222
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    LLAMADAF                       shift and go to state 80

state 215

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 . agregarLocalVar CUERPO
    (90) agregarLocalVar -> .

    LBRACKET        reduce using rule 90 (agregarLocalVar -> .)

    agregarLocalVar                shift and go to state 223

state 216

    (11) V4 -> VARS .

    LBRACKET        reduce using rule 11 (V4 -> VARS .)


state 217

    (12) V4 -> empty .

    LBRACKET        reduce using rule 12 (V4 -> empty .)


state 218

    (16) P2 -> COMMA PARAMS . P1
    (14) P1 -> . P2
    (15) P1 -> . empty
    (16) P2 -> . COMMA PARAMS P1
    (89) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 200
    RPAREN          reduce using rule 89 (empty -> .)

  ! COMMA           [ reduce using rule 89 (empty -> .) ]

    P1                             shift and go to state 224
    P2                             shift and go to state 198
    empty                          shift and go to state 199

state 219

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET . verificarArreglo quitarFondoFalso
    (93) verificarArreglo -> .

    COMMA           reduce using rule 93 (verificarArreglo -> .)
    FUNC            reduce using rule 93 (verificarArreglo -> .)
    MAIN            reduce using rule 93 (verificarArreglo -> .)
    LBRACKET        reduce using rule 93 (verificarArreglo -> .)
    RPAREN          reduce using rule 93 (verificarArreglo -> .)
    EQUALS          reduce using rule 93 (verificarArreglo -> .)
    DIVIDE          reduce using rule 93 (verificarArreglo -> .)
    MULTIPLY        reduce using rule 93 (verificarArreglo -> .)
    PLUS            reduce using rule 93 (verificarArreglo -> .)
    MINUS           reduce using rule 93 (verificarArreglo -> .)
    RBRACKET        reduce using rule 93 (verificarArreglo -> .)
    GREATER_OR_EQUAL reduce using rule 93 (verificarArreglo -> .)
    LESS_OR_EQUAL   reduce using rule 93 (verificarArreglo -> .)
    GREATER_THAN    reduce using rule 93 (verificarArreglo -> .)
    LESS_THAN       reduce using rule 93 (verificarArreglo -> .)
    IS_EQUAL        reduce using rule 93 (verificarArreglo -> .)
    NOT_EQUAL       reduce using rule 93 (verificarArreglo -> .)
    AND             reduce using rule 93 (verificarArreglo -> .)
    OR              reduce using rule 93 (verificarArreglo -> .)
    SEMICOLON       reduce using rule 93 (verificarArreglo -> .)
    RSBRACKET       reduce using rule 93 (verificarArreglo -> .)
    TO              reduce using rule 93 (verificarArreglo -> .)
    DO              reduce using rule 93 (verificarArreglo -> .)

    verificarArreglo               shift and go to state 225

state 220

    (56) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO . ELSE1 terminarGoto
    (57) ELSE1 -> . ELSE gotoElse CUERPO
    (58) ELSE1 -> . empty
    (89) empty -> .

    ELSE            shift and go to state 227
    NAME            reduce using rule 89 (empty -> .)
    RETURN          reduce using rule 89 (empty -> .)
    READ            reduce using rule 89 (empty -> .)
    PRINT           reduce using rule 89 (empty -> .)
    IF              reduce using rule 89 (empty -> .)
    WHILE           reduce using rule 89 (empty -> .)
    FROM            reduce using rule 89 (empty -> .)
    LPAREN          reduce using rule 89 (empty -> .)
    C_INT           reduce using rule 89 (empty -> .)
    C_FLOAT         reduce using rule 89 (empty -> .)
    C_CHAR          reduce using rule 89 (empty -> .)
    RBRACKET        reduce using rule 89 (empty -> .)
    RPAREN          reduce using rule 89 (empty -> .)

    ELSE1                          shift and go to state 226
    empty                          shift and go to state 228

state 221

    (59) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf . CUERPO terminarWhile
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 229

state 222

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP . popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (118) popIgual -> .

    TO              reduce using rule 118 (popIgual -> .)

    popIgual                       shift and go to state 230

state 223

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 231

state 224

    (16) P2 -> COMMA PARAMS P1 .

    COMMA           reduce using rule 16 (P2 -> COMMA PARAMS P1 .)
    RPAREN          reduce using rule 16 (P2 -> COMMA PARAMS P1 .)


state 225

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo . quitarFondoFalso
    (112) quitarFondoFalso -> .

    COMMA           reduce using rule 112 (quitarFondoFalso -> .)
    FUNC            reduce using rule 112 (quitarFondoFalso -> .)
    MAIN            reduce using rule 112 (quitarFondoFalso -> .)
    LBRACKET        reduce using rule 112 (quitarFondoFalso -> .)
    RPAREN          reduce using rule 112 (quitarFondoFalso -> .)
    EQUALS          reduce using rule 112 (quitarFondoFalso -> .)
    DIVIDE          reduce using rule 112 (quitarFondoFalso -> .)
    MULTIPLY        reduce using rule 112 (quitarFondoFalso -> .)
    PLUS            reduce using rule 112 (quitarFondoFalso -> .)
    MINUS           reduce using rule 112 (quitarFondoFalso -> .)
    RBRACKET        reduce using rule 112 (quitarFondoFalso -> .)
    GREATER_OR_EQUAL reduce using rule 112 (quitarFondoFalso -> .)
    LESS_OR_EQUAL   reduce using rule 112 (quitarFondoFalso -> .)
    GREATER_THAN    reduce using rule 112 (quitarFondoFalso -> .)
    LESS_THAN       reduce using rule 112 (quitarFondoFalso -> .)
    IS_EQUAL        reduce using rule 112 (quitarFondoFalso -> .)
    NOT_EQUAL       reduce using rule 112 (quitarFondoFalso -> .)
    AND             reduce using rule 112 (quitarFondoFalso -> .)
    OR              reduce using rule 112 (quitarFondoFalso -> .)
    SEMICOLON       reduce using rule 112 (quitarFondoFalso -> .)
    RSBRACKET       reduce using rule 112 (quitarFondoFalso -> .)
    TO              reduce using rule 112 (quitarFondoFalso -> .)
    DO              reduce using rule 112 (quitarFondoFalso -> .)

    quitarFondoFalso               shift and go to state 232

state 226

    (56) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 . terminarGoto
    (107) terminarGoto -> .

    NAME            reduce using rule 107 (terminarGoto -> .)
    RETURN          reduce using rule 107 (terminarGoto -> .)
    READ            reduce using rule 107 (terminarGoto -> .)
    PRINT           reduce using rule 107 (terminarGoto -> .)
    IF              reduce using rule 107 (terminarGoto -> .)
    WHILE           reduce using rule 107 (terminarGoto -> .)
    FROM            reduce using rule 107 (terminarGoto -> .)
    LPAREN          reduce using rule 107 (terminarGoto -> .)
    C_INT           reduce using rule 107 (terminarGoto -> .)
    C_FLOAT         reduce using rule 107 (terminarGoto -> .)
    C_CHAR          reduce using rule 107 (terminarGoto -> .)
    RBRACKET        reduce using rule 107 (terminarGoto -> .)
    RPAREN          reduce using rule 107 (terminarGoto -> .)

    terminarGoto                   shift and go to state 233

state 227

    (57) ELSE1 -> ELSE . gotoElse CUERPO
    (110) gotoElse -> .

    LBRACKET        reduce using rule 110 (gotoElse -> .)

    gotoElse                       shift and go to state 234

state 228

    (58) ELSE1 -> empty .

    NAME            reduce using rule 58 (ELSE1 -> empty .)
    RETURN          reduce using rule 58 (ELSE1 -> empty .)
    READ            reduce using rule 58 (ELSE1 -> empty .)
    PRINT           reduce using rule 58 (ELSE1 -> empty .)
    IF              reduce using rule 58 (ELSE1 -> empty .)
    WHILE           reduce using rule 58 (ELSE1 -> empty .)
    FROM            reduce using rule 58 (ELSE1 -> empty .)
    LPAREN          reduce using rule 58 (ELSE1 -> empty .)
    C_INT           reduce using rule 58 (ELSE1 -> empty .)
    C_FLOAT         reduce using rule 58 (ELSE1 -> empty .)
    C_CHAR          reduce using rule 58 (ELSE1 -> empty .)
    RBRACKET        reduce using rule 58 (ELSE1 -> empty .)
    RPAREN          reduce using rule 58 (ELSE1 -> empty .)


state 229

    (59) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO . terminarWhile
    (109) terminarWhile -> .

    NAME            reduce using rule 109 (terminarWhile -> .)
    RETURN          reduce using rule 109 (terminarWhile -> .)
    READ            reduce using rule 109 (terminarWhile -> .)
    PRINT           reduce using rule 109 (terminarWhile -> .)
    IF              reduce using rule 109 (terminarWhile -> .)
    WHILE           reduce using rule 109 (terminarWhile -> .)
    FROM            reduce using rule 109 (terminarWhile -> .)
    LPAREN          reduce using rule 109 (terminarWhile -> .)
    C_INT           reduce using rule 109 (terminarWhile -> .)
    C_FLOAT         reduce using rule 109 (terminarWhile -> .)
    C_CHAR          reduce using rule 109 (terminarWhile -> .)
    RBRACKET        reduce using rule 109 (terminarWhile -> .)
    RPAREN          reduce using rule 109 (terminarWhile -> .)

    terminarWhile                  shift and go to state 235

state 230

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual . TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile

    TO              shift and go to state 236


state 231

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO .

    FUNC            reduce using rule 10 (FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO .)
    MAIN            reduce using rule 10 (FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO .)


state 232

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .

    COMMA           reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    FUNC            reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    MAIN            reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    LBRACKET        reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    RPAREN          reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    EQUALS          reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    DIVIDE          reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    MULTIPLY        reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    PLUS            reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    MINUS           reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    RBRACKET        reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    GREATER_OR_EQUAL reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    LESS_OR_EQUAL   reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    GREATER_THAN    reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    LESS_THAN       reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    IS_EQUAL        reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    NOT_EQUAL       reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    AND             reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    OR              reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    SEMICOLON       reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    RSBRACKET       reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    TO              reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    DO              reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)


state 233

    (56) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .

    NAME            reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RETURN          reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    READ            reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    PRINT           reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    IF              reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    WHILE           reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    FROM            reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    LPAREN          reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    C_INT           reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    C_FLOAT         reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    C_CHAR          reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RBRACKET        reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RPAREN          reduce using rule 56 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)


state 234

    (57) ELSE1 -> ELSE gotoElse . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 237

state 235

    (59) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .

    NAME            reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RETURN          reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    READ            reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    PRINT           reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    IF              reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    WHILE           reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    FROM            reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    LPAREN          reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    C_INT           reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    C_FLOAT         reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    C_CHAR          reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RBRACKET        reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RPAREN          reduce using rule 59 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)


state 236

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO . EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (75) EXP -> . TERMINO popSumaResta T
    (79) TERMINO -> . FACTOR popMultDiv F2
    (83) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (84) FACTOR -> . C_INT agregarConstInt
    (85) FACTOR -> . C_FLOAT agregarConstFloat
    (86) FACTOR -> . C_CHAR agregarConstChar
    (87) FACTOR -> . VARIABLE
    (88) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (48) LLAMADAF -> . NAME LPAREN E1 RPAREN

    LPAREN          shift and go to state 69
    C_INT           shift and go to state 77
    C_FLOAT         shift and go to state 78
    C_CHAR          shift and go to state 79
    NAME            shift and go to state 123

    VARIABLE                       shift and go to state 122
    EXP                            shift and go to state 238
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 76
    LLAMADAF                       shift and go to state 80

state 237

    (57) ELSE1 -> ELSE gotoElse CUERPO .

    NAME            reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    RETURN          reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    READ            reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    PRINT           reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    IF              reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    WHILE           reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    FROM            reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    LPAREN          reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    C_INT           reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    C_FLOAT         reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    C_CHAR          reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    RBRACKET        reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)
    RPAREN          reduce using rule 57 (ELSE1 -> ELSE gotoElse CUERPO .)


state 238

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP . crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (96) crearCompFrom -> .

    DO              reduce using rule 96 (crearCompFrom -> .)

    crearCompFrom                  shift and go to state 239

state 239

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom . DO gotoIf CUERPO sumarFrom terminarWhile

    DO              shift and go to state 240


state 240

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO . gotoIf CUERPO sumarFrom terminarWhile
    (106) gotoIf -> .

    LBRACKET        reduce using rule 106 (gotoIf -> .)

    gotoIf                         shift and go to state 241

state 241

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf . CUERPO sumarFrom terminarWhile
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 242

state 242

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO . sumarFrom terminarWhile
    (97) sumarFrom -> .

    NAME            reduce using rule 97 (sumarFrom -> .)
    RETURN          reduce using rule 97 (sumarFrom -> .)
    READ            reduce using rule 97 (sumarFrom -> .)
    PRINT           reduce using rule 97 (sumarFrom -> .)
    IF              reduce using rule 97 (sumarFrom -> .)
    WHILE           reduce using rule 97 (sumarFrom -> .)
    FROM            reduce using rule 97 (sumarFrom -> .)
    LPAREN          reduce using rule 97 (sumarFrom -> .)
    C_INT           reduce using rule 97 (sumarFrom -> .)
    C_FLOAT         reduce using rule 97 (sumarFrom -> .)
    C_CHAR          reduce using rule 97 (sumarFrom -> .)
    RBRACKET        reduce using rule 97 (sumarFrom -> .)
    RPAREN          reduce using rule 97 (sumarFrom -> .)

    sumarFrom                      shift and go to state 243

state 243

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom . terminarWhile
    (109) terminarWhile -> .

    NAME            reduce using rule 109 (terminarWhile -> .)
    RETURN          reduce using rule 109 (terminarWhile -> .)
    READ            reduce using rule 109 (terminarWhile -> .)
    PRINT           reduce using rule 109 (terminarWhile -> .)
    IF              reduce using rule 109 (terminarWhile -> .)
    WHILE           reduce using rule 109 (terminarWhile -> .)
    FROM            reduce using rule 109 (terminarWhile -> .)
    LPAREN          reduce using rule 109 (terminarWhile -> .)
    C_INT           reduce using rule 109 (terminarWhile -> .)
    C_FLOAT         reduce using rule 109 (terminarWhile -> .)
    C_CHAR          reduce using rule 109 (terminarWhile -> .)
    RBRACKET        reduce using rule 109 (terminarWhile -> .)
    RPAREN          reduce using rule 109 (terminarWhile -> .)

    terminarWhile                  shift and go to state 244

state 244

    (60) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .

    NAME            reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    RETURN          reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    READ            reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    PRINT           reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    IF              reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    WHILE           reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    FROM            reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    LPAREN          reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    C_INT           reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    C_FLOAT         reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    C_CHAR          reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    RBRACKET        reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    RPAREN          reduce using rule 60 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 169 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 218 resolved as shift
