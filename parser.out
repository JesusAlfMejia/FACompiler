Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo
Rule 2     F -> FUNCION F
Rule 3     F -> empty
Rule 4     VARS -> borrarListaVar VAR V1
Rule 5     V1 -> TIPO VARIABLEDer V2 SEMICOLON V3
Rule 6     V2 -> COMMA VARIABLEDer V2
Rule 7     V2 -> empty
Rule 8     V3 -> V1
Rule 9     V3 -> empty
Rule 10    FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
Rule 11    V4 -> VARS
Rule 12    V4 -> empty
Rule 13    PARAMS -> TIPO NAME agregarVarLista P1
Rule 14    P1 -> P2
Rule 15    P1 -> empty
Rule 16    P2 -> COMMA PARAMS P1
Rule 17    CUERPO -> LBRACKET E RBRACKET
Rule 18    E -> E1
Rule 19    E -> empty
Rule 20    E1 -> ESTATUTO
Rule 21    E1 -> ESTATUTO E1
Rule 22    TIPO -> INT
Rule 23    TIPO -> FLOAT
Rule 24    TIPO -> CHAR
Rule 25    TIPO_FUNCION -> INT
Rule 26    TIPO_FUNCION -> FLOAT
Rule 27    TIPO_FUNCION -> CHAR
Rule 28    TIPO_FUNCION -> VOID
Rule 29    PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO
Rule 30    VARIABLE -> NAME agregarPilaOp E2
Rule 31    E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso
Rule 32    E2 -> empty
Rule 33    VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der
Rule 34    E2Der -> LSBRACKET C_INT declararArray RSBRACKET
Rule 35    E2Der -> empty
Rule 36    ESTATUTO -> ASIGNACION
Rule 37    ESTATUTO -> LLAMADA
Rule 38    ESTATUTO -> RETORNO
Rule 39    ESTATUTO -> LECTURA
Rule 40    ESTATUTO -> ESCRITURA
Rule 41    ESTATUTO -> CONDICION
Rule 42    ESTATUTO -> CICLO_W
Rule 43    ESTATUTO -> CICLO_F
Rule 44    ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON
Rule 45    LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON
Rule 46    E4 -> EXP generarParam
Rule 47    E4 -> EXP generarParam COMMA E4
Rule 48    E4 -> empty
Rule 49    LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso
Rule 50    RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON
Rule 51    LECTURA -> READ LPAREN V3 RPAREN SEMICOLON
Rule 52    V3 -> VARIABLE popRead COMMA V3
Rule 53    V3 -> VARIABLE popRead
Rule 54    ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON
Rule 55    E3 -> S_EXP popPrint
Rule 56    E3 -> S_EXP popPrint COMMA E3
Rule 57    CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
Rule 58    ELSE1 -> ELSE gotoElse CUERPO
Rule 59    ELSE1 -> empty
Rule 60    CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
Rule 61    CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
Rule 62    H_EXP -> T_EXP
Rule 63    H_EXP -> T_EXP OR H_EXP
Rule 64    T_EXP -> G_EXP
Rule 65    T_EXP -> G_EXP AND T_EXP
Rule 66    G_EXP -> EXP B popBool
Rule 67    B -> GREATER_OR_EQUAL meterOperador G_EXP
Rule 68    B -> LESS_OR_EQUAL meterOperador G_EXP
Rule 69    B -> GREATER_THAN meterOperador G_EXP
Rule 70    B -> LESS_THAN meterOperador G_EXP
Rule 71    B -> IS_EQUAL meterOperador G_EXP
Rule 72    B -> NOT_EQUAL meterOperador G_EXP
Rule 73    B -> empty
Rule 74    S_EXP -> C_STRING agregarConstString
Rule 75    S_EXP -> EXP
Rule 76    EXP -> TERMINO popSumaResta T
Rule 77    T -> PLUS meterOperador EXP
Rule 78    T -> MINUS meterOperador EXP
Rule 79    T -> empty
Rule 80    TERMINO -> FACTOR popMultDiv F2
Rule 81    F2 -> DIVIDE meterOperador TERMINO
Rule 82    F2 -> MULTIPLY meterOperador TERMINO
Rule 83    F2 -> empty
Rule 84    FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
Rule 85    FACTOR -> C_INT agregarConstInt
Rule 86    FACTOR -> C_FLOAT agregarConstFloat
Rule 87    FACTOR -> C_CHAR agregarConstChar
Rule 88    FACTOR -> VARIABLE
Rule 89    FACTOR -> LLAMADAF
Rule 90    empty -> <empty>
Rule 91    generarGosub -> <empty>
Rule 92    verificarParam -> <empty>
Rule 93    generarParam -> <empty>
Rule 94    generarEra -> <empty>
Rule 95    verificarFunc -> <empty>
Rule 96    terminarFunc -> <empty>
Rule 97    agregarLocalVar -> <empty>
Rule 98    agregarParamTable -> <empty>
Rule 99    guardarArreglo -> <empty>
Rule 100   verificarArreglo -> <empty>
Rule 101   declararArray -> <empty>
Rule 102   agregarFrom -> <empty>
Rule 103   crearCompFrom -> <empty>
Rule 104   sumarFrom -> <empty>
Rule 105   agregarConstInt -> <empty>
Rule 106   agregarConstFloat -> <empty>
Rule 107   agregarConstChar -> <empty>
Rule 108   agregarConstString -> <empty>
Rule 109   scopeGlobal -> <empty>
Rule 110   scopeLocal -> <empty>
Rule 111   scopeTemp -> <empty>
Rule 112   scopeConst -> <empty>
Rule 113   gotoIf -> <empty>
Rule 114   terminarGoto -> <empty>
Rule 115   agregarWhile -> <empty>
Rule 116   terminarWhile -> <empty>
Rule 117   gotoElse -> <empty>
Rule 118   meterFondoFalso -> <empty>
Rule 119   quitarFondoFalso -> <empty>
Rule 120   agregarPilaOp -> <empty>
Rule 121   popPrint -> <empty>
Rule 122   popRead -> <empty>
Rule 123   popReturn -> <empty>
Rule 124   popBool -> <empty>
Rule 125   popIgual -> <empty>
Rule 126   popMultDiv -> <empty>
Rule 127   popSumaResta -> <empty>
Rule 128   meterIgual -> <empty>
Rule 129   meterBool -> <empty>
Rule 130   meterMultDiv -> <empty>
Rule 131   meterSumaResta -> <empty>
Rule 132   meterOperador -> <empty>
Rule 133   crearFuncGlobal -> <empty>
Rule 134   crearFuncMain -> <empty>
Rule 135   agregarFunc -> <empty>
Rule 136   agregarVariables -> <empty>
Rule 137   printFunciones -> <empty>
Rule 138   printTodo -> <empty>
Rule 139   agregarVarLista -> <empty>
Rule 140   borrarListaVar -> <empty>

Terminals, with rules where they appear

AND                  : 65
CHAR                 : 24 27
COMMA                : 6 16 47 52 56
C_CHAR               : 87
C_FLOAT              : 86
C_INT                : 34 85
C_STRING             : 74
DIVIDE               : 81
DO                   : 60 61
ELSE                 : 58
EQUALS               : 44 61
FLOAT                : 23 26
FROM                 : 61
FUNC                 : 10
GREATER_OR_EQUAL     : 67
GREATER_THAN         : 69
IF                   : 57
INT                  : 22 25
IS_EQUAL             : 71
LBRACKET             : 17
LESS_OR_EQUAL        : 68
LESS_THAN            : 70
LPAREN               : 10 29 45 49 50 51 54 57 60 84
LSBRACKET            : 31 34
MAIN                 : 29
MINUS                : 78
MULTIPLY             : 82
NAME                 : 1 10 13 30 33 45 49
NOT_EQUAL            : 72
OR                   : 63
PLUS                 : 77
PRINT                : 54
PROGRAM              : 1
RBRACKET             : 17
READ                 : 51
RETURN               : 50
RPAREN               : 10 29 45 49 50 51 54 57 60 84
RSBRACKET            : 31 34
SEMICOLON            : 1 5 44 45 50 51 54
THEN                 : 57
TO                   : 61
VAR                  : 4
VOID                 : 28
WHILE                : 60
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 36
B                    : 66
CICLO_F              : 43
CICLO_W              : 42
CONDICION            : 41
CUERPO               : 10 29 57 58 60 61
E                    : 17
E1                   : 18 21
E2                   : 30
E2Der                : 33
E3                   : 54 56
E4                   : 45 47 49
ELSE1                : 57
ESCRITURA            : 40
ESTATUTO             : 20 21
EXP                  : 31 44 46 47 50 61 61 66 75 77 78
F                    : 1 2
F2                   : 80
FACTOR               : 80
FUNCION              : 2
G_EXP                : 64 65 67 68 69 70 71 72
H_EXP                : 57 60 63 84
LECTURA              : 39
LLAMADA              : 37
LLAMADAF             : 89
P1                   : 13 16
P2                   : 14
PARAMS               : 10 16
PRINCIPAL            : 1
PROGRAMA             : 0
RETORNO              : 38
S_EXP                : 55 56
T                    : 76
TERMINO              : 76 81 82
TIPO                 : 5 13
TIPO_FUNCION         : 10
T_EXP                : 62 63 65
V1                   : 4 8
V2                   : 5 6
V3                   : 5 51 52
V4                   : 10
VARIABLE             : 44 52 53 61 88
VARIABLEDer          : 5 6
VARS                 : 1 11
agregarConstChar     : 87
agregarConstFloat    : 86
agregarConstInt      : 85
agregarConstString   : 74
agregarFrom          : 61
agregarFunc          : 10
agregarLocalVar      : 10
agregarParamTable    : 10
agregarPilaOp        : 30
agregarVarLista      : 13 33
agregarVariables     : 10 33
agregarWhile         : 60 61
borrarListaVar       : 4 10 33
crearCompFrom        : 61
crearFuncGlobal      : 1
crearFuncMain        : 29
declararArray        : 34
empty                : 3 7 9 12 15 19 32 35 48 59 73 79 83
generarEra           : 45 49
generarGosub         : 45 49
generarParam         : 46 47
gotoElse             : 58
gotoIf               : 57 60 61
guardarArreglo       : 31
meterBool            : 
meterFondoFalso      : 31 45 49 84
meterIgual           : 
meterMultDiv         : 
meterOperador        : 44 61 67 68 69 70 71 72 77 78 81 82
meterSumaResta       : 
popBool              : 66
popIgual             : 44 61
popMultDiv           : 80
popPrint             : 55 56
popRead              : 52 53
popReturn            : 50
popSumaResta         : 76
printFunciones       : 
printTodo            : 1
quitarFondoFalso     : 31 45 49 84
scopeConst           : 
scopeGlobal          : 1
scopeLocal           : 10
scopeTemp            : 
sumarFrom            : 61
terminarFunc         : 10
terminarGoto         : 57
terminarWhile        : 60 61
verificarArreglo     : 31
verificarFunc        : 45 49
verificarParam       : 45 49

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo
    (133) crearFuncGlobal -> .

    PROGRAM         reduce using rule 133 (crearFuncGlobal -> .)

    PROGRAMA                       shift and go to state 1
    crearFuncGlobal                shift and go to state 2

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> crearFuncGlobal . PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo

    PROGRAM         shift and go to state 3


state 3

    (1) PROGRAMA -> crearFuncGlobal PROGRAM . NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo

    NAME            shift and go to state 4


state 4

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME . SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo

    SEMICOLON       shift and go to state 5


state 5

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON . scopeGlobal VARS F PRINCIPAL printTodo
    (109) scopeGlobal -> .

    VAR             reduce using rule 109 (scopeGlobal -> .)

    scopeGlobal                    shift and go to state 6

state 6

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal . VARS F PRINCIPAL printTodo
    (4) VARS -> . borrarListaVar VAR V1
    (140) borrarListaVar -> .

    VAR             reduce using rule 140 (borrarListaVar -> .)

    VARS                           shift and go to state 7
    borrarListaVar                 shift and go to state 8

state 7

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS . F PRINCIPAL printTodo
    (2) F -> . FUNCION F
    (3) F -> . empty
    (10) FUNCION -> . FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
    (90) empty -> .

    FUNC            shift and go to state 12
    MAIN            reduce using rule 90 (empty -> .)

    F                              shift and go to state 9
    FUNCION                        shift and go to state 10
    empty                          shift and go to state 11

state 8

    (4) VARS -> borrarListaVar . VAR V1

    VAR             shift and go to state 13


state 9

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F . PRINCIPAL printTodo
    (29) PRINCIPAL -> . MAIN LPAREN crearFuncMain RPAREN CUERPO

    MAIN            shift and go to state 15

    PRINCIPAL                      shift and go to state 14

state 10

    (2) F -> FUNCION . F
    (2) F -> . FUNCION F
    (3) F -> . empty
    (10) FUNCION -> . FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
    (90) empty -> .

    FUNC            shift and go to state 12
    MAIN            reduce using rule 90 (empty -> .)

    FUNCION                        shift and go to state 10
    F                              shift and go to state 16
    empty                          shift and go to state 11

state 11

    (3) F -> empty .

    MAIN            reduce using rule 3 (F -> empty .)


state 12

    (10) FUNCION -> FUNC . TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
    (25) TIPO_FUNCION -> . INT
    (26) TIPO_FUNCION -> . FLOAT
    (27) TIPO_FUNCION -> . CHAR
    (28) TIPO_FUNCION -> . VOID

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    VOID            shift and go to state 21

    TIPO_FUNCION                   shift and go to state 17

state 13

    (4) VARS -> borrarListaVar VAR . V1
    (5) V1 -> . TIPO VARIABLEDer V2 SEMICOLON V3
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    V1                             shift and go to state 22
    TIPO                           shift and go to state 23

state 14

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL . printTodo
    (138) printTodo -> .

    $end            reduce using rule 138 (printTodo -> .)

    printTodo                      shift and go to state 27

state 15

    (29) PRINCIPAL -> MAIN . LPAREN crearFuncMain RPAREN CUERPO

    LPAREN          shift and go to state 28


state 16

    (2) F -> FUNCION F .

    MAIN            reduce using rule 2 (F -> FUNCION F .)


state 17

    (10) FUNCION -> FUNC TIPO_FUNCION . NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc

    NAME            shift and go to state 29


state 18

    (25) TIPO_FUNCION -> INT .

    NAME            reduce using rule 25 (TIPO_FUNCION -> INT .)


state 19

    (26) TIPO_FUNCION -> FLOAT .

    NAME            reduce using rule 26 (TIPO_FUNCION -> FLOAT .)


state 20

    (27) TIPO_FUNCION -> CHAR .

    NAME            reduce using rule 27 (TIPO_FUNCION -> CHAR .)


state 21

    (28) TIPO_FUNCION -> VOID .

    NAME            reduce using rule 28 (TIPO_FUNCION -> VOID .)


state 22

    (4) VARS -> borrarListaVar VAR V1 .

    FUNC            reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)
    MAIN            reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)
    LBRACKET        reduce using rule 4 (VARS -> borrarListaVar VAR V1 .)


state 23

    (5) V1 -> TIPO . VARIABLEDer V2 SEMICOLON V3
    (33) VARIABLEDer -> . NAME agregarVarLista agregarVariables borrarListaVar E2Der

    NAME            shift and go to state 31

    VARIABLEDer                    shift and go to state 30

state 24

    (22) TIPO -> INT .

    NAME            reduce using rule 22 (TIPO -> INT .)


state 25

    (23) TIPO -> FLOAT .

    NAME            reduce using rule 23 (TIPO -> FLOAT .)


state 26

    (24) TIPO -> CHAR .

    NAME            reduce using rule 24 (TIPO -> CHAR .)


state 27

    (1) PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo .

    $end            reduce using rule 1 (PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo .)


state 28

    (29) PRINCIPAL -> MAIN LPAREN . crearFuncMain RPAREN CUERPO
    (134) crearFuncMain -> .

    RPAREN          reduce using rule 134 (crearFuncMain -> .)

    crearFuncMain                  shift and go to state 32

state 29

    (10) FUNCION -> FUNC TIPO_FUNCION NAME . agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
    (135) agregarFunc -> .

    LPAREN          reduce using rule 135 (agregarFunc -> .)

    agregarFunc                    shift and go to state 33

state 30

    (5) V1 -> TIPO VARIABLEDer . V2 SEMICOLON V3
    (6) V2 -> . COMMA VARIABLEDer V2
    (7) V2 -> . empty
    (90) empty -> .

    COMMA           shift and go to state 35
    SEMICOLON       reduce using rule 90 (empty -> .)

    V2                             shift and go to state 34
    empty                          shift and go to state 36

state 31

    (33) VARIABLEDer -> NAME . agregarVarLista agregarVariables borrarListaVar E2Der
    (139) agregarVarLista -> .

    LSBRACKET       reduce using rule 139 (agregarVarLista -> .)
    COMMA           reduce using rule 139 (agregarVarLista -> .)
    SEMICOLON       reduce using rule 139 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 37

state 32

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain . RPAREN CUERPO

    RPAREN          shift and go to state 38


state 33

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc . LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc

    LPAREN          shift and go to state 39


state 34

    (5) V1 -> TIPO VARIABLEDer V2 . SEMICOLON V3

    SEMICOLON       shift and go to state 40


state 35

    (6) V2 -> COMMA . VARIABLEDer V2
    (33) VARIABLEDer -> . NAME agregarVarLista agregarVariables borrarListaVar E2Der

    NAME            shift and go to state 31

    VARIABLEDer                    shift and go to state 41

state 36

    (7) V2 -> empty .

    SEMICOLON       reduce using rule 7 (V2 -> empty .)


state 37

    (33) VARIABLEDer -> NAME agregarVarLista . agregarVariables borrarListaVar E2Der
    (136) agregarVariables -> .

    LSBRACKET       reduce using rule 136 (agregarVariables -> .)
    COMMA           reduce using rule 136 (agregarVariables -> .)
    SEMICOLON       reduce using rule 136 (agregarVariables -> .)

    agregarVariables               shift and go to state 42

state 38

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 43

state 39

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN . borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
    (140) borrarListaVar -> .

    INT             reduce using rule 140 (borrarListaVar -> .)
    FLOAT           reduce using rule 140 (borrarListaVar -> .)
    CHAR            reduce using rule 140 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 45

state 40

    (5) V1 -> TIPO VARIABLEDer V2 SEMICOLON . V3
    (8) V3 -> . V1
    (9) V3 -> . empty
    (52) V3 -> . VARIABLE popRead COMMA V3
    (53) V3 -> . VARIABLE popRead
    (5) V1 -> . TIPO VARIABLEDer V2 SEMICOLON V3
    (90) empty -> .
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    FUNC            reduce using rule 90 (empty -> .)
    MAIN            reduce using rule 90 (empty -> .)
    LBRACKET        reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)
    NAME            shift and go to state 50
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    TIPO                           shift and go to state 23
    V3                             shift and go to state 46
    V1                             shift and go to state 47
    empty                          shift and go to state 48
    VARIABLE                       shift and go to state 49

state 41

    (6) V2 -> COMMA VARIABLEDer . V2
    (6) V2 -> . COMMA VARIABLEDer V2
    (7) V2 -> . empty
    (90) empty -> .

    COMMA           shift and go to state 35
    SEMICOLON       reduce using rule 90 (empty -> .)

    V2                             shift and go to state 51
    empty                          shift and go to state 36

state 42

    (33) VARIABLEDer -> NAME agregarVarLista agregarVariables . borrarListaVar E2Der
    (140) borrarListaVar -> .

    LSBRACKET       reduce using rule 140 (borrarListaVar -> .)
    COMMA           reduce using rule 140 (borrarListaVar -> .)
    SEMICOLON       reduce using rule 140 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 52

state 43

    (29) PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO .

    $end            reduce using rule 29 (PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO .)


state 44

    (17) CUERPO -> LBRACKET . E RBRACKET
    (18) E -> . E1
    (19) E -> . empty
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (90) empty -> .
    (36) ESTATUTO -> . ASIGNACION
    (37) ESTATUTO -> . LLAMADA
    (38) ESTATUTO -> . RETORNO
    (39) ESTATUTO -> . LECTURA
    (40) ESTATUTO -> . ESCRITURA
    (41) ESTATUTO -> . CONDICION
    (42) ESTATUTO -> . CICLO_W
    (43) ESTATUTO -> . CICLO_F
    (44) ASIGNACION -> . VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON
    (45) LLAMADA -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON
    (50) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (51) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (54) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (57) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (60) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (61) CICLO_F -> . FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (30) VARIABLE -> . NAME agregarPilaOp E2

    RBRACKET        reduce using rule 90 (empty -> .)
    NAME            shift and go to state 66
    RETURN          shift and go to state 67
    READ            shift and go to state 68
    PRINT           shift and go to state 69
    IF              shift and go to state 70
    WHILE           shift and go to state 71
    FROM            shift and go to state 72

    E                              shift and go to state 53
    E1                             shift and go to state 54
    empty                          shift and go to state 55
    ESTATUTO                       shift and go to state 56
    ASIGNACION                     shift and go to state 57
    LLAMADA                        shift and go to state 58
    RETORNO                        shift and go to state 59
    LECTURA                        shift and go to state 60
    ESCRITURA                      shift and go to state 61
    CONDICION                      shift and go to state 62
    CICLO_W                        shift and go to state 63
    CICLO_F                        shift and go to state 64
    VARIABLE                       shift and go to state 65

state 45

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar . scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
    (110) scopeLocal -> .

    INT             reduce using rule 110 (scopeLocal -> .)
    FLOAT           reduce using rule 110 (scopeLocal -> .)
    CHAR            reduce using rule 110 (scopeLocal -> .)

    scopeLocal                     shift and go to state 73

state 46

    (5) V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .

    FUNC            reduce using rule 5 (V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .)
    MAIN            reduce using rule 5 (V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .)
    LBRACKET        reduce using rule 5 (V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .)
    RPAREN          reduce using rule 5 (V1 -> TIPO VARIABLEDer V2 SEMICOLON V3 .)


state 47

    (8) V3 -> V1 .

    FUNC            reduce using rule 8 (V3 -> V1 .)
    MAIN            reduce using rule 8 (V3 -> V1 .)
    LBRACKET        reduce using rule 8 (V3 -> V1 .)
    RPAREN          reduce using rule 8 (V3 -> V1 .)


state 48

    (9) V3 -> empty .

    FUNC            reduce using rule 9 (V3 -> empty .)
    MAIN            reduce using rule 9 (V3 -> empty .)
    LBRACKET        reduce using rule 9 (V3 -> empty .)
    RPAREN          reduce using rule 9 (V3 -> empty .)


state 49

    (52) V3 -> VARIABLE . popRead COMMA V3
    (53) V3 -> VARIABLE . popRead
    (122) popRead -> .

    COMMA           reduce using rule 122 (popRead -> .)
    FUNC            reduce using rule 122 (popRead -> .)
    MAIN            reduce using rule 122 (popRead -> .)
    LBRACKET        reduce using rule 122 (popRead -> .)
    RPAREN          reduce using rule 122 (popRead -> .)

    popRead                        shift and go to state 74

state 50

    (30) VARIABLE -> NAME . agregarPilaOp E2
    (120) agregarPilaOp -> .

    LSBRACKET       reduce using rule 120 (agregarPilaOp -> .)
    COMMA           reduce using rule 120 (agregarPilaOp -> .)
    FUNC            reduce using rule 120 (agregarPilaOp -> .)
    MAIN            reduce using rule 120 (agregarPilaOp -> .)
    LBRACKET        reduce using rule 120 (agregarPilaOp -> .)
    RPAREN          reduce using rule 120 (agregarPilaOp -> .)
    EQUALS          reduce using rule 120 (agregarPilaOp -> .)

    agregarPilaOp                  shift and go to state 75

state 51

    (6) V2 -> COMMA VARIABLEDer V2 .

    SEMICOLON       reduce using rule 6 (V2 -> COMMA VARIABLEDer V2 .)


state 52

    (33) VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar . E2Der
    (34) E2Der -> . LSBRACKET C_INT declararArray RSBRACKET
    (35) E2Der -> . empty
    (90) empty -> .

    LSBRACKET       shift and go to state 77
    COMMA           reduce using rule 90 (empty -> .)
    SEMICOLON       reduce using rule 90 (empty -> .)

    E2Der                          shift and go to state 76
    empty                          shift and go to state 78

state 53

    (17) CUERPO -> LBRACKET E . RBRACKET

    RBRACKET        shift and go to state 79


state 54

    (18) E -> E1 .

    RBRACKET        reduce using rule 18 (E -> E1 .)


state 55

    (19) E -> empty .

    RBRACKET        reduce using rule 19 (E -> empty .)


state 56

    (20) E1 -> ESTATUTO .
    (21) E1 -> ESTATUTO . E1
    (20) E1 -> . ESTATUTO
    (21) E1 -> . ESTATUTO E1
    (36) ESTATUTO -> . ASIGNACION
    (37) ESTATUTO -> . LLAMADA
    (38) ESTATUTO -> . RETORNO
    (39) ESTATUTO -> . LECTURA
    (40) ESTATUTO -> . ESCRITURA
    (41) ESTATUTO -> . CONDICION
    (42) ESTATUTO -> . CICLO_W
    (43) ESTATUTO -> . CICLO_F
    (44) ASIGNACION -> . VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON
    (45) LLAMADA -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON
    (50) RETORNO -> . RETURN LPAREN EXP popReturn RPAREN SEMICOLON
    (51) LECTURA -> . READ LPAREN V3 RPAREN SEMICOLON
    (54) ESCRITURA -> . PRINT LPAREN E3 RPAREN SEMICOLON
    (57) CONDICION -> . IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (60) CICLO_W -> . WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (61) CICLO_F -> . FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (30) VARIABLE -> . NAME agregarPilaOp E2

    RBRACKET        reduce using rule 20 (E1 -> ESTATUTO .)
    NAME            shift and go to state 66
    RETURN          shift and go to state 67
    READ            shift and go to state 68
    PRINT           shift and go to state 69
    IF              shift and go to state 70
    WHILE           shift and go to state 71
    FROM            shift and go to state 72

    ESTATUTO                       shift and go to state 56
    E1                             shift and go to state 80
    ASIGNACION                     shift and go to state 57
    LLAMADA                        shift and go to state 58
    RETORNO                        shift and go to state 59
    LECTURA                        shift and go to state 60
    ESCRITURA                      shift and go to state 61
    CONDICION                      shift and go to state 62
    CICLO_W                        shift and go to state 63
    CICLO_F                        shift and go to state 64
    VARIABLE                       shift and go to state 65

state 57

    (36) ESTATUTO -> ASIGNACION .

    NAME            reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    READ            reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    PRINT           reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    WHILE           reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    FROM            reduce using rule 36 (ESTATUTO -> ASIGNACION .)
    RBRACKET        reduce using rule 36 (ESTATUTO -> ASIGNACION .)


state 58

    (37) ESTATUTO -> LLAMADA .

    NAME            reduce using rule 37 (ESTATUTO -> LLAMADA .)
    RETURN          reduce using rule 37 (ESTATUTO -> LLAMADA .)
    READ            reduce using rule 37 (ESTATUTO -> LLAMADA .)
    PRINT           reduce using rule 37 (ESTATUTO -> LLAMADA .)
    IF              reduce using rule 37 (ESTATUTO -> LLAMADA .)
    WHILE           reduce using rule 37 (ESTATUTO -> LLAMADA .)
    FROM            reduce using rule 37 (ESTATUTO -> LLAMADA .)
    RBRACKET        reduce using rule 37 (ESTATUTO -> LLAMADA .)


state 59

    (38) ESTATUTO -> RETORNO .

    NAME            reduce using rule 38 (ESTATUTO -> RETORNO .)
    RETURN          reduce using rule 38 (ESTATUTO -> RETORNO .)
    READ            reduce using rule 38 (ESTATUTO -> RETORNO .)
    PRINT           reduce using rule 38 (ESTATUTO -> RETORNO .)
    IF              reduce using rule 38 (ESTATUTO -> RETORNO .)
    WHILE           reduce using rule 38 (ESTATUTO -> RETORNO .)
    FROM            reduce using rule 38 (ESTATUTO -> RETORNO .)
    RBRACKET        reduce using rule 38 (ESTATUTO -> RETORNO .)


state 60

    (39) ESTATUTO -> LECTURA .

    NAME            reduce using rule 39 (ESTATUTO -> LECTURA .)
    RETURN          reduce using rule 39 (ESTATUTO -> LECTURA .)
    READ            reduce using rule 39 (ESTATUTO -> LECTURA .)
    PRINT           reduce using rule 39 (ESTATUTO -> LECTURA .)
    IF              reduce using rule 39 (ESTATUTO -> LECTURA .)
    WHILE           reduce using rule 39 (ESTATUTO -> LECTURA .)
    FROM            reduce using rule 39 (ESTATUTO -> LECTURA .)
    RBRACKET        reduce using rule 39 (ESTATUTO -> LECTURA .)


state 61

    (40) ESTATUTO -> ESCRITURA .

    NAME            reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    RETURN          reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    READ            reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    PRINT           reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    IF              reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    WHILE           reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    FROM            reduce using rule 40 (ESTATUTO -> ESCRITURA .)
    RBRACKET        reduce using rule 40 (ESTATUTO -> ESCRITURA .)


state 62

    (41) ESTATUTO -> CONDICION .

    NAME            reduce using rule 41 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 41 (ESTATUTO -> CONDICION .)
    READ            reduce using rule 41 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 41 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 41 (ESTATUTO -> CONDICION .)
    WHILE           reduce using rule 41 (ESTATUTO -> CONDICION .)
    FROM            reduce using rule 41 (ESTATUTO -> CONDICION .)
    RBRACKET        reduce using rule 41 (ESTATUTO -> CONDICION .)


state 63

    (42) ESTATUTO -> CICLO_W .

    NAME            reduce using rule 42 (ESTATUTO -> CICLO_W .)
    RETURN          reduce using rule 42 (ESTATUTO -> CICLO_W .)
    READ            reduce using rule 42 (ESTATUTO -> CICLO_W .)
    PRINT           reduce using rule 42 (ESTATUTO -> CICLO_W .)
    IF              reduce using rule 42 (ESTATUTO -> CICLO_W .)
    WHILE           reduce using rule 42 (ESTATUTO -> CICLO_W .)
    FROM            reduce using rule 42 (ESTATUTO -> CICLO_W .)
    RBRACKET        reduce using rule 42 (ESTATUTO -> CICLO_W .)


state 64

    (43) ESTATUTO -> CICLO_F .

    NAME            reduce using rule 43 (ESTATUTO -> CICLO_F .)
    RETURN          reduce using rule 43 (ESTATUTO -> CICLO_F .)
    READ            reduce using rule 43 (ESTATUTO -> CICLO_F .)
    PRINT           reduce using rule 43 (ESTATUTO -> CICLO_F .)
    IF              reduce using rule 43 (ESTATUTO -> CICLO_F .)
    WHILE           reduce using rule 43 (ESTATUTO -> CICLO_F .)
    FROM            reduce using rule 43 (ESTATUTO -> CICLO_F .)
    RBRACKET        reduce using rule 43 (ESTATUTO -> CICLO_F .)


state 65

    (44) ASIGNACION -> VARIABLE . EQUALS meterOperador EXP popIgual SEMICOLON

    EQUALS          shift and go to state 81


state 66

    (45) LLAMADA -> NAME . verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON
    (30) VARIABLE -> NAME . agregarPilaOp E2
    (95) verificarFunc -> .
    (120) agregarPilaOp -> .

    LPAREN          reduce using rule 95 (verificarFunc -> .)
    LSBRACKET       reduce using rule 120 (agregarPilaOp -> .)
    EQUALS          reduce using rule 120 (agregarPilaOp -> .)

    verificarFunc                  shift and go to state 82
    agregarPilaOp                  shift and go to state 75

state 67

    (50) RETORNO -> RETURN . LPAREN EXP popReturn RPAREN SEMICOLON

    LPAREN          shift and go to state 83


state 68

    (51) LECTURA -> READ . LPAREN V3 RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 69

    (54) ESCRITURA -> PRINT . LPAREN E3 RPAREN SEMICOLON

    LPAREN          shift and go to state 85


state 70

    (57) CONDICION -> IF . LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto

    LPAREN          shift and go to state 86


state 71

    (60) CICLO_W -> WHILE . agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (115) agregarWhile -> .

    LPAREN          reduce using rule 115 (agregarWhile -> .)

    agregarWhile                   shift and go to state 87

state 72

    (61) CICLO_F -> FROM . agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (115) agregarWhile -> .

    NAME            reduce using rule 115 (agregarWhile -> .)

    agregarWhile                   shift and go to state 88

state 73

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal . PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
    (13) PARAMS -> . TIPO NAME agregarVarLista P1
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    PARAMS                         shift and go to state 89
    TIPO                           shift and go to state 90

state 74

    (52) V3 -> VARIABLE popRead . COMMA V3
    (53) V3 -> VARIABLE popRead .

    COMMA           shift and go to state 91
    FUNC            reduce using rule 53 (V3 -> VARIABLE popRead .)
    MAIN            reduce using rule 53 (V3 -> VARIABLE popRead .)
    LBRACKET        reduce using rule 53 (V3 -> VARIABLE popRead .)
    RPAREN          reduce using rule 53 (V3 -> VARIABLE popRead .)


state 75

    (30) VARIABLE -> NAME agregarPilaOp . E2
    (31) E2 -> . LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso
    (32) E2 -> . empty
    (90) empty -> .

    LSBRACKET       shift and go to state 93
    COMMA           reduce using rule 90 (empty -> .)
    FUNC            reduce using rule 90 (empty -> .)
    MAIN            reduce using rule 90 (empty -> .)
    LBRACKET        reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)
    EQUALS          reduce using rule 90 (empty -> .)
    DIVIDE          reduce using rule 90 (empty -> .)
    MULTIPLY        reduce using rule 90 (empty -> .)
    PLUS            reduce using rule 90 (empty -> .)
    MINUS           reduce using rule 90 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 90 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 90 (empty -> .)
    GREATER_THAN    reduce using rule 90 (empty -> .)
    LESS_THAN       reduce using rule 90 (empty -> .)
    IS_EQUAL        reduce using rule 90 (empty -> .)
    NOT_EQUAL       reduce using rule 90 (empty -> .)
    AND             reduce using rule 90 (empty -> .)
    OR              reduce using rule 90 (empty -> .)
    SEMICOLON       reduce using rule 90 (empty -> .)
    RSBRACKET       reduce using rule 90 (empty -> .)
    TO              reduce using rule 90 (empty -> .)
    DO              reduce using rule 90 (empty -> .)

    E2                             shift and go to state 92
    empty                          shift and go to state 94

state 76

    (33) VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der .

    COMMA           reduce using rule 33 (VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der .)
    SEMICOLON       reduce using rule 33 (VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der .)


state 77

    (34) E2Der -> LSBRACKET . C_INT declararArray RSBRACKET

    C_INT           shift and go to state 95


state 78

    (35) E2Der -> empty .

    COMMA           reduce using rule 35 (E2Der -> empty .)
    SEMICOLON       reduce using rule 35 (E2Der -> empty .)


state 79

    (17) CUERPO -> LBRACKET E RBRACKET .

    $end            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    ELSE            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    NAME            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RETURN          reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    READ            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    PRINT           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    IF              reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    WHILE           reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    FROM            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    FUNC            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)
    MAIN            reduce using rule 17 (CUERPO -> LBRACKET E RBRACKET .)


state 80

    (21) E1 -> ESTATUTO E1 .

    RBRACKET        reduce using rule 21 (E1 -> ESTATUTO E1 .)


state 81

    (44) ASIGNACION -> VARIABLE EQUALS . meterOperador EXP popIgual SEMICOLON
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 96

state 82

    (45) LLAMADA -> NAME verificarFunc . LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON

    LPAREN          shift and go to state 97


state 83

    (50) RETORNO -> RETURN LPAREN . EXP popReturn RPAREN SEMICOLON
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    EXP                            shift and go to state 99
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 84

    (51) LECTURA -> READ LPAREN . V3 RPAREN SEMICOLON
    (8) V3 -> . V1
    (9) V3 -> . empty
    (52) V3 -> . VARIABLE popRead COMMA V3
    (53) V3 -> . VARIABLE popRead
    (5) V1 -> . TIPO VARIABLEDer V2 SEMICOLON V3
    (90) empty -> .
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    RPAREN          reduce using rule 90 (empty -> .)
    NAME            shift and go to state 50
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    V3                             shift and go to state 108
    V1                             shift and go to state 47
    empty                          shift and go to state 48
    VARIABLE                       shift and go to state 49
    TIPO                           shift and go to state 23

state 85

    (54) ESCRITURA -> PRINT LPAREN . E3 RPAREN SEMICOLON
    (55) E3 -> . S_EXP popPrint
    (56) E3 -> . S_EXP popPrint COMMA E3
    (74) S_EXP -> . C_STRING agregarConstString
    (75) S_EXP -> . EXP
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    C_STRING        shift and go to state 111
    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    E3                             shift and go to state 109
    S_EXP                          shift and go to state 110
    EXP                            shift and go to state 112
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 86

    (57) CONDICION -> IF LPAREN . H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto
    (62) H_EXP -> . T_EXP
    (63) H_EXP -> . T_EXP OR H_EXP
    (64) T_EXP -> . G_EXP
    (65) T_EXP -> . G_EXP AND T_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    H_EXP                          shift and go to state 113
    T_EXP                          shift and go to state 114
    G_EXP                          shift and go to state 115
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 87

    (60) CICLO_W -> WHILE agregarWhile . LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile

    LPAREN          shift and go to state 117


state 88

    (61) CICLO_F -> FROM agregarWhile . VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (30) VARIABLE -> . NAME agregarPilaOp E2

    NAME            shift and go to state 50

    VARIABLE                       shift and go to state 118

state 89

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS . agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
    (98) agregarParamTable -> .

    RPAREN          reduce using rule 98 (agregarParamTable -> .)

    agregarParamTable              shift and go to state 119

state 90

    (13) PARAMS -> TIPO . NAME agregarVarLista P1

    NAME            shift and go to state 120


state 91

    (52) V3 -> VARIABLE popRead COMMA . V3
    (8) V3 -> . V1
    (9) V3 -> . empty
    (52) V3 -> . VARIABLE popRead COMMA V3
    (53) V3 -> . VARIABLE popRead
    (5) V1 -> . TIPO VARIABLEDer V2 SEMICOLON V3
    (90) empty -> .
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    FUNC            reduce using rule 90 (empty -> .)
    MAIN            reduce using rule 90 (empty -> .)
    LBRACKET        reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)
    NAME            shift and go to state 50
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    VARIABLE                       shift and go to state 49
    V3                             shift and go to state 121
    V1                             shift and go to state 47
    empty                          shift and go to state 48
    TIPO                           shift and go to state 23

state 92

    (30) VARIABLE -> NAME agregarPilaOp E2 .

    COMMA           reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    FUNC            reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    MAIN            reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    LBRACKET        reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    RPAREN          reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    EQUALS          reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    DIVIDE          reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    MULTIPLY        reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    PLUS            reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    MINUS           reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    GREATER_OR_EQUAL reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    LESS_OR_EQUAL   reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    GREATER_THAN    reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    LESS_THAN       reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    IS_EQUAL        reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    NOT_EQUAL       reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    AND             reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    OR              reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    SEMICOLON       reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    RSBRACKET       reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    TO              reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)
    DO              reduce using rule 30 (VARIABLE -> NAME agregarPilaOp E2 .)


state 93

    (31) E2 -> LSBRACKET . guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso
    (99) guardarArreglo -> .

    LPAREN          reduce using rule 99 (guardarArreglo -> .)
    C_INT           reduce using rule 99 (guardarArreglo -> .)
    C_FLOAT         reduce using rule 99 (guardarArreglo -> .)
    C_CHAR          reduce using rule 99 (guardarArreglo -> .)
    NAME            reduce using rule 99 (guardarArreglo -> .)

    guardarArreglo                 shift and go to state 122

state 94

    (32) E2 -> empty .

    COMMA           reduce using rule 32 (E2 -> empty .)
    FUNC            reduce using rule 32 (E2 -> empty .)
    MAIN            reduce using rule 32 (E2 -> empty .)
    LBRACKET        reduce using rule 32 (E2 -> empty .)
    RPAREN          reduce using rule 32 (E2 -> empty .)
    EQUALS          reduce using rule 32 (E2 -> empty .)
    DIVIDE          reduce using rule 32 (E2 -> empty .)
    MULTIPLY        reduce using rule 32 (E2 -> empty .)
    PLUS            reduce using rule 32 (E2 -> empty .)
    MINUS           reduce using rule 32 (E2 -> empty .)
    GREATER_OR_EQUAL reduce using rule 32 (E2 -> empty .)
    LESS_OR_EQUAL   reduce using rule 32 (E2 -> empty .)
    GREATER_THAN    reduce using rule 32 (E2 -> empty .)
    LESS_THAN       reduce using rule 32 (E2 -> empty .)
    IS_EQUAL        reduce using rule 32 (E2 -> empty .)
    NOT_EQUAL       reduce using rule 32 (E2 -> empty .)
    AND             reduce using rule 32 (E2 -> empty .)
    OR              reduce using rule 32 (E2 -> empty .)
    SEMICOLON       reduce using rule 32 (E2 -> empty .)
    RSBRACKET       reduce using rule 32 (E2 -> empty .)
    TO              reduce using rule 32 (E2 -> empty .)
    DO              reduce using rule 32 (E2 -> empty .)


state 95

    (34) E2Der -> LSBRACKET C_INT . declararArray RSBRACKET
    (101) declararArray -> .

    RSBRACKET       reduce using rule 101 (declararArray -> .)

    declararArray                  shift and go to state 123

state 96

    (44) ASIGNACION -> VARIABLE EQUALS meterOperador . EXP popIgual SEMICOLON
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    VARIABLE                       shift and go to state 105
    EXP                            shift and go to state 124
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    LLAMADAF                       shift and go to state 106

state 97

    (45) LLAMADA -> NAME verificarFunc LPAREN . meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON
    (118) meterFondoFalso -> .

    LPAREN          reduce using rule 118 (meterFondoFalso -> .)
    C_INT           reduce using rule 118 (meterFondoFalso -> .)
    C_FLOAT         reduce using rule 118 (meterFondoFalso -> .)
    C_CHAR          reduce using rule 118 (meterFondoFalso -> .)
    NAME            reduce using rule 118 (meterFondoFalso -> .)
    RPAREN          reduce using rule 118 (meterFondoFalso -> .)

    meterFondoFalso                shift and go to state 125

state 98

    (84) FACTOR -> LPAREN . meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (118) meterFondoFalso -> .

    LPAREN          reduce using rule 118 (meterFondoFalso -> .)
    C_INT           reduce using rule 118 (meterFondoFalso -> .)
    C_FLOAT         reduce using rule 118 (meterFondoFalso -> .)
    C_CHAR          reduce using rule 118 (meterFondoFalso -> .)
    NAME            reduce using rule 118 (meterFondoFalso -> .)

    meterFondoFalso                shift and go to state 126

state 99

    (50) RETORNO -> RETURN LPAREN EXP . popReturn RPAREN SEMICOLON
    (123) popReturn -> .

    RPAREN          reduce using rule 123 (popReturn -> .)

    popReturn                      shift and go to state 127

state 100

    (76) EXP -> TERMINO . popSumaResta T
    (127) popSumaResta -> .

    PLUS            reduce using rule 127 (popSumaResta -> .)
    MINUS           reduce using rule 127 (popSumaResta -> .)
    RPAREN          reduce using rule 127 (popSumaResta -> .)
    COMMA           reduce using rule 127 (popSumaResta -> .)
    GREATER_OR_EQUAL reduce using rule 127 (popSumaResta -> .)
    LESS_OR_EQUAL   reduce using rule 127 (popSumaResta -> .)
    GREATER_THAN    reduce using rule 127 (popSumaResta -> .)
    LESS_THAN       reduce using rule 127 (popSumaResta -> .)
    IS_EQUAL        reduce using rule 127 (popSumaResta -> .)
    NOT_EQUAL       reduce using rule 127 (popSumaResta -> .)
    AND             reduce using rule 127 (popSumaResta -> .)
    OR              reduce using rule 127 (popSumaResta -> .)
    SEMICOLON       reduce using rule 127 (popSumaResta -> .)
    RSBRACKET       reduce using rule 127 (popSumaResta -> .)
    TO              reduce using rule 127 (popSumaResta -> .)
    DO              reduce using rule 127 (popSumaResta -> .)

    popSumaResta                   shift and go to state 128

state 101

    (80) TERMINO -> FACTOR . popMultDiv F2
    (126) popMultDiv -> .

    DIVIDE          reduce using rule 126 (popMultDiv -> .)
    MULTIPLY        reduce using rule 126 (popMultDiv -> .)
    PLUS            reduce using rule 126 (popMultDiv -> .)
    MINUS           reduce using rule 126 (popMultDiv -> .)
    RPAREN          reduce using rule 126 (popMultDiv -> .)
    COMMA           reduce using rule 126 (popMultDiv -> .)
    GREATER_OR_EQUAL reduce using rule 126 (popMultDiv -> .)
    LESS_OR_EQUAL   reduce using rule 126 (popMultDiv -> .)
    GREATER_THAN    reduce using rule 126 (popMultDiv -> .)
    LESS_THAN       reduce using rule 126 (popMultDiv -> .)
    IS_EQUAL        reduce using rule 126 (popMultDiv -> .)
    NOT_EQUAL       reduce using rule 126 (popMultDiv -> .)
    AND             reduce using rule 126 (popMultDiv -> .)
    OR              reduce using rule 126 (popMultDiv -> .)
    SEMICOLON       reduce using rule 126 (popMultDiv -> .)
    RSBRACKET       reduce using rule 126 (popMultDiv -> .)
    TO              reduce using rule 126 (popMultDiv -> .)
    DO              reduce using rule 126 (popMultDiv -> .)

    popMultDiv                     shift and go to state 129

state 102

    (85) FACTOR -> C_INT . agregarConstInt
    (105) agregarConstInt -> .

    DIVIDE          reduce using rule 105 (agregarConstInt -> .)
    MULTIPLY        reduce using rule 105 (agregarConstInt -> .)
    PLUS            reduce using rule 105 (agregarConstInt -> .)
    MINUS           reduce using rule 105 (agregarConstInt -> .)
    RPAREN          reduce using rule 105 (agregarConstInt -> .)
    COMMA           reduce using rule 105 (agregarConstInt -> .)
    GREATER_OR_EQUAL reduce using rule 105 (agregarConstInt -> .)
    LESS_OR_EQUAL   reduce using rule 105 (agregarConstInt -> .)
    GREATER_THAN    reduce using rule 105 (agregarConstInt -> .)
    LESS_THAN       reduce using rule 105 (agregarConstInt -> .)
    IS_EQUAL        reduce using rule 105 (agregarConstInt -> .)
    NOT_EQUAL       reduce using rule 105 (agregarConstInt -> .)
    AND             reduce using rule 105 (agregarConstInt -> .)
    OR              reduce using rule 105 (agregarConstInt -> .)
    SEMICOLON       reduce using rule 105 (agregarConstInt -> .)
    RSBRACKET       reduce using rule 105 (agregarConstInt -> .)
    TO              reduce using rule 105 (agregarConstInt -> .)
    DO              reduce using rule 105 (agregarConstInt -> .)

    agregarConstInt                shift and go to state 130

state 103

    (86) FACTOR -> C_FLOAT . agregarConstFloat
    (106) agregarConstFloat -> .

    DIVIDE          reduce using rule 106 (agregarConstFloat -> .)
    MULTIPLY        reduce using rule 106 (agregarConstFloat -> .)
    PLUS            reduce using rule 106 (agregarConstFloat -> .)
    MINUS           reduce using rule 106 (agregarConstFloat -> .)
    RPAREN          reduce using rule 106 (agregarConstFloat -> .)
    COMMA           reduce using rule 106 (agregarConstFloat -> .)
    GREATER_OR_EQUAL reduce using rule 106 (agregarConstFloat -> .)
    LESS_OR_EQUAL   reduce using rule 106 (agregarConstFloat -> .)
    GREATER_THAN    reduce using rule 106 (agregarConstFloat -> .)
    LESS_THAN       reduce using rule 106 (agregarConstFloat -> .)
    IS_EQUAL        reduce using rule 106 (agregarConstFloat -> .)
    NOT_EQUAL       reduce using rule 106 (agregarConstFloat -> .)
    AND             reduce using rule 106 (agregarConstFloat -> .)
    OR              reduce using rule 106 (agregarConstFloat -> .)
    SEMICOLON       reduce using rule 106 (agregarConstFloat -> .)
    RSBRACKET       reduce using rule 106 (agregarConstFloat -> .)
    TO              reduce using rule 106 (agregarConstFloat -> .)
    DO              reduce using rule 106 (agregarConstFloat -> .)

    agregarConstFloat              shift and go to state 131

state 104

    (87) FACTOR -> C_CHAR . agregarConstChar
    (107) agregarConstChar -> .

    DIVIDE          reduce using rule 107 (agregarConstChar -> .)
    MULTIPLY        reduce using rule 107 (agregarConstChar -> .)
    PLUS            reduce using rule 107 (agregarConstChar -> .)
    MINUS           reduce using rule 107 (agregarConstChar -> .)
    RPAREN          reduce using rule 107 (agregarConstChar -> .)
    COMMA           reduce using rule 107 (agregarConstChar -> .)
    GREATER_OR_EQUAL reduce using rule 107 (agregarConstChar -> .)
    LESS_OR_EQUAL   reduce using rule 107 (agregarConstChar -> .)
    GREATER_THAN    reduce using rule 107 (agregarConstChar -> .)
    LESS_THAN       reduce using rule 107 (agregarConstChar -> .)
    IS_EQUAL        reduce using rule 107 (agregarConstChar -> .)
    NOT_EQUAL       reduce using rule 107 (agregarConstChar -> .)
    AND             reduce using rule 107 (agregarConstChar -> .)
    OR              reduce using rule 107 (agregarConstChar -> .)
    SEMICOLON       reduce using rule 107 (agregarConstChar -> .)
    RSBRACKET       reduce using rule 107 (agregarConstChar -> .)
    TO              reduce using rule 107 (agregarConstChar -> .)
    DO              reduce using rule 107 (agregarConstChar -> .)

    agregarConstChar               shift and go to state 132

state 105

    (88) FACTOR -> VARIABLE .

    DIVIDE          reduce using rule 88 (FACTOR -> VARIABLE .)
    MULTIPLY        reduce using rule 88 (FACTOR -> VARIABLE .)
    PLUS            reduce using rule 88 (FACTOR -> VARIABLE .)
    MINUS           reduce using rule 88 (FACTOR -> VARIABLE .)
    RPAREN          reduce using rule 88 (FACTOR -> VARIABLE .)
    COMMA           reduce using rule 88 (FACTOR -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 88 (FACTOR -> VARIABLE .)
    LESS_OR_EQUAL   reduce using rule 88 (FACTOR -> VARIABLE .)
    GREATER_THAN    reduce using rule 88 (FACTOR -> VARIABLE .)
    LESS_THAN       reduce using rule 88 (FACTOR -> VARIABLE .)
    IS_EQUAL        reduce using rule 88 (FACTOR -> VARIABLE .)
    NOT_EQUAL       reduce using rule 88 (FACTOR -> VARIABLE .)
    AND             reduce using rule 88 (FACTOR -> VARIABLE .)
    OR              reduce using rule 88 (FACTOR -> VARIABLE .)
    SEMICOLON       reduce using rule 88 (FACTOR -> VARIABLE .)
    RSBRACKET       reduce using rule 88 (FACTOR -> VARIABLE .)
    TO              reduce using rule 88 (FACTOR -> VARIABLE .)
    DO              reduce using rule 88 (FACTOR -> VARIABLE .)


state 106

    (89) FACTOR -> LLAMADAF .

    DIVIDE          reduce using rule 89 (FACTOR -> LLAMADAF .)
    MULTIPLY        reduce using rule 89 (FACTOR -> LLAMADAF .)
    PLUS            reduce using rule 89 (FACTOR -> LLAMADAF .)
    MINUS           reduce using rule 89 (FACTOR -> LLAMADAF .)
    RPAREN          reduce using rule 89 (FACTOR -> LLAMADAF .)
    COMMA           reduce using rule 89 (FACTOR -> LLAMADAF .)
    GREATER_OR_EQUAL reduce using rule 89 (FACTOR -> LLAMADAF .)
    LESS_OR_EQUAL   reduce using rule 89 (FACTOR -> LLAMADAF .)
    GREATER_THAN    reduce using rule 89 (FACTOR -> LLAMADAF .)
    LESS_THAN       reduce using rule 89 (FACTOR -> LLAMADAF .)
    IS_EQUAL        reduce using rule 89 (FACTOR -> LLAMADAF .)
    NOT_EQUAL       reduce using rule 89 (FACTOR -> LLAMADAF .)
    AND             reduce using rule 89 (FACTOR -> LLAMADAF .)
    OR              reduce using rule 89 (FACTOR -> LLAMADAF .)
    SEMICOLON       reduce using rule 89 (FACTOR -> LLAMADAF .)
    RSBRACKET       reduce using rule 89 (FACTOR -> LLAMADAF .)
    TO              reduce using rule 89 (FACTOR -> LLAMADAF .)
    DO              reduce using rule 89 (FACTOR -> LLAMADAF .)


state 107

    (30) VARIABLE -> NAME . agregarPilaOp E2
    (49) LLAMADAF -> NAME . verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso
    (120) agregarPilaOp -> .
    (95) verificarFunc -> .

    LSBRACKET       reduce using rule 120 (agregarPilaOp -> .)
    DIVIDE          reduce using rule 120 (agregarPilaOp -> .)
    MULTIPLY        reduce using rule 120 (agregarPilaOp -> .)
    PLUS            reduce using rule 120 (agregarPilaOp -> .)
    MINUS           reduce using rule 120 (agregarPilaOp -> .)
    RPAREN          reduce using rule 120 (agregarPilaOp -> .)
    COMMA           reduce using rule 120 (agregarPilaOp -> .)
    GREATER_OR_EQUAL reduce using rule 120 (agregarPilaOp -> .)
    LESS_OR_EQUAL   reduce using rule 120 (agregarPilaOp -> .)
    GREATER_THAN    reduce using rule 120 (agregarPilaOp -> .)
    LESS_THAN       reduce using rule 120 (agregarPilaOp -> .)
    IS_EQUAL        reduce using rule 120 (agregarPilaOp -> .)
    NOT_EQUAL       reduce using rule 120 (agregarPilaOp -> .)
    AND             reduce using rule 120 (agregarPilaOp -> .)
    OR              reduce using rule 120 (agregarPilaOp -> .)
    SEMICOLON       reduce using rule 120 (agregarPilaOp -> .)
    RSBRACKET       reduce using rule 120 (agregarPilaOp -> .)
    TO              reduce using rule 120 (agregarPilaOp -> .)
    DO              reduce using rule 120 (agregarPilaOp -> .)
    LPAREN          reduce using rule 95 (verificarFunc -> .)

    agregarPilaOp                  shift and go to state 75
    verificarFunc                  shift and go to state 133

state 108

    (51) LECTURA -> READ LPAREN V3 . RPAREN SEMICOLON

    RPAREN          shift and go to state 134


state 109

    (54) ESCRITURA -> PRINT LPAREN E3 . RPAREN SEMICOLON

    RPAREN          shift and go to state 135


state 110

    (55) E3 -> S_EXP . popPrint
    (56) E3 -> S_EXP . popPrint COMMA E3
    (121) popPrint -> .

    COMMA           reduce using rule 121 (popPrint -> .)
    RPAREN          reduce using rule 121 (popPrint -> .)

    popPrint                       shift and go to state 136

state 111

    (74) S_EXP -> C_STRING . agregarConstString
    (108) agregarConstString -> .

    COMMA           reduce using rule 108 (agregarConstString -> .)
    RPAREN          reduce using rule 108 (agregarConstString -> .)

    agregarConstString             shift and go to state 137

state 112

    (75) S_EXP -> EXP .

    COMMA           reduce using rule 75 (S_EXP -> EXP .)
    RPAREN          reduce using rule 75 (S_EXP -> EXP .)


state 113

    (57) CONDICION -> IF LPAREN H_EXP . RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto

    RPAREN          shift and go to state 138


state 114

    (62) H_EXP -> T_EXP .
    (63) H_EXP -> T_EXP . OR H_EXP

    RPAREN          reduce using rule 62 (H_EXP -> T_EXP .)
    OR              shift and go to state 139


state 115

    (64) T_EXP -> G_EXP .
    (65) T_EXP -> G_EXP . AND T_EXP

    OR              reduce using rule 64 (T_EXP -> G_EXP .)
    RPAREN          reduce using rule 64 (T_EXP -> G_EXP .)
    AND             shift and go to state 140


state 116

    (66) G_EXP -> EXP . B popBool
    (67) B -> . GREATER_OR_EQUAL meterOperador G_EXP
    (68) B -> . LESS_OR_EQUAL meterOperador G_EXP
    (69) B -> . GREATER_THAN meterOperador G_EXP
    (70) B -> . LESS_THAN meterOperador G_EXP
    (71) B -> . IS_EQUAL meterOperador G_EXP
    (72) B -> . NOT_EQUAL meterOperador G_EXP
    (73) B -> . empty
    (90) empty -> .

    GREATER_OR_EQUAL shift and go to state 142
    LESS_OR_EQUAL   shift and go to state 143
    GREATER_THAN    shift and go to state 144
    LESS_THAN       shift and go to state 145
    IS_EQUAL        shift and go to state 146
    NOT_EQUAL       shift and go to state 147
    AND             reduce using rule 90 (empty -> .)
    OR              reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)

    B                              shift and go to state 141
    empty                          shift and go to state 148

state 117

    (60) CICLO_W -> WHILE agregarWhile LPAREN . H_EXP RPAREN DO gotoIf CUERPO terminarWhile
    (62) H_EXP -> . T_EXP
    (63) H_EXP -> . T_EXP OR H_EXP
    (64) T_EXP -> . G_EXP
    (65) T_EXP -> . G_EXP AND T_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    H_EXP                          shift and go to state 149
    T_EXP                          shift and go to state 114
    G_EXP                          shift and go to state 115
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 118

    (61) CICLO_F -> FROM agregarWhile VARIABLE . agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (102) agregarFrom -> .

    EQUALS          reduce using rule 102 (agregarFrom -> .)

    agregarFrom                    shift and go to state 150

state 119

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable . agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc
    (136) agregarVariables -> .

    RPAREN          reduce using rule 136 (agregarVariables -> .)

    agregarVariables               shift and go to state 151

state 120

    (13) PARAMS -> TIPO NAME . agregarVarLista P1
    (139) agregarVarLista -> .

    COMMA           reduce using rule 139 (agregarVarLista -> .)
    RPAREN          reduce using rule 139 (agregarVarLista -> .)

    agregarVarLista                shift and go to state 152

state 121

    (52) V3 -> VARIABLE popRead COMMA V3 .

    FUNC            reduce using rule 52 (V3 -> VARIABLE popRead COMMA V3 .)
    MAIN            reduce using rule 52 (V3 -> VARIABLE popRead COMMA V3 .)
    LBRACKET        reduce using rule 52 (V3 -> VARIABLE popRead COMMA V3 .)
    RPAREN          reduce using rule 52 (V3 -> VARIABLE popRead COMMA V3 .)


state 122

    (31) E2 -> LSBRACKET guardarArreglo . meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso
    (118) meterFondoFalso -> .

    LPAREN          reduce using rule 118 (meterFondoFalso -> .)
    C_INT           reduce using rule 118 (meterFondoFalso -> .)
    C_FLOAT         reduce using rule 118 (meterFondoFalso -> .)
    C_CHAR          reduce using rule 118 (meterFondoFalso -> .)
    NAME            reduce using rule 118 (meterFondoFalso -> .)

    meterFondoFalso                shift and go to state 153

state 123

    (34) E2Der -> LSBRACKET C_INT declararArray . RSBRACKET

    RSBRACKET       shift and go to state 154


state 124

    (44) ASIGNACION -> VARIABLE EQUALS meterOperador EXP . popIgual SEMICOLON
    (125) popIgual -> .

    SEMICOLON       reduce using rule 125 (popIgual -> .)

    popIgual                       shift and go to state 155

state 125

    (45) LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso . generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON
    (94) generarEra -> .

    LPAREN          reduce using rule 94 (generarEra -> .)
    C_INT           reduce using rule 94 (generarEra -> .)
    C_FLOAT         reduce using rule 94 (generarEra -> .)
    C_CHAR          reduce using rule 94 (generarEra -> .)
    NAME            reduce using rule 94 (generarEra -> .)
    RPAREN          reduce using rule 94 (generarEra -> .)

    generarEra                     shift and go to state 156

state 126

    (84) FACTOR -> LPAREN meterFondoFalso . H_EXP RPAREN quitarFondoFalso
    (62) H_EXP -> . T_EXP
    (63) H_EXP -> . T_EXP OR H_EXP
    (64) T_EXP -> . G_EXP
    (65) T_EXP -> . G_EXP AND T_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    H_EXP                          shift and go to state 157
    T_EXP                          shift and go to state 114
    G_EXP                          shift and go to state 115
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 127

    (50) RETORNO -> RETURN LPAREN EXP popReturn . RPAREN SEMICOLON

    RPAREN          shift and go to state 158


state 128

    (76) EXP -> TERMINO popSumaResta . T
    (77) T -> . PLUS meterOperador EXP
    (78) T -> . MINUS meterOperador EXP
    (79) T -> . empty
    (90) empty -> .

    PLUS            shift and go to state 160
    MINUS           shift and go to state 161
    RPAREN          reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 90 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 90 (empty -> .)
    GREATER_THAN    reduce using rule 90 (empty -> .)
    LESS_THAN       reduce using rule 90 (empty -> .)
    IS_EQUAL        reduce using rule 90 (empty -> .)
    NOT_EQUAL       reduce using rule 90 (empty -> .)
    AND             reduce using rule 90 (empty -> .)
    OR              reduce using rule 90 (empty -> .)
    SEMICOLON       reduce using rule 90 (empty -> .)
    RSBRACKET       reduce using rule 90 (empty -> .)
    TO              reduce using rule 90 (empty -> .)
    DO              reduce using rule 90 (empty -> .)

    T                              shift and go to state 159
    empty                          shift and go to state 162

state 129

    (80) TERMINO -> FACTOR popMultDiv . F2
    (81) F2 -> . DIVIDE meterOperador TERMINO
    (82) F2 -> . MULTIPLY meterOperador TERMINO
    (83) F2 -> . empty
    (90) empty -> .

    DIVIDE          shift and go to state 164
    MULTIPLY        shift and go to state 165
    PLUS            reduce using rule 90 (empty -> .)
    MINUS           reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)
    GREATER_OR_EQUAL reduce using rule 90 (empty -> .)
    LESS_OR_EQUAL   reduce using rule 90 (empty -> .)
    GREATER_THAN    reduce using rule 90 (empty -> .)
    LESS_THAN       reduce using rule 90 (empty -> .)
    IS_EQUAL        reduce using rule 90 (empty -> .)
    NOT_EQUAL       reduce using rule 90 (empty -> .)
    AND             reduce using rule 90 (empty -> .)
    OR              reduce using rule 90 (empty -> .)
    SEMICOLON       reduce using rule 90 (empty -> .)
    RSBRACKET       reduce using rule 90 (empty -> .)
    TO              reduce using rule 90 (empty -> .)
    DO              reduce using rule 90 (empty -> .)

    F2                             shift and go to state 163
    empty                          shift and go to state 166

state 130

    (85) FACTOR -> C_INT agregarConstInt .

    DIVIDE          reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    MULTIPLY        reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    PLUS            reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    MINUS           reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    RPAREN          reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    COMMA           reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    GREATER_OR_EQUAL reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    LESS_OR_EQUAL   reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    GREATER_THAN    reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    LESS_THAN       reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    IS_EQUAL        reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    NOT_EQUAL       reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    AND             reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    OR              reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    SEMICOLON       reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    RSBRACKET       reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    TO              reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)
    DO              reduce using rule 85 (FACTOR -> C_INT agregarConstInt .)


state 131

    (86) FACTOR -> C_FLOAT agregarConstFloat .

    DIVIDE          reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    MULTIPLY        reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    PLUS            reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    MINUS           reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    RPAREN          reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    COMMA           reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    GREATER_OR_EQUAL reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    LESS_OR_EQUAL   reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    GREATER_THAN    reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    LESS_THAN       reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    IS_EQUAL        reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    NOT_EQUAL       reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    AND             reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    OR              reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    SEMICOLON       reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    RSBRACKET       reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    TO              reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)
    DO              reduce using rule 86 (FACTOR -> C_FLOAT agregarConstFloat .)


state 132

    (87) FACTOR -> C_CHAR agregarConstChar .

    DIVIDE          reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    MULTIPLY        reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    PLUS            reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    MINUS           reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    RPAREN          reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    COMMA           reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    GREATER_OR_EQUAL reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    LESS_OR_EQUAL   reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    GREATER_THAN    reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    LESS_THAN       reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    IS_EQUAL        reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    NOT_EQUAL       reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    AND             reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    OR              reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    SEMICOLON       reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    RSBRACKET       reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    TO              reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)
    DO              reduce using rule 87 (FACTOR -> C_CHAR agregarConstChar .)


state 133

    (49) LLAMADAF -> NAME verificarFunc . LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 167


state 134

    (51) LECTURA -> READ LPAREN V3 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 168


state 135

    (54) ESCRITURA -> PRINT LPAREN E3 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 169


state 136

    (55) E3 -> S_EXP popPrint .
    (56) E3 -> S_EXP popPrint . COMMA E3

    RPAREN          reduce using rule 55 (E3 -> S_EXP popPrint .)
    COMMA           shift and go to state 170


state 137

    (74) S_EXP -> C_STRING agregarConstString .

    COMMA           reduce using rule 74 (S_EXP -> C_STRING agregarConstString .)
    RPAREN          reduce using rule 74 (S_EXP -> C_STRING agregarConstString .)


state 138

    (57) CONDICION -> IF LPAREN H_EXP RPAREN . gotoIf THEN CUERPO ELSE1 terminarGoto
    (113) gotoIf -> .

    THEN            reduce using rule 113 (gotoIf -> .)

    gotoIf                         shift and go to state 171

state 139

    (63) H_EXP -> T_EXP OR . H_EXP
    (62) H_EXP -> . T_EXP
    (63) H_EXP -> . T_EXP OR H_EXP
    (64) T_EXP -> . G_EXP
    (65) T_EXP -> . G_EXP AND T_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    T_EXP                          shift and go to state 114
    H_EXP                          shift and go to state 172
    G_EXP                          shift and go to state 115
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 140

    (65) T_EXP -> G_EXP AND . T_EXP
    (64) T_EXP -> . G_EXP
    (65) T_EXP -> . G_EXP AND T_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    G_EXP                          shift and go to state 115
    T_EXP                          shift and go to state 173
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 141

    (66) G_EXP -> EXP B . popBool
    (124) popBool -> .

    AND             reduce using rule 124 (popBool -> .)
    OR              reduce using rule 124 (popBool -> .)
    RPAREN          reduce using rule 124 (popBool -> .)

    popBool                        shift and go to state 174

state 142

    (67) B -> GREATER_OR_EQUAL . meterOperador G_EXP
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 175

state 143

    (68) B -> LESS_OR_EQUAL . meterOperador G_EXP
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 176

state 144

    (69) B -> GREATER_THAN . meterOperador G_EXP
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 177

state 145

    (70) B -> LESS_THAN . meterOperador G_EXP
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 178

state 146

    (71) B -> IS_EQUAL . meterOperador G_EXP
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 179

state 147

    (72) B -> NOT_EQUAL . meterOperador G_EXP
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 180

state 148

    (73) B -> empty .

    AND             reduce using rule 73 (B -> empty .)
    OR              reduce using rule 73 (B -> empty .)
    RPAREN          reduce using rule 73 (B -> empty .)


state 149

    (60) CICLO_W -> WHILE agregarWhile LPAREN H_EXP . RPAREN DO gotoIf CUERPO terminarWhile

    RPAREN          shift and go to state 181


state 150

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom . EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile

    EQUALS          shift and go to state 182


state 151

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables . RPAREN V4 agregarLocalVar CUERPO terminarFunc

    RPAREN          shift and go to state 183


state 152

    (13) PARAMS -> TIPO NAME agregarVarLista . P1
    (14) P1 -> . P2
    (15) P1 -> . empty
    (16) P2 -> . COMMA PARAMS P1
    (90) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 187
    RPAREN          reduce using rule 90 (empty -> .)

  ! COMMA           [ reduce using rule 90 (empty -> .) ]

    P1                             shift and go to state 184
    P2                             shift and go to state 185
    empty                          shift and go to state 186

state 153

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso . EXP RSBRACKET verificarArreglo quitarFondoFalso
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    EXP                            shift and go to state 188
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 154

    (34) E2Der -> LSBRACKET C_INT declararArray RSBRACKET .

    COMMA           reduce using rule 34 (E2Der -> LSBRACKET C_INT declararArray RSBRACKET .)
    SEMICOLON       reduce using rule 34 (E2Der -> LSBRACKET C_INT declararArray RSBRACKET .)


state 155

    (44) ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual . SEMICOLON

    SEMICOLON       shift and go to state 189


state 156

    (45) LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra . E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON
    (46) E4 -> . EXP generarParam
    (47) E4 -> . EXP generarParam COMMA E4
    (48) E4 -> . empty
    (76) EXP -> . TERMINO popSumaResta T
    (90) empty -> .
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    RPAREN          reduce using rule 90 (empty -> .)
    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    E4                             shift and go to state 190
    EXP                            shift and go to state 191
    empty                          shift and go to state 192
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 157

    (84) FACTOR -> LPAREN meterFondoFalso H_EXP . RPAREN quitarFondoFalso

    RPAREN          shift and go to state 193


state 158

    (50) RETORNO -> RETURN LPAREN EXP popReturn RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 194


state 159

    (76) EXP -> TERMINO popSumaResta T .

    RPAREN          reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    COMMA           reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    GREATER_OR_EQUAL reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    LESS_OR_EQUAL   reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    GREATER_THAN    reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    LESS_THAN       reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    IS_EQUAL        reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    NOT_EQUAL       reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    AND             reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    OR              reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    SEMICOLON       reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    RSBRACKET       reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    TO              reduce using rule 76 (EXP -> TERMINO popSumaResta T .)
    DO              reduce using rule 76 (EXP -> TERMINO popSumaResta T .)


state 160

    (77) T -> PLUS . meterOperador EXP
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 195

state 161

    (78) T -> MINUS . meterOperador EXP
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 196

state 162

    (79) T -> empty .

    RPAREN          reduce using rule 79 (T -> empty .)
    COMMA           reduce using rule 79 (T -> empty .)
    GREATER_OR_EQUAL reduce using rule 79 (T -> empty .)
    LESS_OR_EQUAL   reduce using rule 79 (T -> empty .)
    GREATER_THAN    reduce using rule 79 (T -> empty .)
    LESS_THAN       reduce using rule 79 (T -> empty .)
    IS_EQUAL        reduce using rule 79 (T -> empty .)
    NOT_EQUAL       reduce using rule 79 (T -> empty .)
    AND             reduce using rule 79 (T -> empty .)
    OR              reduce using rule 79 (T -> empty .)
    SEMICOLON       reduce using rule 79 (T -> empty .)
    RSBRACKET       reduce using rule 79 (T -> empty .)
    TO              reduce using rule 79 (T -> empty .)
    DO              reduce using rule 79 (T -> empty .)


state 163

    (80) TERMINO -> FACTOR popMultDiv F2 .

    PLUS            reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    MINUS           reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    RPAREN          reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    COMMA           reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    GREATER_OR_EQUAL reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    LESS_OR_EQUAL   reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    GREATER_THAN    reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    LESS_THAN       reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    IS_EQUAL        reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    NOT_EQUAL       reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    AND             reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    OR              reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    SEMICOLON       reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    RSBRACKET       reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    TO              reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)
    DO              reduce using rule 80 (TERMINO -> FACTOR popMultDiv F2 .)


state 164

    (81) F2 -> DIVIDE . meterOperador TERMINO
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 197

state 165

    (82) F2 -> MULTIPLY . meterOperador TERMINO
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 198

state 166

    (83) F2 -> empty .

    PLUS            reduce using rule 83 (F2 -> empty .)
    MINUS           reduce using rule 83 (F2 -> empty .)
    RPAREN          reduce using rule 83 (F2 -> empty .)
    COMMA           reduce using rule 83 (F2 -> empty .)
    GREATER_OR_EQUAL reduce using rule 83 (F2 -> empty .)
    LESS_OR_EQUAL   reduce using rule 83 (F2 -> empty .)
    GREATER_THAN    reduce using rule 83 (F2 -> empty .)
    LESS_THAN       reduce using rule 83 (F2 -> empty .)
    IS_EQUAL        reduce using rule 83 (F2 -> empty .)
    NOT_EQUAL       reduce using rule 83 (F2 -> empty .)
    AND             reduce using rule 83 (F2 -> empty .)
    OR              reduce using rule 83 (F2 -> empty .)
    SEMICOLON       reduce using rule 83 (F2 -> empty .)
    RSBRACKET       reduce using rule 83 (F2 -> empty .)
    TO              reduce using rule 83 (F2 -> empty .)
    DO              reduce using rule 83 (F2 -> empty .)


state 167

    (49) LLAMADAF -> NAME verificarFunc LPAREN . meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso
    (118) meterFondoFalso -> .

    LPAREN          reduce using rule 118 (meterFondoFalso -> .)
    C_INT           reduce using rule 118 (meterFondoFalso -> .)
    C_FLOAT         reduce using rule 118 (meterFondoFalso -> .)
    C_CHAR          reduce using rule 118 (meterFondoFalso -> .)
    NAME            reduce using rule 118 (meterFondoFalso -> .)
    RPAREN          reduce using rule 118 (meterFondoFalso -> .)

    meterFondoFalso                shift and go to state 199

state 168

    (51) LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .

    NAME            reduce using rule 51 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RETURN          reduce using rule 51 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    READ            reduce using rule 51 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    PRINT           reduce using rule 51 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    IF              reduce using rule 51 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    WHILE           reduce using rule 51 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    FROM            reduce using rule 51 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 51 (LECTURA -> READ LPAREN V3 RPAREN SEMICOLON .)


state 169

    (54) ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .

    NAME            reduce using rule 54 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    RETURN          reduce using rule 54 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    READ            reduce using rule 54 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    PRINT           reduce using rule 54 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    IF              reduce using rule 54 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    WHILE           reduce using rule 54 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    FROM            reduce using rule 54 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 54 (ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON .)


state 170

    (56) E3 -> S_EXP popPrint COMMA . E3
    (55) E3 -> . S_EXP popPrint
    (56) E3 -> . S_EXP popPrint COMMA E3
    (74) S_EXP -> . C_STRING agregarConstString
    (75) S_EXP -> . EXP
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    C_STRING        shift and go to state 111
    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    S_EXP                          shift and go to state 110
    E3                             shift and go to state 200
    EXP                            shift and go to state 112
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 171

    (57) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf . THEN CUERPO ELSE1 terminarGoto

    THEN            shift and go to state 201


state 172

    (63) H_EXP -> T_EXP OR H_EXP .

    RPAREN          reduce using rule 63 (H_EXP -> T_EXP OR H_EXP .)


state 173

    (65) T_EXP -> G_EXP AND T_EXP .

    OR              reduce using rule 65 (T_EXP -> G_EXP AND T_EXP .)
    RPAREN          reduce using rule 65 (T_EXP -> G_EXP AND T_EXP .)


state 174

    (66) G_EXP -> EXP B popBool .

    AND             reduce using rule 66 (G_EXP -> EXP B popBool .)
    OR              reduce using rule 66 (G_EXP -> EXP B popBool .)
    RPAREN          reduce using rule 66 (G_EXP -> EXP B popBool .)


state 175

    (67) B -> GREATER_OR_EQUAL meterOperador . G_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    G_EXP                          shift and go to state 202
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 176

    (68) B -> LESS_OR_EQUAL meterOperador . G_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    G_EXP                          shift and go to state 203
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 177

    (69) B -> GREATER_THAN meterOperador . G_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    G_EXP                          shift and go to state 204
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 178

    (70) B -> LESS_THAN meterOperador . G_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    G_EXP                          shift and go to state 205
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 179

    (71) B -> IS_EQUAL meterOperador . G_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    G_EXP                          shift and go to state 206
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 180

    (72) B -> NOT_EQUAL meterOperador . G_EXP
    (66) G_EXP -> . EXP B popBool
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    G_EXP                          shift and go to state 207
    EXP                            shift and go to state 116
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 181

    (60) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN . DO gotoIf CUERPO terminarWhile

    DO              shift and go to state 208


state 182

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS . meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (132) meterOperador -> .

    LPAREN          reduce using rule 132 (meterOperador -> .)
    C_INT           reduce using rule 132 (meterOperador -> .)
    C_FLOAT         reduce using rule 132 (meterOperador -> .)
    C_CHAR          reduce using rule 132 (meterOperador -> .)
    NAME            reduce using rule 132 (meterOperador -> .)

    meterOperador                  shift and go to state 209

state 183

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN . V4 agregarLocalVar CUERPO terminarFunc
    (11) V4 -> . VARS
    (12) V4 -> . empty
    (4) VARS -> . borrarListaVar VAR V1
    (90) empty -> .
    (140) borrarListaVar -> .

    LBRACKET        reduce using rule 90 (empty -> .)
    VAR             reduce using rule 140 (borrarListaVar -> .)

    borrarListaVar                 shift and go to state 8
    V4                             shift and go to state 210
    VARS                           shift and go to state 211
    empty                          shift and go to state 212

state 184

    (13) PARAMS -> TIPO NAME agregarVarLista P1 .

    RPAREN          reduce using rule 13 (PARAMS -> TIPO NAME agregarVarLista P1 .)
    COMMA           reduce using rule 13 (PARAMS -> TIPO NAME agregarVarLista P1 .)


state 185

    (14) P1 -> P2 .

    COMMA           reduce using rule 14 (P1 -> P2 .)
    RPAREN          reduce using rule 14 (P1 -> P2 .)


state 186

    (15) P1 -> empty .

    COMMA           reduce using rule 15 (P1 -> empty .)
    RPAREN          reduce using rule 15 (P1 -> empty .)


state 187

    (16) P2 -> COMMA . PARAMS P1
    (13) PARAMS -> . TIPO NAME agregarVarLista P1
    (22) TIPO -> . INT
    (23) TIPO -> . FLOAT
    (24) TIPO -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    PARAMS                         shift and go to state 213
    TIPO                           shift and go to state 90

state 188

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP . RSBRACKET verificarArreglo quitarFondoFalso

    RSBRACKET       shift and go to state 214


state 189

    (44) ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .

    NAME            reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    RETURN          reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    READ            reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    PRINT           reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    IF              reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    WHILE           reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    FROM            reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)
    RBRACKET        reduce using rule 44 (ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON .)


state 190

    (45) LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 . verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON
    (92) verificarParam -> .

    RPAREN          reduce using rule 92 (verificarParam -> .)

    verificarParam                 shift and go to state 215

state 191

    (46) E4 -> EXP . generarParam
    (47) E4 -> EXP . generarParam COMMA E4
    (93) generarParam -> .

    COMMA           reduce using rule 93 (generarParam -> .)
    RPAREN          reduce using rule 93 (generarParam -> .)

    generarParam                   shift and go to state 216

state 192

    (48) E4 -> empty .

    RPAREN          reduce using rule 48 (E4 -> empty .)


state 193

    (84) FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN . quitarFondoFalso
    (119) quitarFondoFalso -> .

    DIVIDE          reduce using rule 119 (quitarFondoFalso -> .)
    MULTIPLY        reduce using rule 119 (quitarFondoFalso -> .)
    PLUS            reduce using rule 119 (quitarFondoFalso -> .)
    MINUS           reduce using rule 119 (quitarFondoFalso -> .)
    RPAREN          reduce using rule 119 (quitarFondoFalso -> .)
    COMMA           reduce using rule 119 (quitarFondoFalso -> .)
    GREATER_OR_EQUAL reduce using rule 119 (quitarFondoFalso -> .)
    LESS_OR_EQUAL   reduce using rule 119 (quitarFondoFalso -> .)
    GREATER_THAN    reduce using rule 119 (quitarFondoFalso -> .)
    LESS_THAN       reduce using rule 119 (quitarFondoFalso -> .)
    IS_EQUAL        reduce using rule 119 (quitarFondoFalso -> .)
    NOT_EQUAL       reduce using rule 119 (quitarFondoFalso -> .)
    AND             reduce using rule 119 (quitarFondoFalso -> .)
    OR              reduce using rule 119 (quitarFondoFalso -> .)
    SEMICOLON       reduce using rule 119 (quitarFondoFalso -> .)
    RSBRACKET       reduce using rule 119 (quitarFondoFalso -> .)
    TO              reduce using rule 119 (quitarFondoFalso -> .)
    DO              reduce using rule 119 (quitarFondoFalso -> .)

    quitarFondoFalso               shift and go to state 217

state 194

    (50) RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .

    NAME            reduce using rule 50 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    READ            reduce using rule 50 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    IF              reduce using rule 50 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    FROM            reduce using rule 50 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 50 (RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON .)


state 195

    (77) T -> PLUS meterOperador . EXP
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    EXP                            shift and go to state 218
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 196

    (78) T -> MINUS meterOperador . EXP
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    EXP                            shift and go to state 219
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 197

    (81) F2 -> DIVIDE meterOperador . TERMINO
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    TERMINO                        shift and go to state 220
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 198

    (82) F2 -> MULTIPLY meterOperador . TERMINO
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    TERMINO                        shift and go to state 221
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 199

    (49) LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso . generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso
    (94) generarEra -> .

    LPAREN          reduce using rule 94 (generarEra -> .)
    C_INT           reduce using rule 94 (generarEra -> .)
    C_FLOAT         reduce using rule 94 (generarEra -> .)
    C_CHAR          reduce using rule 94 (generarEra -> .)
    NAME            reduce using rule 94 (generarEra -> .)
    RPAREN          reduce using rule 94 (generarEra -> .)

    generarEra                     shift and go to state 222

state 200

    (56) E3 -> S_EXP popPrint COMMA E3 .

    RPAREN          reduce using rule 56 (E3 -> S_EXP popPrint COMMA E3 .)


state 201

    (57) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN . CUERPO ELSE1 terminarGoto
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 223

state 202

    (67) B -> GREATER_OR_EQUAL meterOperador G_EXP .

    AND             reduce using rule 67 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 67 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 67 (B -> GREATER_OR_EQUAL meterOperador G_EXP .)


state 203

    (68) B -> LESS_OR_EQUAL meterOperador G_EXP .

    AND             reduce using rule 68 (B -> LESS_OR_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 68 (B -> LESS_OR_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 68 (B -> LESS_OR_EQUAL meterOperador G_EXP .)


state 204

    (69) B -> GREATER_THAN meterOperador G_EXP .

    AND             reduce using rule 69 (B -> GREATER_THAN meterOperador G_EXP .)
    OR              reduce using rule 69 (B -> GREATER_THAN meterOperador G_EXP .)
    RPAREN          reduce using rule 69 (B -> GREATER_THAN meterOperador G_EXP .)


state 205

    (70) B -> LESS_THAN meterOperador G_EXP .

    AND             reduce using rule 70 (B -> LESS_THAN meterOperador G_EXP .)
    OR              reduce using rule 70 (B -> LESS_THAN meterOperador G_EXP .)
    RPAREN          reduce using rule 70 (B -> LESS_THAN meterOperador G_EXP .)


state 206

    (71) B -> IS_EQUAL meterOperador G_EXP .

    AND             reduce using rule 71 (B -> IS_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 71 (B -> IS_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 71 (B -> IS_EQUAL meterOperador G_EXP .)


state 207

    (72) B -> NOT_EQUAL meterOperador G_EXP .

    AND             reduce using rule 72 (B -> NOT_EQUAL meterOperador G_EXP .)
    OR              reduce using rule 72 (B -> NOT_EQUAL meterOperador G_EXP .)
    RPAREN          reduce using rule 72 (B -> NOT_EQUAL meterOperador G_EXP .)


state 208

    (60) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO . gotoIf CUERPO terminarWhile
    (113) gotoIf -> .

    LBRACKET        reduce using rule 113 (gotoIf -> .)

    gotoIf                         shift and go to state 224

state 209

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador . EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    VARIABLE                       shift and go to state 105
    EXP                            shift and go to state 225
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    LLAMADAF                       shift and go to state 106

state 210

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 . agregarLocalVar CUERPO terminarFunc
    (97) agregarLocalVar -> .

    LBRACKET        reduce using rule 97 (agregarLocalVar -> .)

    agregarLocalVar                shift and go to state 226

state 211

    (11) V4 -> VARS .

    LBRACKET        reduce using rule 11 (V4 -> VARS .)


state 212

    (12) V4 -> empty .

    LBRACKET        reduce using rule 12 (V4 -> empty .)


state 213

    (16) P2 -> COMMA PARAMS . P1
    (14) P1 -> . P2
    (15) P1 -> . empty
    (16) P2 -> . COMMA PARAMS P1
    (90) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 187
    RPAREN          reduce using rule 90 (empty -> .)

  ! COMMA           [ reduce using rule 90 (empty -> .) ]

    P1                             shift and go to state 227
    P2                             shift and go to state 185
    empty                          shift and go to state 186

state 214

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET . verificarArreglo quitarFondoFalso
    (100) verificarArreglo -> .

    COMMA           reduce using rule 100 (verificarArreglo -> .)
    FUNC            reduce using rule 100 (verificarArreglo -> .)
    MAIN            reduce using rule 100 (verificarArreglo -> .)
    LBRACKET        reduce using rule 100 (verificarArreglo -> .)
    RPAREN          reduce using rule 100 (verificarArreglo -> .)
    EQUALS          reduce using rule 100 (verificarArreglo -> .)
    DIVIDE          reduce using rule 100 (verificarArreglo -> .)
    MULTIPLY        reduce using rule 100 (verificarArreglo -> .)
    PLUS            reduce using rule 100 (verificarArreglo -> .)
    MINUS           reduce using rule 100 (verificarArreglo -> .)
    GREATER_OR_EQUAL reduce using rule 100 (verificarArreglo -> .)
    LESS_OR_EQUAL   reduce using rule 100 (verificarArreglo -> .)
    GREATER_THAN    reduce using rule 100 (verificarArreglo -> .)
    LESS_THAN       reduce using rule 100 (verificarArreglo -> .)
    IS_EQUAL        reduce using rule 100 (verificarArreglo -> .)
    NOT_EQUAL       reduce using rule 100 (verificarArreglo -> .)
    AND             reduce using rule 100 (verificarArreglo -> .)
    OR              reduce using rule 100 (verificarArreglo -> .)
    SEMICOLON       reduce using rule 100 (verificarArreglo -> .)
    RSBRACKET       reduce using rule 100 (verificarArreglo -> .)
    TO              reduce using rule 100 (verificarArreglo -> .)
    DO              reduce using rule 100 (verificarArreglo -> .)

    verificarArreglo               shift and go to state 228

state 215

    (45) LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam . RPAREN quitarFondoFalso generarGosub SEMICOLON

    RPAREN          shift and go to state 229


state 216

    (46) E4 -> EXP generarParam .
    (47) E4 -> EXP generarParam . COMMA E4

    RPAREN          reduce using rule 46 (E4 -> EXP generarParam .)
    COMMA           shift and go to state 230


state 217

    (84) FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .

    DIVIDE          reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    MULTIPLY        reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    PLUS            reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    MINUS           reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RPAREN          reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    COMMA           reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    GREATER_OR_EQUAL reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    LESS_OR_EQUAL   reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    GREATER_THAN    reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    LESS_THAN       reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    IS_EQUAL        reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    NOT_EQUAL       reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    AND             reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    OR              reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    SEMICOLON       reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    RSBRACKET       reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    TO              reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)
    DO              reduce using rule 84 (FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso .)


state 218

    (77) T -> PLUS meterOperador EXP .

    RPAREN          reduce using rule 77 (T -> PLUS meterOperador EXP .)
    COMMA           reduce using rule 77 (T -> PLUS meterOperador EXP .)
    GREATER_OR_EQUAL reduce using rule 77 (T -> PLUS meterOperador EXP .)
    LESS_OR_EQUAL   reduce using rule 77 (T -> PLUS meterOperador EXP .)
    GREATER_THAN    reduce using rule 77 (T -> PLUS meterOperador EXP .)
    LESS_THAN       reduce using rule 77 (T -> PLUS meterOperador EXP .)
    IS_EQUAL        reduce using rule 77 (T -> PLUS meterOperador EXP .)
    NOT_EQUAL       reduce using rule 77 (T -> PLUS meterOperador EXP .)
    AND             reduce using rule 77 (T -> PLUS meterOperador EXP .)
    OR              reduce using rule 77 (T -> PLUS meterOperador EXP .)
    SEMICOLON       reduce using rule 77 (T -> PLUS meterOperador EXP .)
    RSBRACKET       reduce using rule 77 (T -> PLUS meterOperador EXP .)
    TO              reduce using rule 77 (T -> PLUS meterOperador EXP .)
    DO              reduce using rule 77 (T -> PLUS meterOperador EXP .)


state 219

    (78) T -> MINUS meterOperador EXP .

    RPAREN          reduce using rule 78 (T -> MINUS meterOperador EXP .)
    COMMA           reduce using rule 78 (T -> MINUS meterOperador EXP .)
    GREATER_OR_EQUAL reduce using rule 78 (T -> MINUS meterOperador EXP .)
    LESS_OR_EQUAL   reduce using rule 78 (T -> MINUS meterOperador EXP .)
    GREATER_THAN    reduce using rule 78 (T -> MINUS meterOperador EXP .)
    LESS_THAN       reduce using rule 78 (T -> MINUS meterOperador EXP .)
    IS_EQUAL        reduce using rule 78 (T -> MINUS meterOperador EXP .)
    NOT_EQUAL       reduce using rule 78 (T -> MINUS meterOperador EXP .)
    AND             reduce using rule 78 (T -> MINUS meterOperador EXP .)
    OR              reduce using rule 78 (T -> MINUS meterOperador EXP .)
    SEMICOLON       reduce using rule 78 (T -> MINUS meterOperador EXP .)
    RSBRACKET       reduce using rule 78 (T -> MINUS meterOperador EXP .)
    TO              reduce using rule 78 (T -> MINUS meterOperador EXP .)
    DO              reduce using rule 78 (T -> MINUS meterOperador EXP .)


state 220

    (81) F2 -> DIVIDE meterOperador TERMINO .

    PLUS            reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    MINUS           reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    RPAREN          reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    COMMA           reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    GREATER_OR_EQUAL reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    LESS_OR_EQUAL   reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    GREATER_THAN    reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    LESS_THAN       reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    IS_EQUAL        reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    NOT_EQUAL       reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    AND             reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    OR              reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    SEMICOLON       reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    RSBRACKET       reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    TO              reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)
    DO              reduce using rule 81 (F2 -> DIVIDE meterOperador TERMINO .)


state 221

    (82) F2 -> MULTIPLY meterOperador TERMINO .

    PLUS            reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    MINUS           reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    RPAREN          reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    COMMA           reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    GREATER_OR_EQUAL reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    LESS_OR_EQUAL   reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    GREATER_THAN    reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    LESS_THAN       reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    IS_EQUAL        reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    NOT_EQUAL       reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    AND             reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    OR              reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    SEMICOLON       reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    RSBRACKET       reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    TO              reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)
    DO              reduce using rule 82 (F2 -> MULTIPLY meterOperador TERMINO .)


state 222

    (49) LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra . E4 verificarParam RPAREN generarGosub quitarFondoFalso
    (46) E4 -> . EXP generarParam
    (47) E4 -> . EXP generarParam COMMA E4
    (48) E4 -> . empty
    (76) EXP -> . TERMINO popSumaResta T
    (90) empty -> .
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    RPAREN          reduce using rule 90 (empty -> .)
    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    E4                             shift and go to state 231
    EXP                            shift and go to state 191
    empty                          shift and go to state 192
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 223

    (57) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO . ELSE1 terminarGoto
    (58) ELSE1 -> . ELSE gotoElse CUERPO
    (59) ELSE1 -> . empty
    (90) empty -> .

    ELSE            shift and go to state 233
    NAME            reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    READ            reduce using rule 90 (empty -> .)
    PRINT           reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    WHILE           reduce using rule 90 (empty -> .)
    FROM            reduce using rule 90 (empty -> .)
    RBRACKET        reduce using rule 90 (empty -> .)

    ELSE1                          shift and go to state 232
    empty                          shift and go to state 234

state 224

    (60) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf . CUERPO terminarWhile
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 235

state 225

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP . popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (125) popIgual -> .

    TO              reduce using rule 125 (popIgual -> .)

    popIgual                       shift and go to state 236

state 226

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar . CUERPO terminarFunc
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 237

state 227

    (16) P2 -> COMMA PARAMS P1 .

    COMMA           reduce using rule 16 (P2 -> COMMA PARAMS P1 .)
    RPAREN          reduce using rule 16 (P2 -> COMMA PARAMS P1 .)


state 228

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo . quitarFondoFalso
    (119) quitarFondoFalso -> .

    COMMA           reduce using rule 119 (quitarFondoFalso -> .)
    FUNC            reduce using rule 119 (quitarFondoFalso -> .)
    MAIN            reduce using rule 119 (quitarFondoFalso -> .)
    LBRACKET        reduce using rule 119 (quitarFondoFalso -> .)
    RPAREN          reduce using rule 119 (quitarFondoFalso -> .)
    EQUALS          reduce using rule 119 (quitarFondoFalso -> .)
    DIVIDE          reduce using rule 119 (quitarFondoFalso -> .)
    MULTIPLY        reduce using rule 119 (quitarFondoFalso -> .)
    PLUS            reduce using rule 119 (quitarFondoFalso -> .)
    MINUS           reduce using rule 119 (quitarFondoFalso -> .)
    GREATER_OR_EQUAL reduce using rule 119 (quitarFondoFalso -> .)
    LESS_OR_EQUAL   reduce using rule 119 (quitarFondoFalso -> .)
    GREATER_THAN    reduce using rule 119 (quitarFondoFalso -> .)
    LESS_THAN       reduce using rule 119 (quitarFondoFalso -> .)
    IS_EQUAL        reduce using rule 119 (quitarFondoFalso -> .)
    NOT_EQUAL       reduce using rule 119 (quitarFondoFalso -> .)
    AND             reduce using rule 119 (quitarFondoFalso -> .)
    OR              reduce using rule 119 (quitarFondoFalso -> .)
    SEMICOLON       reduce using rule 119 (quitarFondoFalso -> .)
    RSBRACKET       reduce using rule 119 (quitarFondoFalso -> .)
    TO              reduce using rule 119 (quitarFondoFalso -> .)
    DO              reduce using rule 119 (quitarFondoFalso -> .)

    quitarFondoFalso               shift and go to state 238

state 229

    (45) LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN . quitarFondoFalso generarGosub SEMICOLON
    (119) quitarFondoFalso -> .

    SEMICOLON       reduce using rule 119 (quitarFondoFalso -> .)

    quitarFondoFalso               shift and go to state 239

state 230

    (47) E4 -> EXP generarParam COMMA . E4
    (46) E4 -> . EXP generarParam
    (47) E4 -> . EXP generarParam COMMA E4
    (48) E4 -> . empty
    (76) EXP -> . TERMINO popSumaResta T
    (90) empty -> .
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    RPAREN          reduce using rule 90 (empty -> .)
    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    EXP                            shift and go to state 191
    E4                             shift and go to state 240
    empty                          shift and go to state 192
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    VARIABLE                       shift and go to state 105
    LLAMADAF                       shift and go to state 106

state 231

    (49) LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 . verificarParam RPAREN generarGosub quitarFondoFalso
    (92) verificarParam -> .

    RPAREN          reduce using rule 92 (verificarParam -> .)

    verificarParam                 shift and go to state 241

state 232

    (57) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 . terminarGoto
    (114) terminarGoto -> .

    NAME            reduce using rule 114 (terminarGoto -> .)
    RETURN          reduce using rule 114 (terminarGoto -> .)
    READ            reduce using rule 114 (terminarGoto -> .)
    PRINT           reduce using rule 114 (terminarGoto -> .)
    IF              reduce using rule 114 (terminarGoto -> .)
    WHILE           reduce using rule 114 (terminarGoto -> .)
    FROM            reduce using rule 114 (terminarGoto -> .)
    RBRACKET        reduce using rule 114 (terminarGoto -> .)

    terminarGoto                   shift and go to state 242

state 233

    (58) ELSE1 -> ELSE . gotoElse CUERPO
    (117) gotoElse -> .

    LBRACKET        reduce using rule 117 (gotoElse -> .)

    gotoElse                       shift and go to state 243

state 234

    (59) ELSE1 -> empty .

    NAME            reduce using rule 59 (ELSE1 -> empty .)
    RETURN          reduce using rule 59 (ELSE1 -> empty .)
    READ            reduce using rule 59 (ELSE1 -> empty .)
    PRINT           reduce using rule 59 (ELSE1 -> empty .)
    IF              reduce using rule 59 (ELSE1 -> empty .)
    WHILE           reduce using rule 59 (ELSE1 -> empty .)
    FROM            reduce using rule 59 (ELSE1 -> empty .)
    RBRACKET        reduce using rule 59 (ELSE1 -> empty .)


state 235

    (60) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO . terminarWhile
    (116) terminarWhile -> .

    NAME            reduce using rule 116 (terminarWhile -> .)
    RETURN          reduce using rule 116 (terminarWhile -> .)
    READ            reduce using rule 116 (terminarWhile -> .)
    PRINT           reduce using rule 116 (terminarWhile -> .)
    IF              reduce using rule 116 (terminarWhile -> .)
    WHILE           reduce using rule 116 (terminarWhile -> .)
    FROM            reduce using rule 116 (terminarWhile -> .)
    RBRACKET        reduce using rule 116 (terminarWhile -> .)

    terminarWhile                  shift and go to state 244

state 236

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual . TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile

    TO              shift and go to state 245


state 237

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO . terminarFunc
    (96) terminarFunc -> .

    FUNC            reduce using rule 96 (terminarFunc -> .)
    MAIN            reduce using rule 96 (terminarFunc -> .)

    terminarFunc                   shift and go to state 246

state 238

    (31) E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .

    COMMA           reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    FUNC            reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    MAIN            reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    LBRACKET        reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    RPAREN          reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    EQUALS          reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    DIVIDE          reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    MULTIPLY        reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    PLUS            reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    MINUS           reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    GREATER_OR_EQUAL reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    LESS_OR_EQUAL   reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    GREATER_THAN    reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    LESS_THAN       reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    IS_EQUAL        reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    NOT_EQUAL       reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    AND             reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    OR              reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    SEMICOLON       reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    RSBRACKET       reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    TO              reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)
    DO              reduce using rule 31 (E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso .)


state 239

    (45) LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso . generarGosub SEMICOLON
    (91) generarGosub -> .

    SEMICOLON       reduce using rule 91 (generarGosub -> .)

    generarGosub                   shift and go to state 247

state 240

    (47) E4 -> EXP generarParam COMMA E4 .

    RPAREN          reduce using rule 47 (E4 -> EXP generarParam COMMA E4 .)


state 241

    (49) LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam . RPAREN generarGosub quitarFondoFalso

    RPAREN          shift and go to state 248


state 242

    (57) CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .

    NAME            reduce using rule 57 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RETURN          reduce using rule 57 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    READ            reduce using rule 57 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    PRINT           reduce using rule 57 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    IF              reduce using rule 57 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    WHILE           reduce using rule 57 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    FROM            reduce using rule 57 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)
    RBRACKET        reduce using rule 57 (CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto .)


state 243

    (58) ELSE1 -> ELSE gotoElse . CUERPO
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 249

state 244

    (60) CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .

    NAME            reduce using rule 60 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RETURN          reduce using rule 60 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    READ            reduce using rule 60 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    PRINT           reduce using rule 60 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    IF              reduce using rule 60 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    WHILE           reduce using rule 60 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    FROM            reduce using rule 60 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)
    RBRACKET        reduce using rule 60 (CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile .)


state 245

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO . EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (76) EXP -> . TERMINO popSumaResta T
    (80) TERMINO -> . FACTOR popMultDiv F2
    (84) FACTOR -> . LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso
    (85) FACTOR -> . C_INT agregarConstInt
    (86) FACTOR -> . C_FLOAT agregarConstFloat
    (87) FACTOR -> . C_CHAR agregarConstChar
    (88) FACTOR -> . VARIABLE
    (89) FACTOR -> . LLAMADAF
    (30) VARIABLE -> . NAME agregarPilaOp E2
    (49) LLAMADAF -> . NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso

    LPAREN          shift and go to state 98
    C_INT           shift and go to state 102
    C_FLOAT         shift and go to state 103
    C_CHAR          shift and go to state 104
    NAME            shift and go to state 107

    VARIABLE                       shift and go to state 105
    EXP                            shift and go to state 250
    TERMINO                        shift and go to state 100
    FACTOR                         shift and go to state 101
    LLAMADAF                       shift and go to state 106

state 246

    (10) FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc .

    FUNC            reduce using rule 10 (FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc .)
    MAIN            reduce using rule 10 (FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc .)


state 247

    (45) LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub . SEMICOLON

    SEMICOLON       shift and go to state 251


state 248

    (49) LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN . generarGosub quitarFondoFalso
    (91) generarGosub -> .

    DIVIDE          reduce using rule 91 (generarGosub -> .)
    MULTIPLY        reduce using rule 91 (generarGosub -> .)
    PLUS            reduce using rule 91 (generarGosub -> .)
    MINUS           reduce using rule 91 (generarGosub -> .)
    RPAREN          reduce using rule 91 (generarGosub -> .)
    COMMA           reduce using rule 91 (generarGosub -> .)
    GREATER_OR_EQUAL reduce using rule 91 (generarGosub -> .)
    LESS_OR_EQUAL   reduce using rule 91 (generarGosub -> .)
    GREATER_THAN    reduce using rule 91 (generarGosub -> .)
    LESS_THAN       reduce using rule 91 (generarGosub -> .)
    IS_EQUAL        reduce using rule 91 (generarGosub -> .)
    NOT_EQUAL       reduce using rule 91 (generarGosub -> .)
    AND             reduce using rule 91 (generarGosub -> .)
    OR              reduce using rule 91 (generarGosub -> .)
    SEMICOLON       reduce using rule 91 (generarGosub -> .)
    RSBRACKET       reduce using rule 91 (generarGosub -> .)
    TO              reduce using rule 91 (generarGosub -> .)
    DO              reduce using rule 91 (generarGosub -> .)

    generarGosub                   shift and go to state 252

state 249

    (58) ELSE1 -> ELSE gotoElse CUERPO .

    NAME            reduce using rule 58 (ELSE1 -> ELSE gotoElse CUERPO .)
    RETURN          reduce using rule 58 (ELSE1 -> ELSE gotoElse CUERPO .)
    READ            reduce using rule 58 (ELSE1 -> ELSE gotoElse CUERPO .)
    PRINT           reduce using rule 58 (ELSE1 -> ELSE gotoElse CUERPO .)
    IF              reduce using rule 58 (ELSE1 -> ELSE gotoElse CUERPO .)
    WHILE           reduce using rule 58 (ELSE1 -> ELSE gotoElse CUERPO .)
    FROM            reduce using rule 58 (ELSE1 -> ELSE gotoElse CUERPO .)
    RBRACKET        reduce using rule 58 (ELSE1 -> ELSE gotoElse CUERPO .)


state 250

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP . crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile
    (103) crearCompFrom -> .

    DO              reduce using rule 103 (crearCompFrom -> .)

    crearCompFrom                  shift and go to state 253

state 251

    (45) LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON .

    NAME            reduce using rule 45 (LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON .)
    RETURN          reduce using rule 45 (LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON .)
    READ            reduce using rule 45 (LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON .)
    PRINT           reduce using rule 45 (LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON .)
    IF              reduce using rule 45 (LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON .)
    WHILE           reduce using rule 45 (LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON .)
    FROM            reduce using rule 45 (LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON .)
    RBRACKET        reduce using rule 45 (LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON .)


state 252

    (49) LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub . quitarFondoFalso
    (119) quitarFondoFalso -> .

    DIVIDE          reduce using rule 119 (quitarFondoFalso -> .)
    MULTIPLY        reduce using rule 119 (quitarFondoFalso -> .)
    PLUS            reduce using rule 119 (quitarFondoFalso -> .)
    MINUS           reduce using rule 119 (quitarFondoFalso -> .)
    RPAREN          reduce using rule 119 (quitarFondoFalso -> .)
    COMMA           reduce using rule 119 (quitarFondoFalso -> .)
    GREATER_OR_EQUAL reduce using rule 119 (quitarFondoFalso -> .)
    LESS_OR_EQUAL   reduce using rule 119 (quitarFondoFalso -> .)
    GREATER_THAN    reduce using rule 119 (quitarFondoFalso -> .)
    LESS_THAN       reduce using rule 119 (quitarFondoFalso -> .)
    IS_EQUAL        reduce using rule 119 (quitarFondoFalso -> .)
    NOT_EQUAL       reduce using rule 119 (quitarFondoFalso -> .)
    AND             reduce using rule 119 (quitarFondoFalso -> .)
    OR              reduce using rule 119 (quitarFondoFalso -> .)
    SEMICOLON       reduce using rule 119 (quitarFondoFalso -> .)
    RSBRACKET       reduce using rule 119 (quitarFondoFalso -> .)
    TO              reduce using rule 119 (quitarFondoFalso -> .)
    DO              reduce using rule 119 (quitarFondoFalso -> .)

    quitarFondoFalso               shift and go to state 254

state 253

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom . DO gotoIf CUERPO sumarFrom terminarWhile

    DO              shift and go to state 255


state 254

    (49) LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .

    DIVIDE          reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    MULTIPLY        reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    PLUS            reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    MINUS           reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    RPAREN          reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    COMMA           reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    GREATER_OR_EQUAL reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    LESS_OR_EQUAL   reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    GREATER_THAN    reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    LESS_THAN       reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    IS_EQUAL        reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    NOT_EQUAL       reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    AND             reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    OR              reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    SEMICOLON       reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    RSBRACKET       reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    TO              reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)
    DO              reduce using rule 49 (LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN generarGosub quitarFondoFalso .)


state 255

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO . gotoIf CUERPO sumarFrom terminarWhile
    (113) gotoIf -> .

    LBRACKET        reduce using rule 113 (gotoIf -> .)

    gotoIf                         shift and go to state 256

state 256

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf . CUERPO sumarFrom terminarWhile
    (17) CUERPO -> . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 44

    CUERPO                         shift and go to state 257

state 257

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO . sumarFrom terminarWhile
    (104) sumarFrom -> .

    NAME            reduce using rule 104 (sumarFrom -> .)
    RETURN          reduce using rule 104 (sumarFrom -> .)
    READ            reduce using rule 104 (sumarFrom -> .)
    PRINT           reduce using rule 104 (sumarFrom -> .)
    IF              reduce using rule 104 (sumarFrom -> .)
    WHILE           reduce using rule 104 (sumarFrom -> .)
    FROM            reduce using rule 104 (sumarFrom -> .)
    RBRACKET        reduce using rule 104 (sumarFrom -> .)

    sumarFrom                      shift and go to state 258

state 258

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom . terminarWhile
    (116) terminarWhile -> .

    NAME            reduce using rule 116 (terminarWhile -> .)
    RETURN          reduce using rule 116 (terminarWhile -> .)
    READ            reduce using rule 116 (terminarWhile -> .)
    PRINT           reduce using rule 116 (terminarWhile -> .)
    IF              reduce using rule 116 (terminarWhile -> .)
    WHILE           reduce using rule 116 (terminarWhile -> .)
    FROM            reduce using rule 116 (terminarWhile -> .)
    RBRACKET        reduce using rule 116 (terminarWhile -> .)

    terminarWhile                  shift and go to state 259

state 259

    (61) CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .

    NAME            reduce using rule 61 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    RETURN          reduce using rule 61 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    READ            reduce using rule 61 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    PRINT           reduce using rule 61 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    IF              reduce using rule 61 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    WHILE           reduce using rule 61 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    FROM            reduce using rule 61 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)
    RBRACKET        reduce using rule 61 (CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 152 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 213 resolved as shift
