
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDErightEQUALSleftANDORAND CHAR COMMA C_CHAR C_FLOAT C_INT C_STRING DIVIDE DO ELSE EQUALS FLOAT FROM FUNC GREATER_OR_EQUAL GREATER_THAN IF INT IS_EQUAL LBRACKET LESS_OR_EQUAL LESS_THAN LPAREN LSBRACKET MAIN MINUS MULTIPLY NAME NOT_EQUAL OR PLUS PRINT PROGRAM RBRACKET READ RETURN RPAREN RSBRACKET SEMICOLON THEN TO VAR VOID WHILE\n    PROGRAMA : crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo\n    F : FUNCION F\n    | empty\n    \n    VARS : borrarListaVar VAR V1\n    \n    V1 : TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3\n    \n    V2 : COMMA VARIABLE agregarVarLista V2\n    | empty\n    \n    V3 : borrarListaVar V1\n    | empty\n    \n    FUNCION : FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO \n    V4 : VARS\n    | empty\n    \n    PARAMS : TIPO NAME agregarVarLista P1\n    \n    P1 : P2\n    | empty\n    \n    P2 : COMMA PARAMS P1\n    \n    CUERPO : LBRACKET E RBRACKET\n    E : E1\n    | empty\n    E1 : ESTATUTO \n    | ESTATUTO E1\n    \n    TIPO : INT\n    | FLOAT\n    | CHAR\n    \n    TIPO_FUNCION : INT\n    | FLOAT\n    | CHAR\n    | VOID\n    \n    PRINCIPAL : MAIN LPAREN crearFuncMain RPAREN CUERPO\n    \n    VARIABLE : NAME E2\n    \n    E2 : LSBRACKET EXP RSBRACKET\n    | empty\n    \n    ESTATUTO : ASIGNACION\n    | LLAMADA\n    | RETORNO\n    | LECTURA\n    | ESCRITURA\n    | CONDICION\n    | CICLO_W\n    | CICLO_F\n    \n    ASIGNACION : VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON\n    \n    LLAMADA : NAME LPAREN E1 RPAREN SEMICOLON\n    E1 : EXP \n    | EXP COMMA E1\n    \n    LLAMADAF : NAME LPAREN E1 RPAREN\n    \n    RETORNO : RETURN LPAREN EXP popReturn RPAREN SEMICOLON\n    \n    LECTURA : READ LPAREN V3 RPAREN SEMICOLON\n    V3 : VARIABLE popRead COMMA V3\n    | VARIABLE popRead\n    \n    ESCRITURA : PRINT LPAREN E3 RPAREN SEMICOLON\n    E3 : S_EXP popPrint\n    | S_EXP popPrint COMMA E3\n    \n    CONDICION : IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto\n    ELSE1 : ELSE gotoElse CUERPO\n    | empty\n    \n    CICLO_W : WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile\n    \n    CICLO_F : FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile\n    \n    H_EXP : T_EXP\n    | T_EXP OR H_EXP\n    \n    T_EXP : G_EXP\n    | G_EXP AND T_EXP\n    \n    G_EXP : EXP B popBool\n    B : GREATER_OR_EQUAL meterOperador G_EXP\n    | LESS_OR_EQUAL meterOperador G_EXP\n    | GREATER_THAN meterOperador G_EXP\n    | LESS_THAN meterOperador G_EXP\n    | IS_EQUAL meterOperador G_EXP\n    | NOT_EQUAL meterOperador G_EXP\n    | empty\n    \n    S_EXP : C_STRING agregarConstString\n    | EXP\n    \n    EXP : TERMINO popSumaResta T \n    T : PLUS meterOperador EXP\n    | MINUS meterOperador EXP\n    | empty\n    \n    TERMINO : FACTOR popMultDiv F2 \n    F2 : DIVIDE meterOperador TERMINO\n    | MULTIPLY meterOperador TERMINO\n    | empty\n    \n    FACTOR : LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso\n    | C_INT agregarConstInt\n    | C_FLOAT agregarConstFloat\n    | C_CHAR agregarConstChar\n    | VARIABLE agregarPilaOp\n    | LLAMADAF\n    \n    empty :\n    agregarFrom : crearCompFrom : sumarFrom : agregarConstInt : agregarConstFloat : agregarConstChar : agregarConstString : scopeGlobal : scopeLocal : scopeTemp : scopeConst : gotoIf : terminarGoto :  agregarWhile : terminarWhile : gotoElse : meterFondoFalso : quitarFondoFalso :   agregarPilaOp : popPrint : popRead : popReturn : popBool : popIgual : popMultDiv : popSumaResta :  meterIgual :  meterBool :  meterMultDiv :  meterSumaResta :  meterOperador : crearFuncGlobal : crearFuncMain :  agregarFunc : agregarVariables : printFunciones : printTodo : agregarVarLista :  borrarListaVar : '
    
_lr_action_items = {'PROGRAM':([0,2,],[-118,3,]),'$end':([1,14,27,53,104,],[0,-123,-1,-29,-17,]),'NAME':([3,17,18,19,20,21,23,24,25,26,36,41,46,54,56,61,66,70,72,73,74,75,76,77,78,79,87,89,92,93,96,97,104,106,108,109,110,111,112,114,116,122,123,124,125,127,128,130,131,132,133,134,135,139,148,162,163,164,165,166,167,168,180,188,190,191,192,205,209,212,213,215,217,219,220,222,224,226,227,232,233,234,],[4,29,-25,-26,-27,-28,31,-22,-23,-24,52,31,-103,81,-121,52,81,81,-33,-34,-35,-36,-37,-38,-39,-40,-100,31,-117,-117,-117,-117,-17,81,81,52,31,52,52,31,151,52,52,52,52,52,52,-117,-117,-117,-117,-117,-117,-117,52,52,52,52,52,52,52,52,31,-42,-47,-50,52,-46,-117,-41,-86,52,-99,-55,-101,-53,-56,-54,52,-89,-101,-57,]),'SEMICOLON':([4,30,31,34,35,37,40,42,44,45,47,48,49,50,51,52,57,58,59,60,62,63,64,65,90,91,94,95,98,121,126,137,154,155,156,157,158,169,171,172,187,189,204,],[5,-124,-86,-86,-30,-32,56,-7,-112,-111,-90,-91,-92,-105,-85,-86,-124,-31,-86,-86,-81,-82,-83,-84,-86,-72,-75,-76,-79,-6,-104,-45,-73,-74,-77,-78,-80,188,190,191,-110,205,212,]),'VAR':([5,6,8,178,],[-94,-125,13,-125,]),'FUNC':([7,10,22,31,35,37,56,58,89,104,117,118,120,152,153,180,203,210,],[12,12,-4,-86,-30,-32,-121,-31,-86,-17,-107,-5,-9,-49,-8,-86,-48,-10,]),'MAIN':([7,9,10,11,16,22,31,35,37,56,58,89,104,117,118,120,152,153,180,203,210,],[-86,15,-86,-3,-2,-4,-86,-30,-32,-121,-31,-86,-17,-107,-5,-9,-49,-8,-86,-48,-10,]),'INT':([12,13,39,55,56,88,89,110,119,180,202,],[18,24,-125,-95,-121,24,-125,-125,24,-125,24,]),'FLOAT':([12,13,39,55,56,88,89,110,119,180,202,],[19,25,-125,-95,-121,25,-125,-125,25,-125,25,]),'CHAR':([12,13,39,55,56,88,89,110,119,180,202,],[20,26,-125,-95,-121,26,-125,-125,26,-125,26,]),'VOID':([12,],[21,]),'LPAREN':([15,29,33,36,46,52,54,61,66,70,72,73,74,75,76,77,78,79,81,82,83,84,85,86,92,93,96,97,104,106,108,109,111,112,113,122,123,124,125,127,128,130,131,132,133,134,135,139,148,162,163,164,165,166,167,168,188,190,191,192,205,209,212,213,215,217,219,220,222,224,226,227,232,233,234,],[28,-120,39,46,-103,66,46,46,46,46,-33,-34,-35,-36,-37,-38,-39,-40,108,109,110,111,112,-100,-117,-117,-117,-117,-17,46,46,46,46,46,148,46,46,46,46,46,46,-117,-117,-117,-117,-117,-117,-117,46,46,46,46,46,46,46,46,-42,-47,-50,46,-46,-117,-41,-86,46,-99,-55,-101,-53,-56,-54,46,-89,-101,-57,]),'LBRACKET':([22,31,35,37,38,56,58,89,117,118,120,152,153,178,180,196,197,198,203,207,208,214,218,223,230,231,],[-4,-86,-30,-32,54,-121,-31,-86,-107,-5,-9,-49,-8,-86,-86,54,-11,-12,-48,54,-98,54,-102,54,-98,54,]),'RPAREN':([28,31,32,35,37,44,45,47,48,49,50,51,52,56,58,59,60,62,63,64,65,70,71,72,73,74,75,76,77,78,79,80,81,89,91,94,95,98,99,100,101,102,103,104,105,107,110,115,117,118,120,126,129,136,137,138,140,141,142,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,169,170,173,174,176,179,180,181,182,183,184,185,186,188,190,191,199,200,201,203,205,206,211,212,213,216,217,219,220,222,224,226,232,233,234,],[-119,-86,38,-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-121,-31,-86,-86,-81,-82,-83,-84,-20,-43,-33,-34,-35,-36,-37,-38,-39,-40,-105,-86,-86,-72,-75,-76,-79,126,-58,-60,-86,137,-17,-21,-84,-86,-121,-107,-5,-9,-104,-109,-69,-45,-44,169,-108,171,172,-106,-93,-71,175,178,-124,-49,-8,-73,-74,-77,-78,-80,-59,-61,-62,-45,189,-51,-70,194,-86,-86,-63,-64,-65,-66,-67,-68,-42,-47,-50,-13,-14,-15,-48,-46,-52,-86,-41,-86,-16,-99,-55,-101,-53,-56,-54,-89,-101,-57,]),'COMMA':([30,31,34,35,37,44,45,47,48,49,50,51,52,57,58,59,60,62,63,64,65,71,80,81,90,91,94,95,98,107,117,126,137,144,145,146,151,152,154,155,156,157,158,169,173,174,179,199,200,201,211,216,],[-124,-86,41,-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-124,-31,-86,-86,-81,-82,-83,-84,106,-105,-86,41,-72,-75,-76,-79,-84,-107,-104,-45,-106,-93,-71,-124,180,-73,-74,-77,-78,-80,-45,192,-70,202,-13,-14,-15,202,-16,]),'LSBRACKET':([31,52,81,],[36,36,36,]),'EQUALS':([31,35,37,58,80,81,107,149,177,195,],[-86,-30,-32,-31,-105,-86,139,-105,-87,209,]),'DIVIDE':([35,37,45,47,48,49,50,51,52,58,60,62,63,64,65,80,81,107,126,137,158,169,],[-30,-32,-111,-90,-91,-92,-105,-85,-86,-31,96,-81,-82,-83,-84,-105,-86,-84,-104,-45,-80,-45,]),'MULTIPLY':([35,37,45,47,48,49,50,51,52,58,60,62,63,64,65,80,81,107,126,137,158,169,],[-30,-32,-111,-90,-91,-92,-105,-85,-86,-31,97,-81,-82,-83,-84,-105,-86,-84,-104,-45,-80,-45,]),'PLUS':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,80,81,95,98,107,126,137,156,157,158,169,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,92,-86,-81,-82,-83,-84,-105,-86,-76,-79,-84,-104,-45,-77,-78,-80,-45,]),'MINUS':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,80,81,95,98,107,126,137,156,157,158,169,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,93,-86,-81,-82,-83,-84,-105,-86,-76,-79,-84,-104,-45,-77,-78,-80,-45,]),'RSBRACKET':([35,37,43,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,126,137,154,155,156,157,158,],[-30,-32,58,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,-104,-45,-73,-74,-77,-78,-80,]),'RBRACKET':([35,37,44,45,47,48,49,50,51,52,54,58,59,60,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,91,94,95,98,104,105,107,126,137,138,154,155,156,157,158,169,188,190,191,205,212,213,217,219,220,222,224,226,232,233,234,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-86,-31,-86,-86,-81,-82,-83,-84,104,-18,-19,-20,-43,-33,-34,-35,-36,-37,-38,-39,-40,-105,-86,-72,-75,-76,-79,-17,-21,-84,-104,-45,-44,-73,-74,-77,-78,-80,-45,-42,-47,-50,-46,-41,-86,-99,-55,-101,-53,-56,-54,-89,-101,-57,]),'GREATER_OR_EQUAL':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,102,126,137,154,155,156,157,158,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,130,-104,-45,-73,-74,-77,-78,-80,]),'LESS_OR_EQUAL':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,102,126,137,154,155,156,157,158,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,131,-104,-45,-73,-74,-77,-78,-80,]),'GREATER_THAN':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,102,126,137,154,155,156,157,158,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,132,-104,-45,-73,-74,-77,-78,-80,]),'LESS_THAN':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,102,126,137,154,155,156,157,158,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,133,-104,-45,-73,-74,-77,-78,-80,]),'IS_EQUAL':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,102,126,137,154,155,156,157,158,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,134,-104,-45,-73,-74,-77,-78,-80,]),'NOT_EQUAL':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,102,126,137,154,155,156,157,158,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,135,-104,-45,-73,-74,-77,-78,-80,]),'AND':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,101,102,126,129,136,137,154,155,156,157,158,161,181,182,183,184,185,186,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,128,-86,-104,-109,-69,-45,-73,-74,-77,-78,-80,-62,-63,-64,-65,-66,-67,-68,]),'OR':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,100,101,102,126,129,136,137,154,155,156,157,158,160,161,181,182,183,184,185,186,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,127,-60,-86,-104,-109,-69,-45,-73,-74,-77,-78,-80,-61,-62,-63,-64,-65,-66,-67,-68,]),'TO':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,126,137,154,155,156,157,158,221,225,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,-104,-45,-73,-74,-77,-78,-80,-110,227,]),'DO':([35,37,44,45,47,48,49,50,51,52,58,59,60,62,63,64,65,91,94,95,98,126,137,154,155,156,157,158,194,228,229,],[-30,-32,-112,-111,-90,-91,-92,-105,-85,-86,-31,-86,-86,-81,-82,-83,-84,-72,-75,-76,-79,-104,-45,-73,-74,-77,-78,-80,208,-88,230,]),'C_INT':([36,46,54,61,66,70,72,73,74,75,76,77,78,79,92,93,96,97,104,106,108,109,111,112,122,123,124,125,127,128,130,131,132,133,134,135,139,148,162,163,164,165,166,167,168,188,190,191,192,205,209,212,213,215,217,219,220,222,224,226,227,232,233,234,],[47,-103,47,47,47,47,-33,-34,-35,-36,-37,-38,-39,-40,-117,-117,-117,-117,-17,47,47,47,47,47,47,47,47,47,47,47,-117,-117,-117,-117,-117,-117,-117,47,47,47,47,47,47,47,47,-42,-47,-50,47,-46,-117,-41,-86,47,-99,-55,-101,-53,-56,-54,47,-89,-101,-57,]),'C_FLOAT':([36,46,54,61,66,70,72,73,74,75,76,77,78,79,92,93,96,97,104,106,108,109,111,112,122,123,124,125,127,128,130,131,132,133,134,135,139,148,162,163,164,165,166,167,168,188,190,191,192,205,209,212,213,215,217,219,220,222,224,226,227,232,233,234,],[48,-103,48,48,48,48,-33,-34,-35,-36,-37,-38,-39,-40,-117,-117,-117,-117,-17,48,48,48,48,48,48,48,48,48,48,48,-117,-117,-117,-117,-117,-117,-117,48,48,48,48,48,48,48,48,-42,-47,-50,48,-46,-117,-41,-86,48,-99,-55,-101,-53,-56,-54,48,-89,-101,-57,]),'C_CHAR':([36,46,54,61,66,70,72,73,74,75,76,77,78,79,92,93,96,97,104,106,108,109,111,112,122,123,124,125,127,128,130,131,132,133,134,135,139,148,162,163,164,165,166,167,168,188,190,191,192,205,209,212,213,215,217,219,220,222,224,226,227,232,233,234,],[49,-103,49,49,49,49,-33,-34,-35,-36,-37,-38,-39,-40,-117,-117,-117,-117,-17,49,49,49,49,49,49,49,49,49,49,49,-117,-117,-117,-117,-117,-117,-117,49,49,49,49,49,49,49,49,-42,-47,-50,49,-46,-117,-41,-86,49,-99,-55,-101,-53,-56,-54,49,-89,-101,-57,]),'RETURN':([54,66,70,72,73,74,75,76,77,78,79,104,106,108,188,190,191,205,212,213,217,219,220,222,224,226,232,233,234,],[82,82,82,-33,-34,-35,-36,-37,-38,-39,-40,-17,82,82,-42,-47,-50,-46,-41,-86,-99,-55,-101,-53,-56,-54,-89,-101,-57,]),'READ':([54,66,70,72,73,74,75,76,77,78,79,104,106,108,188,190,191,205,212,213,217,219,220,222,224,226,232,233,234,],[83,83,83,-33,-34,-35,-36,-37,-38,-39,-40,-17,83,83,-42,-47,-50,-46,-41,-86,-99,-55,-101,-53,-56,-54,-89,-101,-57,]),'PRINT':([54,66,70,72,73,74,75,76,77,78,79,104,106,108,188,190,191,205,212,213,217,219,220,222,224,226,232,233,234,],[84,84,84,-33,-34,-35,-36,-37,-38,-39,-40,-17,84,84,-42,-47,-50,-46,-41,-86,-99,-55,-101,-53,-56,-54,-89,-101,-57,]),'IF':([54,66,70,72,73,74,75,76,77,78,79,104,106,108,188,190,191,205,212,213,217,219,220,222,224,226,232,233,234,],[85,85,85,-33,-34,-35,-36,-37,-38,-39,-40,-17,85,85,-42,-47,-50,-46,-41,-86,-99,-55,-101,-53,-56,-54,-89,-101,-57,]),'WHILE':([54,66,70,72,73,74,75,76,77,78,79,104,106,108,188,190,191,205,212,213,217,219,220,222,224,226,232,233,234,],[86,86,86,-33,-34,-35,-36,-37,-38,-39,-40,-17,86,86,-42,-47,-50,-46,-41,-86,-99,-55,-101,-53,-56,-54,-89,-101,-57,]),'FROM':([54,66,70,72,73,74,75,76,77,78,79,104,106,108,188,190,191,205,212,213,217,219,220,222,224,226,232,233,234,],[87,87,87,-33,-34,-35,-36,-37,-38,-39,-40,-17,87,87,-42,-47,-50,-46,-41,-86,-99,-55,-101,-53,-56,-54,-89,-101,-57,]),'ELSE':([104,213,],[-17,218,]),'C_STRING':([111,192,],[145,145,]),'THEN':([175,193,],[-98,207,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'crearFuncGlobal':([0,],[2,]),'scopeGlobal':([5,],[6,]),'VARS':([6,178,],[7,197,]),'borrarListaVar':([6,39,89,110,178,180,],[8,55,119,119,8,119,]),'F':([7,10,],[9,16,]),'FUNCION':([7,10,],[10,10,]),'empty':([7,10,31,34,52,54,59,60,81,89,90,102,110,178,179,180,211,213,],[11,11,37,42,37,69,94,98,37,120,42,136,120,198,201,120,201,219,]),'PRINCIPAL':([9,],[14,]),'TIPO_FUNCION':([12,],[17,]),'V1':([13,119,],[22,153,]),'TIPO':([13,88,119,202,],[23,116,23,116,]),'printTodo':([14,],[27,]),'VARIABLE':([23,36,41,54,61,66,70,89,106,108,109,110,111,112,114,122,123,124,125,127,128,148,162,163,164,165,166,167,168,180,192,215,227,],[30,50,57,80,50,80,80,117,80,80,50,117,50,50,149,50,50,50,50,50,50,50,50,50,50,50,50,50,50,117,50,50,50,]),'crearFuncMain':([28,],[32,]),'agregarFunc':([29,],[33,]),'agregarVarLista':([30,57,151,],[34,90,179,]),'E2':([31,52,81,],[35,35,35,]),'V2':([34,90,],[40,121,]),'EXP':([36,54,61,66,70,106,108,109,111,112,122,123,127,128,148,162,163,164,165,166,167,168,192,215,227,],[43,71,102,71,71,71,71,141,146,102,154,155,102,102,102,102,102,102,102,102,102,187,146,221,228,]),'TERMINO':([36,54,61,66,70,106,108,109,111,112,122,123,124,125,127,128,148,162,163,164,165,166,167,168,192,215,227,],[44,44,44,44,44,44,44,44,44,44,44,44,156,157,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'FACTOR':([36,54,61,66,70,106,108,109,111,112,122,123,124,125,127,128,148,162,163,164,165,166,167,168,192,215,227,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'LLAMADAF':([36,54,61,66,70,106,108,109,111,112,122,123,124,125,127,128,148,162,163,164,165,166,167,168,192,215,227,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'CUERPO':([38,196,207,214,223,231,],[53,210,213,220,226,232,]),'popSumaResta':([44,],[59,]),'popMultDiv':([45,],[60,]),'meterFondoFalso':([46,],[61,]),'agregarConstInt':([47,],[62,]),'agregarConstFloat':([48,],[63,]),'agregarConstChar':([49,],[64,]),'agregarPilaOp':([50,80,149,],[65,107,177,]),'E':([54,],[67,]),'E1':([54,66,70,106,108,],[68,103,105,138,140,]),'ESTATUTO':([54,66,70,106,108,],[70,70,70,70,70,]),'ASIGNACION':([54,66,70,106,108,],[72,72,72,72,72,]),'LLAMADA':([54,66,70,106,108,],[73,73,73,73,73,]),'RETORNO':([54,66,70,106,108,],[74,74,74,74,74,]),'LECTURA':([54,66,70,106,108,],[75,75,75,75,75,]),'ESCRITURA':([54,66,70,106,108,],[76,76,76,76,76,]),'CONDICION':([54,66,70,106,108,],[77,77,77,77,77,]),'CICLO_W':([54,66,70,106,108,],[78,78,78,78,78,]),'CICLO_F':([54,66,70,106,108,],[79,79,79,79,79,]),'scopeLocal':([55,],[88,]),'agregarVariables':([56,115,],[89,150,]),'T':([59,],[91,]),'F2':([60,],[95,]),'H_EXP':([61,112,127,148,],[99,147,159,176,]),'T_EXP':([61,112,127,128,148,],[100,100,100,160,100,]),'G_EXP':([61,112,127,128,148,162,163,164,165,166,167,],[101,101,101,101,101,181,182,183,184,185,186,]),'agregarWhile':([86,87,],[113,114,]),'PARAMS':([88,202,],[115,211,]),'V3':([89,110,180,],[118,142,203,]),'meterOperador':([92,93,96,97,130,131,132,133,134,135,139,209,],[122,123,124,125,162,163,164,165,166,167,168,215,]),'B':([102,],[129,]),'E3':([111,192,],[143,206,]),'S_EXP':([111,192,],[144,144,]),'popRead':([117,],[152,]),'quitarFondoFalso':([126,],[158,]),'popBool':([129,],[161,]),'popReturn':([141,],[170,]),'popPrint':([144,],[173,]),'agregarConstString':([145,],[174,]),'gotoIf':([175,208,230,],[193,214,231,]),'agregarFrom':([177,],[195,]),'V4':([178,],[196,]),'P1':([179,211,],[199,216,]),'P2':([179,211,],[200,200,]),'popIgual':([187,221,],[204,225,]),'ELSE1':([213,],[217,]),'terminarGoto':([217,],[222,]),'gotoElse':([218,],[223,]),'terminarWhile':([220,233,],[224,234,]),'crearCompFrom':([228,],[229,]),'sumarFrom':([232,],[233,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo','PROGRAMA',9,'p_PROGRAMA','parser.py',44),
  ('F -> FUNCION F','F',2,'p_PROGRAMA','parser.py',45),
  ('F -> empty','F',1,'p_PROGRAMA','parser.py',46),
  ('VARS -> borrarListaVar VAR V1','VARS',3,'p_VARS','parser.py',51),
  ('V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3','V1',7,'p_V1','parser.py',57),
  ('V2 -> COMMA VARIABLE agregarVarLista V2','V2',4,'p_V2','parser.py',63),
  ('V2 -> empty','V2',1,'p_V2','parser.py',64),
  ('V3 -> borrarListaVar V1','V3',2,'p_V3','parser.py',69),
  ('V3 -> empty','V3',1,'p_V3','parser.py',70),
  ('FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO','FUNCION',12,'p_FUNCION','parser.py',76),
  ('V4 -> VARS','V4',1,'p_FUNCION','parser.py',77),
  ('V4 -> empty','V4',1,'p_FUNCION','parser.py',78),
  ('PARAMS -> TIPO NAME agregarVarLista P1','PARAMS',4,'p_PARAMS','parser.py',82),
  ('P1 -> P2','P1',1,'p_P1','parser.py',87),
  ('P1 -> empty','P1',1,'p_P1','parser.py',88),
  ('P2 -> COMMA PARAMS P1','P2',3,'p_P2','parser.py',93),
  ('CUERPO -> LBRACKET E RBRACKET','CUERPO',3,'p_CUERPO','parser.py',98),
  ('E -> E1','E',1,'p_CUERPO','parser.py',99),
  ('E -> empty','E',1,'p_CUERPO','parser.py',100),
  ('E1 -> ESTATUTO','E1',1,'p_CUERPO','parser.py',101),
  ('E1 -> ESTATUTO E1','E1',2,'p_CUERPO','parser.py',102),
  ('TIPO -> INT','TIPO',1,'p_TIPO','parser.py',107),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','parser.py',108),
  ('TIPO -> CHAR','TIPO',1,'p_TIPO','parser.py',109),
  ('TIPO_FUNCION -> INT','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',116),
  ('TIPO_FUNCION -> FLOAT','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',117),
  ('TIPO_FUNCION -> CHAR','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',118),
  ('TIPO_FUNCION -> VOID','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',119),
  ('PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO','PRINCIPAL',5,'p_PRINCIPAL','parser.py',126),
  ('VARIABLE -> NAME E2','VARIABLE',2,'p_VARIABLE','parser.py',131),
  ('E2 -> LSBRACKET EXP RSBRACKET','E2',3,'p_E2','parser.py',137),
  ('E2 -> empty','E2',1,'p_E2','parser.py',138),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','parser.py',143),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','parser.py',144),
  ('ESTATUTO -> RETORNO','ESTATUTO',1,'p_ESTATUTO','parser.py',145),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','parser.py',146),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','parser.py',147),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','parser.py',148),
  ('ESTATUTO -> CICLO_W','ESTATUTO',1,'p_ESTATUTO','parser.py',149),
  ('ESTATUTO -> CICLO_F','ESTATUTO',1,'p_ESTATUTO','parser.py',150),
  ('ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON','ASIGNACION',7,'p_ASIGNACION','parser.py',155),
  ('LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON','LLAMADA',5,'p_LLAMADA','parser.py',160),
  ('E1 -> EXP','E1',1,'p_LLAMADA','parser.py',161),
  ('E1 -> EXP COMMA E1','E1',3,'p_LLAMADA','parser.py',162),
  ('LLAMADAF -> NAME LPAREN E1 RPAREN','LLAMADAF',4,'p_LLAMADAF','parser.py',167),
  ('RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON','RETORNO',6,'p_RETORNO','parser.py',172),
  ('LECTURA -> READ LPAREN V3 RPAREN SEMICOLON','LECTURA',5,'p_LECTURA','parser.py',177),
  ('V3 -> VARIABLE popRead COMMA V3','V3',4,'p_LECTURA','parser.py',178),
  ('V3 -> VARIABLE popRead','V3',2,'p_LECTURA','parser.py',179),
  ('ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON','ESCRITURA',5,'p_ESCRITURA','parser.py',184),
  ('E3 -> S_EXP popPrint','E3',2,'p_ESCRITURA','parser.py',185),
  ('E3 -> S_EXP popPrint COMMA E3','E3',4,'p_ESCRITURA','parser.py',186),
  ('CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto','CONDICION',9,'p_CONDICION','parser.py',191),
  ('ELSE1 -> ELSE gotoElse CUERPO','ELSE1',3,'p_CONDICION','parser.py',192),
  ('ELSE1 -> empty','ELSE1',1,'p_CONDICION','parser.py',193),
  ('CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile','CICLO_W',9,'p_CICLO_W','parser.py',198),
  ('CICLO_F -> FROM agregarWhile VARIABLE agregarPilaOp agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile','CICLO_F',17,'p_CICLO_F','parser.py',203),
  ('H_EXP -> T_EXP','H_EXP',1,'p_H_EXP','parser.py',208),
  ('H_EXP -> T_EXP OR H_EXP','H_EXP',3,'p_H_EXP','parser.py',209),
  ('T_EXP -> G_EXP','T_EXP',1,'p_T_EXP','parser.py',214),
  ('T_EXP -> G_EXP AND T_EXP','T_EXP',3,'p_T_EXP','parser.py',215),
  ('G_EXP -> EXP B popBool','G_EXP',3,'p_G_EXP','parser.py',220),
  ('B -> GREATER_OR_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',221),
  ('B -> LESS_OR_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',222),
  ('B -> GREATER_THAN meterOperador G_EXP','B',3,'p_G_EXP','parser.py',223),
  ('B -> LESS_THAN meterOperador G_EXP','B',3,'p_G_EXP','parser.py',224),
  ('B -> IS_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',225),
  ('B -> NOT_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',226),
  ('B -> empty','B',1,'p_G_EXP','parser.py',227),
  ('S_EXP -> C_STRING agregarConstString','S_EXP',2,'p_S_EXP','parser.py',232),
  ('S_EXP -> EXP','S_EXP',1,'p_S_EXP','parser.py',233),
  ('EXP -> TERMINO popSumaResta T','EXP',3,'p_EXP','parser.py',238),
  ('T -> PLUS meterOperador EXP','T',3,'p_EXP','parser.py',239),
  ('T -> MINUS meterOperador EXP','T',3,'p_EXP','parser.py',240),
  ('T -> empty','T',1,'p_EXP','parser.py',241),
  ('TERMINO -> FACTOR popMultDiv F2','TERMINO',3,'p_TERMINO','parser.py',246),
  ('F2 -> DIVIDE meterOperador TERMINO','F2',3,'p_TERMINO','parser.py',247),
  ('F2 -> MULTIPLY meterOperador TERMINO','F2',3,'p_TERMINO','parser.py',248),
  ('F2 -> empty','F2',1,'p_TERMINO','parser.py',249),
  ('FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso','FACTOR',5,'p_FACTOR','parser.py',254),
  ('FACTOR -> C_INT agregarConstInt','FACTOR',2,'p_FACTOR','parser.py',255),
  ('FACTOR -> C_FLOAT agregarConstFloat','FACTOR',2,'p_FACTOR','parser.py',256),
  ('FACTOR -> C_CHAR agregarConstChar','FACTOR',2,'p_FACTOR','parser.py',257),
  ('FACTOR -> VARIABLE agregarPilaOp','FACTOR',2,'p_FACTOR','parser.py',258),
  ('FACTOR -> LLAMADAF','FACTOR',1,'p_FACTOR','parser.py',259),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',264),
  ('agregarFrom -> <empty>','agregarFrom',0,'p_agregarFrom','parser.py',269),
  ('crearCompFrom -> <empty>','crearCompFrom',0,'p_crearCompFrom','parser.py',279),
  ('sumarFrom -> <empty>','sumarFrom',0,'p_sumarFrom','parser.py',304),
  ('agregarConstInt -> <empty>','agregarConstInt',0,'p_agregarConstInt','parser.py',338),
  ('agregarConstFloat -> <empty>','agregarConstFloat',0,'p_agregarConstFloat','parser.py',354),
  ('agregarConstChar -> <empty>','agregarConstChar',0,'p_agregarConstChar','parser.py',370),
  ('agregarConstString -> <empty>','agregarConstString',0,'p_agregarConstString','parser.py',386),
  ('scopeGlobal -> <empty>','scopeGlobal',0,'p_scopeGlobal','parser.py',402),
  ('scopeLocal -> <empty>','scopeLocal',0,'p_scopeLocal','parser.py',407),
  ('scopeTemp -> <empty>','scopeTemp',0,'p_scopeTemp','parser.py',412),
  ('scopeConst -> <empty>','scopeConst',0,'p_scopeConst','parser.py',417),
  ('gotoIf -> <empty>','gotoIf',0,'p_gotoIf','parser.py',422),
  ('terminarGoto -> <empty>','terminarGoto',0,'p_terminaGoto','parser.py',438),
  ('agregarWhile -> <empty>','agregarWhile',0,'p_agregarWhile','parser.py',445),
  ('terminarWhile -> <empty>','terminarWhile',0,'p_terminaWhile','parser.py',450),
  ('gotoElse -> <empty>','gotoElse',0,'p_gotoElse','parser.py',459),
  ('meterFondoFalso -> <empty>','meterFondoFalso',0,'p_meterFondoFalso','parser.py',470),
  ('quitarFondoFalso -> <empty>','quitarFondoFalso',0,'p_quitarFondoFalso','parser.py',475),
  ('agregarPilaOp -> <empty>','agregarPilaOp',0,'p_agregarPilaOp','parser.py',484),
  ('popPrint -> <empty>','popPrint',0,'p_popPrint','parser.py',499),
  ('popRead -> <empty>','popRead',0,'p_popRead','parser.py',506),
  ('popReturn -> <empty>','popReturn',0,'p_popReturn','parser.py',513),
  ('popBool -> <empty>','popBool',0,'p_popBool','parser.py',520),
  ('popIgual -> <empty>','popIgual',0,'p_popIgual','parser.py',560),
  ('popMultDiv -> <empty>','popMultDiv',0,'p_popMultDiv','parser.py',599),
  ('popSumaResta -> <empty>','popSumaResta',0,'p_popSumaResta','parser.py',636),
  ('meterIgual -> <empty>','meterIgual',0,'p_meterIgual','parser.py',673),
  ('meterBool -> <empty>','meterBool',0,'p_meterBool','parser.py',678),
  ('meterMultDiv -> <empty>','meterMultDiv',0,'p_meterMultDiv','parser.py',683),
  ('meterSumaResta -> <empty>','meterSumaResta',0,'p_meterSumaResta','parser.py',688),
  ('meterOperador -> <empty>','meterOperador',0,'p_meterOperador','parser.py',693),
  ('crearFuncGlobal -> <empty>','crearFuncGlobal',0,'p_crearFuncGlobal','parser.py',700),
  ('crearFuncMain -> <empty>','crearFuncMain',0,'p_crearFuncMain','parser.py',707),
  ('agregarFunc -> <empty>','agregarFunc',0,'p_agregarFunc','parser.py',714),
  ('agregarVariables -> <empty>','agregarVariables',0,'p_agregarVariables','parser.py',731),
  ('printFunciones -> <empty>','printFunciones',0,'p_printFunciones','parser.py',742),
  ('printTodo -> <empty>','printTodo',0,'p_printTodo','parser.py',747),
  ('agregarVarLista -> <empty>','agregarVarLista',0,'p_agregarVarLista','parser.py',754),
  ('borrarListaVar -> <empty>','borrarListaVar',0,'p_borrarListaVar','parser.py',782),
]
