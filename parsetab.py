
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDErightEQUALSleftANDORAND CHAR COMMA C_CHAR C_FLOAT C_INT C_STRING DIVIDE DO ELSE EQUALS FLOAT FROM FUNC GREATER_OR_EQUAL GREATER_THAN IF INT IS_EQUAL LBRACKET LESS_OR_EQUAL LESS_THAN LPAREN LSBRACKET MAIN MINUS MULTIPLY NAME NOT_EQUAL OR PLUS PRINT PROGRAM RBRACKET READ RETURN RPAREN RSBRACKET SEMICOLON THEN TO VAR VOID WHILE\n    PROGRAMA : crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo\n    F : FUNCION F\n    | empty\n    \n    VARS : borrarListaVar VAR V1\n    \n    V1 : TIPO VARIABLEDer V2 SEMICOLON V3\n    \n    V2 : COMMA VARIABLEDer V2\n    | empty\n    \n    V3 : V1\n    | empty\n    \n    FUNCION : FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc \n    V4 : VARS\n    | empty\n    \n    PARAMS : TIPO NAME agregarVarLista P1\n    \n    P1 : P2\n    | empty\n    \n    P2 : COMMA PARAMS P1\n    \n    CUERPO : LBRACKET E RBRACKET\n    E : E1\n    | empty\n    E1 : ESTATUTO \n    | ESTATUTO E1\n    \n    TIPO : INT\n    | FLOAT\n    | CHAR\n    \n    TIPO_FUNCION : INT\n    | FLOAT\n    | CHAR\n    | VOID\n    \n    PRINCIPAL : MAIN LPAREN crearFuncMain RPAREN CUERPO\n    \n    VARIABLE : NAME agregarPilaOp E2\n    \n    E2 : LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso\n    | empty\n    \n    VARIABLEDer : NAME agregarVarLista agregarVariables borrarListaVar E2Der\n    \n    E2Der : LSBRACKET C_INT declararArray RSBRACKET\n    | empty\n    \n    ESTATUTO : ASIGNACION\n    | LLAMADA\n    | RETORNO\n    | LECTURA\n    | ESCRITURA\n    | CONDICION\n    | CICLO_W\n    | CICLO_F\n    \n    ASIGNACION : VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON\n    \n    LLAMADA : NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON\n    E4 : EXP generarParam\n    | EXP generarParam COMMA E4\n    | empty\n    \n    LLAMADAF : NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso verificarLlamada generarGosub\n    \n    RETORNO : RETURN LPAREN EXP popReturn RPAREN SEMICOLON\n    \n    LECTURA : READ LPAREN V3 RPAREN SEMICOLON\n    V3 : VARIABLE popRead COMMA V3\n    | VARIABLE popRead\n    \n    ESCRITURA : PRINT LPAREN E3 RPAREN SEMICOLON\n    E3 : S_EXP popPrint\n    | S_EXP popPrint COMMA E3\n    \n    CONDICION : IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto\n    ELSE1 : ELSE gotoElse CUERPO\n    | empty\n    \n    CICLO_W : WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile\n    \n    CICLO_F : FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile\n    \n    H_EXP : T_EXP\n    | T_EXP OR H_EXP\n    \n    T_EXP : G_EXP\n    | G_EXP AND T_EXP\n    \n    G_EXP : EXP B popBool\n    B : GREATER_OR_EQUAL meterOperador G_EXP\n    | LESS_OR_EQUAL meterOperador G_EXP\n    | GREATER_THAN meterOperador G_EXP\n    | LESS_THAN meterOperador G_EXP\n    | IS_EQUAL meterOperador G_EXP\n    | NOT_EQUAL meterOperador G_EXP\n    | empty\n    \n    S_EXP : C_STRING agregarConstString\n    | EXP\n    \n    EXP : TERMINO popSumaResta T \n    T : PLUS meterOperador EXP\n    | MINUS meterOperador EXP\n    | empty\n    \n    TERMINO : FACTOR popMultDiv F2 \n    F2 : DIVIDE meterOperador TERMINO\n    | MULTIPLY meterOperador TERMINO\n    | empty\n    \n    FACTOR : LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso\n    | C_INT agregarConstInt\n    | C_FLOAT agregarConstFloat\n    | C_CHAR agregarConstChar\n    | VARIABLE\n    | LLAMADAF\n    \n    empty :\n     generarGosub : verificarLlamada :  verificarParam :  generarParam :  generarEra : verificarFunc :  terminarFunc :  agregarLocalVar : agregarParamTable : guardarArreglo : verificarArreglo :  declararArray : agregarFrom : crearCompFrom : sumarFrom : agregarConstInt : agregarConstFloat : agregarConstChar : agregarConstString : scopeGlobal : scopeLocal : scopeTemp : scopeConst : gotoIf : terminarGoto :  agregarWhile : terminarWhile : gotoElse : meterFondoFalso : quitarFondoFalso :   agregarPilaOp : popPrint : popRead : popReturn : popBool : popIgual : popMultDiv : popSumaResta :  meterIgual :  meterBool :  meterMultDiv :  meterSumaResta :  meterOperador : crearFuncGlobal : crearFuncMain :  agregarFunc : agregarVariables : printFunciones : printTodo : agregarVarLista :  borrarListaVar : '
    
_lr_action_items = {'PROGRAM':([0,2,],[-134,3,]),'$end':([1,14,27,43,79,],[0,-139,-1,-29,-17,]),'NAME':([3,17,18,19,20,21,23,24,25,26,35,40,44,56,57,58,59,60,61,62,63,64,72,79,81,83,84,85,86,88,90,91,93,96,97,98,117,122,125,126,139,140,142,143,144,145,146,147,153,156,160,161,164,165,167,168,169,170,175,176,177,178,179,180,182,189,194,195,196,197,198,199,209,222,223,230,232,234,235,242,244,245,249,251,258,259,260,],[4,29,-25,-26,-27,-28,31,-22,-23,-24,31,50,66,66,-36,-37,-38,-39,-40,-41,-42,-43,-116,-17,-133,107,50,107,107,50,120,50,-100,107,-119,-119,107,-119,-95,107,107,107,-133,-133,-133,-133,-133,-133,107,107,-133,-133,-133,-133,-119,-51,-54,107,107,107,107,107,107,107,-133,-44,-50,107,107,107,107,-95,107,107,-90,107,-115,-59,-117,-57,-60,107,-58,-45,-105,-117,-61,]),'SEMICOLON':([4,30,31,34,36,37,41,42,51,52,75,76,78,92,94,100,101,102,103,104,105,106,107,124,128,129,130,131,132,134,135,154,155,158,159,162,163,166,193,214,217,218,219,220,221,228,229,238,239,247,248,252,254,256,],[5,-90,-140,40,-7,-137,-90,-141,-6,-90,-90,-33,-35,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,-126,-90,-90,-85,-86,-87,168,169,-34,189,194,-76,-79,-80,-83,-120,-101,-84,-77,-78,-81,-82,-120,-120,-31,-91,251,-120,-92,-91,-49,]),'VAR':([5,6,8,183,],[-110,-141,13,-141,]),'FUNC':([7,10,22,40,46,47,48,49,50,74,75,79,91,92,94,121,214,228,237,238,246,],[12,12,-4,-90,-5,-8,-9,-123,-121,-53,-90,-17,-90,-30,-32,-52,-101,-120,-97,-31,-10,]),'MAIN':([7,9,10,11,16,22,40,46,47,48,49,50,74,75,79,91,92,94,121,214,228,237,238,246,],[-90,15,-90,-3,-2,-4,-90,-5,-8,-9,-123,-121,-53,-90,-17,-90,-30,-32,-52,-101,-120,-97,-31,-10,]),'INT':([12,13,39,40,45,73,84,91,187,],[18,24,-141,24,-111,24,24,24,24,]),'FLOAT':([12,13,39,40,45,73,84,91,187,],[19,25,-141,25,-111,25,25,25,25,]),'CHAR':([12,13,39,40,45,73,84,91,187,],[20,26,-141,26,-111,26,26,26,26,]),'VOID':([12,],[21,]),'LPAREN':([15,29,33,66,67,68,69,70,71,81,82,83,85,86,87,93,96,97,98,107,117,122,125,126,133,139,140,142,143,144,145,146,147,153,156,160,161,164,165,167,170,175,176,177,178,179,180,182,195,196,197,198,199,209,222,230,245,],[28,-136,39,-96,83,84,85,86,-116,-133,97,98,98,98,117,-100,98,-119,-119,-96,98,-119,-95,98,167,98,98,-133,-133,-133,-133,-133,-133,98,98,-133,-133,-133,-133,-119,98,98,98,98,98,98,98,-133,98,98,98,98,-95,98,98,98,98,]),'LBRACKET':([22,38,40,46,47,48,49,50,74,75,91,92,94,121,183,201,208,210,211,212,214,224,226,228,233,238,243,255,257,],[-4,44,-90,-5,-8,-9,-123,-121,-53,-90,-90,-30,-32,-52,-90,44,-114,-98,-11,-12,-101,44,44,-120,-118,-31,44,-114,44,]),'RPAREN':([28,32,40,46,47,48,49,50,74,75,84,89,91,92,94,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,121,125,127,128,129,130,131,132,136,137,141,148,149,151,152,156,157,159,162,163,166,167,172,173,174,184,185,186,190,191,192,193,199,200,202,203,204,205,206,207,213,214,215,216,217,218,219,220,221,222,227,228,230,231,238,240,241,248,252,254,256,],[-135,38,-90,-5,-8,-9,-123,-121,-53,-90,-90,-99,-90,-30,-32,-119,-124,-128,-127,-106,-107,-108,-88,-89,-121,134,135,-122,-109,-75,138,-62,-64,-90,-137,-140,-52,-95,158,-90,-90,-85,-86,-87,-55,-74,-125,-73,181,183,-90,-90,193,-76,-79,-80,-83,-119,-63,-65,-66,-13,-14,-15,-93,-94,-48,-120,-95,-56,-67,-68,-69,-70,-71,-72,-90,-101,229,-46,-84,-77,-78,-81,-82,-90,-16,-120,-90,-93,-31,-47,248,-120,-92,-91,-49,]),'COMMA':([30,31,37,41,42,49,50,52,74,75,76,78,92,94,100,101,102,103,104,105,106,107,110,111,112,120,128,129,130,131,132,136,137,152,154,159,162,163,166,184,185,186,191,193,213,214,216,217,218,219,220,221,227,228,238,248,252,254,256,],[35,-140,-137,35,-141,-123,-121,-90,91,-90,-33,-35,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,-122,-109,-75,-140,-90,-90,-85,-86,-87,170,-74,187,-34,-76,-79,-80,-83,-13,-14,-15,-94,-120,187,-101,230,-84,-77,-78,-81,-82,-16,-120,-31,-120,-92,-91,-49,]),'LSBRACKET':([31,37,42,50,52,66,75,107,],[-140,-137,-141,-121,77,-121,93,-121,]),'RBRACKET':([44,53,54,55,56,57,58,59,60,61,62,63,64,79,80,168,169,189,194,223,232,234,235,242,244,249,251,258,259,260,],[-90,79,-18,-19,-20,-36,-37,-38,-39,-40,-41,-42,-43,-17,-21,-51,-54,-44,-50,-90,-115,-59,-117,-57,-60,-58,-45,-105,-117,-61,]),'RETURN':([44,56,57,58,59,60,61,62,63,64,79,168,169,189,194,223,232,234,235,242,244,249,251,258,259,260,],[67,67,-36,-37,-38,-39,-40,-41,-42,-43,-17,-51,-54,-44,-50,-90,-115,-59,-117,-57,-60,-58,-45,-105,-117,-61,]),'READ':([44,56,57,58,59,60,61,62,63,64,79,168,169,189,194,223,232,234,235,242,244,249,251,258,259,260,],[68,68,-36,-37,-38,-39,-40,-41,-42,-43,-17,-51,-54,-44,-50,-90,-115,-59,-117,-57,-60,-58,-45,-105,-117,-61,]),'PRINT':([44,56,57,58,59,60,61,62,63,64,79,168,169,189,194,223,232,234,235,242,244,249,251,258,259,260,],[69,69,-36,-37,-38,-39,-40,-41,-42,-43,-17,-51,-54,-44,-50,-90,-115,-59,-117,-57,-60,-58,-45,-105,-117,-61,]),'IF':([44,56,57,58,59,60,61,62,63,64,79,168,169,189,194,223,232,234,235,242,244,249,251,258,259,260,],[70,70,-36,-37,-38,-39,-40,-41,-42,-43,-17,-51,-54,-44,-50,-90,-115,-59,-117,-57,-60,-58,-45,-105,-117,-61,]),'WHILE':([44,56,57,58,59,60,61,62,63,64,79,168,169,189,194,223,232,234,235,242,244,249,251,258,259,260,],[71,71,-36,-37,-38,-39,-40,-41,-42,-43,-17,-51,-54,-44,-50,-90,-115,-59,-117,-57,-60,-58,-45,-105,-117,-61,]),'FROM':([44,56,57,58,59,60,61,62,63,64,79,168,169,189,194,223,232,234,235,242,244,249,251,258,259,260,],[72,72,-36,-37,-38,-39,-40,-41,-42,-43,-17,-51,-54,-44,-50,-90,-115,-59,-117,-57,-60,-58,-45,-105,-117,-61,]),'EQUALS':([50,65,66,75,92,94,118,150,214,228,238,],[-121,81,-121,-90,-30,-32,-103,182,-101,-120,-31,]),'DIVIDE':([75,92,94,101,102,103,104,105,106,107,129,130,131,132,193,214,217,228,238,248,252,254,256,],[-90,-30,-32,-127,-106,-107,-108,-88,-89,-121,164,-85,-86,-87,-120,-101,-84,-120,-31,-120,-92,-91,-49,]),'MULTIPLY':([75,92,94,101,102,103,104,105,106,107,129,130,131,132,193,214,217,228,238,248,252,254,256,],[-90,-30,-32,-127,-106,-107,-108,-88,-89,-121,165,-85,-86,-87,-120,-101,-84,-120,-31,-120,-92,-91,-49,]),'PLUS':([75,92,94,100,101,102,103,104,105,106,107,128,129,130,131,132,163,166,193,214,217,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,160,-90,-85,-86,-87,-80,-83,-120,-101,-84,-81,-82,-120,-31,-120,-92,-91,-49,]),'MINUS':([75,92,94,100,101,102,103,104,105,106,107,128,129,130,131,132,163,166,193,214,217,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,161,-90,-85,-86,-87,-80,-83,-120,-101,-84,-81,-82,-120,-31,-120,-92,-91,-49,]),'GREATER_OR_EQUAL':([75,92,94,100,101,102,103,104,105,106,107,116,128,129,130,131,132,159,162,163,166,193,214,217,218,219,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,142,-90,-90,-85,-86,-87,-76,-79,-80,-83,-120,-101,-84,-77,-78,-81,-82,-120,-31,-120,-92,-91,-49,]),'LESS_OR_EQUAL':([75,92,94,100,101,102,103,104,105,106,107,116,128,129,130,131,132,159,162,163,166,193,214,217,218,219,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,143,-90,-90,-85,-86,-87,-76,-79,-80,-83,-120,-101,-84,-77,-78,-81,-82,-120,-31,-120,-92,-91,-49,]),'GREATER_THAN':([75,92,94,100,101,102,103,104,105,106,107,116,128,129,130,131,132,159,162,163,166,193,214,217,218,219,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,144,-90,-90,-85,-86,-87,-76,-79,-80,-83,-120,-101,-84,-77,-78,-81,-82,-120,-31,-120,-92,-91,-49,]),'LESS_THAN':([75,92,94,100,101,102,103,104,105,106,107,116,128,129,130,131,132,159,162,163,166,193,214,217,218,219,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,145,-90,-90,-85,-86,-87,-76,-79,-80,-83,-120,-101,-84,-77,-78,-81,-82,-120,-31,-120,-92,-91,-49,]),'IS_EQUAL':([75,92,94,100,101,102,103,104,105,106,107,116,128,129,130,131,132,159,162,163,166,193,214,217,218,219,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,146,-90,-90,-85,-86,-87,-76,-79,-80,-83,-120,-101,-84,-77,-78,-81,-82,-120,-31,-120,-92,-91,-49,]),'NOT_EQUAL':([75,92,94,100,101,102,103,104,105,106,107,116,128,129,130,131,132,159,162,163,166,193,214,217,218,219,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,147,-90,-90,-85,-86,-87,-76,-79,-80,-83,-120,-101,-84,-77,-78,-81,-82,-120,-31,-120,-92,-91,-49,]),'AND':([75,92,94,100,101,102,103,104,105,106,107,115,116,128,129,130,131,132,141,148,159,162,163,166,174,193,202,203,204,205,206,207,214,217,218,219,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,140,-90,-90,-90,-85,-86,-87,-125,-73,-76,-79,-80,-83,-66,-120,-67,-68,-69,-70,-71,-72,-101,-84,-77,-78,-81,-82,-120,-31,-120,-92,-91,-49,]),'OR':([75,92,94,100,101,102,103,104,105,106,107,114,115,116,128,129,130,131,132,141,148,159,162,163,166,173,174,193,202,203,204,205,206,207,214,217,218,219,220,221,228,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,139,-64,-90,-90,-90,-85,-86,-87,-125,-73,-76,-79,-80,-83,-65,-66,-120,-67,-68,-69,-70,-71,-72,-101,-84,-77,-78,-81,-82,-120,-31,-120,-92,-91,-49,]),'RSBRACKET':([75,92,94,95,100,101,102,103,104,105,106,107,123,128,129,130,131,132,159,162,163,166,188,193,214,217,218,219,220,221,228,238,248,252,254,256,],[-90,-30,-32,-102,-128,-127,-106,-107,-108,-88,-89,-121,154,-90,-90,-85,-86,-87,-76,-79,-80,-83,214,-120,-101,-84,-77,-78,-81,-82,-120,-31,-120,-92,-91,-49,]),'TO':([75,92,94,100,101,102,103,104,105,106,107,128,129,130,131,132,159,162,163,166,193,214,217,218,219,220,221,225,228,236,238,248,252,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,-90,-90,-85,-86,-87,-76,-79,-80,-83,-120,-101,-84,-77,-78,-81,-82,-126,-120,245,-31,-120,-92,-91,-49,]),'DO':([75,92,94,100,101,102,103,104,105,106,107,128,129,130,131,132,159,162,163,166,181,193,214,217,218,219,220,221,228,238,248,250,252,253,254,256,],[-90,-30,-32,-128,-127,-106,-107,-108,-88,-89,-121,-90,-90,-85,-86,-87,-76,-79,-80,-83,208,-120,-101,-84,-77,-78,-81,-82,-120,-31,-120,-104,-92,255,-91,-49,]),'C_INT':([77,81,83,85,86,93,96,97,98,117,122,125,126,139,140,142,143,144,145,146,147,153,156,160,161,164,165,167,170,175,176,177,178,179,180,182,195,196,197,198,199,209,222,230,245,],[95,-133,102,102,102,-100,102,-119,-119,102,-119,-95,102,102,102,-133,-133,-133,-133,-133,-133,102,102,-133,-133,-133,-133,-119,102,102,102,102,102,102,102,-133,102,102,102,102,-95,102,102,102,102,]),'ELSE':([79,223,],[-17,233,]),'C_FLOAT':([81,83,85,86,93,96,97,98,117,122,125,126,139,140,142,143,144,145,146,147,153,156,160,161,164,165,167,170,175,176,177,178,179,180,182,195,196,197,198,199,209,222,230,245,],[-133,103,103,103,-100,103,-119,-119,103,-119,-95,103,103,103,-133,-133,-133,-133,-133,-133,103,103,-133,-133,-133,-133,-119,103,103,103,103,103,103,103,-133,103,103,103,103,-95,103,103,103,103,]),'C_CHAR':([81,83,85,86,93,96,97,98,117,122,125,126,139,140,142,143,144,145,146,147,153,156,160,161,164,165,167,170,175,176,177,178,179,180,182,195,196,197,198,199,209,222,230,245,],[-133,104,104,104,-100,104,-119,-119,104,-119,-95,104,104,104,-133,-133,-133,-133,-133,-133,104,104,-133,-133,-133,-133,-119,104,104,104,104,104,104,104,-133,104,104,104,104,-95,104,104,104,104,]),'C_STRING':([85,170,],[111,111,]),'THEN':([138,171,],[-114,201,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'crearFuncGlobal':([0,],[2,]),'scopeGlobal':([5,],[6,]),'VARS':([6,183,],[7,211,]),'borrarListaVar':([6,39,42,183,],[8,45,52,8,]),'F':([7,10,],[9,16,]),'FUNCION':([7,10,],[10,10,]),'empty':([7,10,30,40,41,44,52,75,84,91,116,128,129,152,156,183,213,222,223,230,],[11,11,36,48,36,55,78,94,48,48,148,162,166,186,192,212,186,192,234,192,]),'PRINCIPAL':([9,],[14,]),'TIPO_FUNCION':([12,],[17,]),'V1':([13,40,84,91,],[22,47,47,47,]),'TIPO':([13,40,73,84,91,187,],[23,23,90,23,23,90,]),'printTodo':([14,],[27,]),'VARIABLEDer':([23,35,],[30,41,]),'crearFuncMain':([28,],[32,]),'agregarFunc':([29,],[33,]),'V2':([30,41,],[34,51,]),'agregarVarLista':([31,120,],[37,152,]),'agregarVariables':([37,119,],[42,151,]),'CUERPO':([38,201,224,226,243,257,],[43,223,235,237,249,258,]),'V3':([40,84,91,],[46,108,121,]),'VARIABLE':([40,44,56,83,84,85,86,88,91,96,117,126,139,140,153,156,170,175,176,177,178,179,180,195,196,197,198,209,222,230,245,],[49,65,65,105,49,105,105,118,49,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'E':([44,],[53,]),'E1':([44,56,],[54,80,]),'ESTATUTO':([44,56,],[56,56,]),'ASIGNACION':([44,56,],[57,57,]),'LLAMADA':([44,56,],[58,58,]),'RETORNO':([44,56,],[59,59,]),'LECTURA':([44,56,],[60,60,]),'ESCRITURA':([44,56,],[61,61,]),'CONDICION':([44,56,],[62,62,]),'CICLO_W':([44,56,],[63,63,]),'CICLO_F':([44,56,],[64,64,]),'scopeLocal':([45,],[73,]),'popRead':([49,],[74,]),'agregarPilaOp':([50,66,107,],[75,75,75,]),'E2Der':([52,],[76,]),'verificarFunc':([66,107,],[82,133,]),'agregarWhile':([71,72,],[87,88,]),'PARAMS':([73,187,],[89,213,]),'E2':([75,],[92,]),'meterOperador':([81,142,143,144,145,146,147,160,161,164,165,182,],[96,175,176,177,178,179,180,195,196,197,198,209,]),'EXP':([83,85,86,96,117,126,139,140,153,156,170,175,176,177,178,179,180,195,196,209,222,230,245,],[99,112,116,124,116,116,116,116,188,191,112,116,116,116,116,116,116,218,219,225,191,191,250,]),'TERMINO':([83,85,86,96,117,126,139,140,153,156,170,175,176,177,178,179,180,195,196,197,198,209,222,230,245,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,220,221,100,100,100,100,]),'FACTOR':([83,85,86,96,117,126,139,140,153,156,170,175,176,177,178,179,180,195,196,197,198,209,222,230,245,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'LLAMADAF':([83,85,86,96,117,126,139,140,153,156,170,175,176,177,178,179,180,195,196,197,198,209,222,230,245,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'E3':([85,170,],[109,200,]),'S_EXP':([85,170,],[110,110,]),'H_EXP':([86,117,126,139,],[113,149,157,172,]),'T_EXP':([86,117,126,139,140,],[114,114,114,114,173,]),'G_EXP':([86,117,126,139,140,175,176,177,178,179,180,],[115,115,115,115,115,202,203,204,205,206,207,]),'agregarParamTable':([89,],[119,]),'guardarArreglo':([93,],[122,]),'declararArray':([95,],[123,]),'meterFondoFalso':([97,98,122,167,],[125,126,153,199,]),'popReturn':([99,],[127,]),'popSumaResta':([100,],[128,]),'popMultDiv':([101,],[129,]),'agregarConstInt':([102,],[130,]),'agregarConstFloat':([103,],[131,]),'agregarConstChar':([104,],[132,]),'popPrint':([110,],[136,]),'agregarConstString':([111,],[137,]),'B':([116,],[141,]),'agregarFrom':([118,],[150,]),'popIgual':([124,225,],[155,236,]),'generarEra':([125,199,],[156,222,]),'T':([128,],[159,]),'F2':([129,],[163,]),'gotoIf':([138,208,255,],[171,224,257,]),'popBool':([141,],[174,]),'P1':([152,213,],[184,227,]),'P2':([152,213,],[185,185,]),'E4':([156,222,230,],[190,231,240,]),'V4':([183,],[210,]),'verificarParam':([190,231,],[215,241,]),'generarParam':([191,],[216,]),'quitarFondoFalso':([193,228,229,248,],[217,238,239,252,]),'agregarLocalVar':([210,],[226,]),'verificarArreglo':([214,],[228,]),'ELSE1':([223,],[232,]),'terminarGoto':([232,],[242,]),'gotoElse':([233,],[243,]),'terminarWhile':([235,259,],[244,260,]),'terminarFunc':([237,],[246,]),'generarGosub':([239,254,],[247,256,]),'crearCompFrom':([250,],[253,]),'verificarLlamada':([252,],[254,]),'sumarFrom':([258,],[259,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo','PROGRAMA',9,'p_PROGRAMA','parser.py',48),
  ('F -> FUNCION F','F',2,'p_PROGRAMA','parser.py',49),
  ('F -> empty','F',1,'p_PROGRAMA','parser.py',50),
  ('VARS -> borrarListaVar VAR V1','VARS',3,'p_VARS','parser.py',55),
  ('V1 -> TIPO VARIABLEDer V2 SEMICOLON V3','V1',5,'p_V1','parser.py',61),
  ('V2 -> COMMA VARIABLEDer V2','V2',3,'p_V2','parser.py',67),
  ('V2 -> empty','V2',1,'p_V2','parser.py',68),
  ('V3 -> V1','V3',1,'p_V3','parser.py',73),
  ('V3 -> empty','V3',1,'p_V3','parser.py',74),
  ('FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO terminarFunc','FUNCION',15,'p_FUNCION','parser.py',80),
  ('V4 -> VARS','V4',1,'p_FUNCION','parser.py',81),
  ('V4 -> empty','V4',1,'p_FUNCION','parser.py',82),
  ('PARAMS -> TIPO NAME agregarVarLista P1','PARAMS',4,'p_PARAMS','parser.py',87),
  ('P1 -> P2','P1',1,'p_P1','parser.py',92),
  ('P1 -> empty','P1',1,'p_P1','parser.py',93),
  ('P2 -> COMMA PARAMS P1','P2',3,'p_P2','parser.py',98),
  ('CUERPO -> LBRACKET E RBRACKET','CUERPO',3,'p_CUERPO','parser.py',103),
  ('E -> E1','E',1,'p_CUERPO','parser.py',104),
  ('E -> empty','E',1,'p_CUERPO','parser.py',105),
  ('E1 -> ESTATUTO','E1',1,'p_CUERPO','parser.py',106),
  ('E1 -> ESTATUTO E1','E1',2,'p_CUERPO','parser.py',107),
  ('TIPO -> INT','TIPO',1,'p_TIPO','parser.py',112),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','parser.py',113),
  ('TIPO -> CHAR','TIPO',1,'p_TIPO','parser.py',114),
  ('TIPO_FUNCION -> INT','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',121),
  ('TIPO_FUNCION -> FLOAT','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',122),
  ('TIPO_FUNCION -> CHAR','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',123),
  ('TIPO_FUNCION -> VOID','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',124),
  ('PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO','PRINCIPAL',5,'p_PRINCIPAL','parser.py',131),
  ('VARIABLE -> NAME agregarPilaOp E2','VARIABLE',3,'p_VARIABLE','parser.py',136),
  ('E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso','E2',7,'p_E2','parser.py',142),
  ('E2 -> empty','E2',1,'p_E2','parser.py',143),
  ('VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der','VARIABLEDer',5,'p_VARIABLEDer','parser.py',148),
  ('E2Der -> LSBRACKET C_INT declararArray RSBRACKET','E2Der',4,'p_E2Der','parser.py',154),
  ('E2Der -> empty','E2Der',1,'p_E2Der','parser.py',155),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','parser.py',160),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','parser.py',161),
  ('ESTATUTO -> RETORNO','ESTATUTO',1,'p_ESTATUTO','parser.py',162),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','parser.py',163),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','parser.py',164),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','parser.py',165),
  ('ESTATUTO -> CICLO_W','ESTATUTO',1,'p_ESTATUTO','parser.py',166),
  ('ESTATUTO -> CICLO_F','ESTATUTO',1,'p_ESTATUTO','parser.py',167),
  ('ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON','ASIGNACION',6,'p_ASIGNACION','parser.py',172),
  ('LLAMADA -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso generarGosub SEMICOLON','LLAMADA',11,'p_LLAMADA','parser.py',177),
  ('E4 -> EXP generarParam','E4',2,'p_LLAMADA','parser.py',178),
  ('E4 -> EXP generarParam COMMA E4','E4',4,'p_LLAMADA','parser.py',179),
  ('E4 -> empty','E4',1,'p_LLAMADA','parser.py',180),
  ('LLAMADAF -> NAME verificarFunc LPAREN meterFondoFalso generarEra E4 verificarParam RPAREN quitarFondoFalso verificarLlamada generarGosub','LLAMADAF',11,'p_LLAMADAF','parser.py',185),
  ('RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON','RETORNO',6,'p_RETORNO','parser.py',190),
  ('LECTURA -> READ LPAREN V3 RPAREN SEMICOLON','LECTURA',5,'p_LECTURA','parser.py',195),
  ('V3 -> VARIABLE popRead COMMA V3','V3',4,'p_LECTURA','parser.py',196),
  ('V3 -> VARIABLE popRead','V3',2,'p_LECTURA','parser.py',197),
  ('ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON','ESCRITURA',5,'p_ESCRITURA','parser.py',202),
  ('E3 -> S_EXP popPrint','E3',2,'p_ESCRITURA','parser.py',203),
  ('E3 -> S_EXP popPrint COMMA E3','E3',4,'p_ESCRITURA','parser.py',204),
  ('CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto','CONDICION',9,'p_CONDICION','parser.py',209),
  ('ELSE1 -> ELSE gotoElse CUERPO','ELSE1',3,'p_CONDICION','parser.py',210),
  ('ELSE1 -> empty','ELSE1',1,'p_CONDICION','parser.py',211),
  ('CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile','CICLO_W',9,'p_CICLO_W','parser.py',216),
  ('CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile','CICLO_F',16,'p_CICLO_F','parser.py',221),
  ('H_EXP -> T_EXP','H_EXP',1,'p_H_EXP','parser.py',226),
  ('H_EXP -> T_EXP OR H_EXP','H_EXP',3,'p_H_EXP','parser.py',227),
  ('T_EXP -> G_EXP','T_EXP',1,'p_T_EXP','parser.py',232),
  ('T_EXP -> G_EXP AND T_EXP','T_EXP',3,'p_T_EXP','parser.py',233),
  ('G_EXP -> EXP B popBool','G_EXP',3,'p_G_EXP','parser.py',238),
  ('B -> GREATER_OR_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',239),
  ('B -> LESS_OR_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',240),
  ('B -> GREATER_THAN meterOperador G_EXP','B',3,'p_G_EXP','parser.py',241),
  ('B -> LESS_THAN meterOperador G_EXP','B',3,'p_G_EXP','parser.py',242),
  ('B -> IS_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',243),
  ('B -> NOT_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',244),
  ('B -> empty','B',1,'p_G_EXP','parser.py',245),
  ('S_EXP -> C_STRING agregarConstString','S_EXP',2,'p_S_EXP','parser.py',250),
  ('S_EXP -> EXP','S_EXP',1,'p_S_EXP','parser.py',251),
  ('EXP -> TERMINO popSumaResta T','EXP',3,'p_EXP','parser.py',256),
  ('T -> PLUS meterOperador EXP','T',3,'p_EXP','parser.py',257),
  ('T -> MINUS meterOperador EXP','T',3,'p_EXP','parser.py',258),
  ('T -> empty','T',1,'p_EXP','parser.py',259),
  ('TERMINO -> FACTOR popMultDiv F2','TERMINO',3,'p_TERMINO','parser.py',264),
  ('F2 -> DIVIDE meterOperador TERMINO','F2',3,'p_TERMINO','parser.py',265),
  ('F2 -> MULTIPLY meterOperador TERMINO','F2',3,'p_TERMINO','parser.py',266),
  ('F2 -> empty','F2',1,'p_TERMINO','parser.py',267),
  ('FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso','FACTOR',5,'p_FACTOR','parser.py',272),
  ('FACTOR -> C_INT agregarConstInt','FACTOR',2,'p_FACTOR','parser.py',273),
  ('FACTOR -> C_FLOAT agregarConstFloat','FACTOR',2,'p_FACTOR','parser.py',274),
  ('FACTOR -> C_CHAR agregarConstChar','FACTOR',2,'p_FACTOR','parser.py',275),
  ('FACTOR -> VARIABLE','FACTOR',1,'p_FACTOR','parser.py',276),
  ('FACTOR -> LLAMADAF','FACTOR',1,'p_FACTOR','parser.py',277),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',282),
  ('generarGosub -> <empty>','generarGosub',0,'p_generarGosub','parser.py',286),
  ('verificarLlamada -> <empty>','verificarLlamada',0,'p_verificarLlamada','parser.py',317),
  ('verificarParam -> <empty>','verificarParam',0,'p_verificarParam','parser.py',329),
  ('generarParam -> <empty>','generarParam',0,'p_generarParam','parser.py',340),
  ('generarEra -> <empty>','generarEra',0,'p_generarEra','parser.py',361),
  ('verificarFunc -> <empty>','verificarFunc',0,'p_verificarFunc','parser.py',370),
  ('terminarFunc -> <empty>','terminarFunc',0,'p_terminarFunc','parser.py',386),
  ('agregarLocalVar -> <empty>','agregarLocalVar',0,'p_agregarLocalVar','parser.py',409),
  ('agregarParamTable -> <empty>','agregarParamTable',0,'p_agregarParamTable','parser.py',417),
  ('guardarArreglo -> <empty>','guardarArreglo',0,'p_guardarArreglo','parser.py',424),
  ('verificarArreglo -> <empty>','verificarArreglo',0,'p_verificarArreglo','parser.py',442),
  ('declararArray -> <empty>','declararArray',0,'p_declararArray','parser.py',464),
  ('agregarFrom -> <empty>','agregarFrom',0,'p_agregarFrom','parser.py',493),
  ('crearCompFrom -> <empty>','crearCompFrom',0,'p_crearCompFrom','parser.py',503),
  ('sumarFrom -> <empty>','sumarFrom',0,'p_sumarFrom','parser.py',531),
  ('agregarConstInt -> <empty>','agregarConstInt',0,'p_agregarConstInt','parser.py',565),
  ('agregarConstFloat -> <empty>','agregarConstFloat',0,'p_agregarConstFloat','parser.py',581),
  ('agregarConstChar -> <empty>','agregarConstChar',0,'p_agregarConstChar','parser.py',597),
  ('agregarConstString -> <empty>','agregarConstString',0,'p_agregarConstString','parser.py',613),
  ('scopeGlobal -> <empty>','scopeGlobal',0,'p_scopeGlobal','parser.py',629),
  ('scopeLocal -> <empty>','scopeLocal',0,'p_scopeLocal','parser.py',634),
  ('scopeTemp -> <empty>','scopeTemp',0,'p_scopeTemp','parser.py',639),
  ('scopeConst -> <empty>','scopeConst',0,'p_scopeConst','parser.py',644),
  ('gotoIf -> <empty>','gotoIf',0,'p_gotoIf','parser.py',649),
  ('terminarGoto -> <empty>','terminarGoto',0,'p_terminaGoto','parser.py',665),
  ('agregarWhile -> <empty>','agregarWhile',0,'p_agregarWhile','parser.py',672),
  ('terminarWhile -> <empty>','terminarWhile',0,'p_terminaWhile','parser.py',677),
  ('gotoElse -> <empty>','gotoElse',0,'p_gotoElse','parser.py',686),
  ('meterFondoFalso -> <empty>','meterFondoFalso',0,'p_meterFondoFalso','parser.py',697),
  ('quitarFondoFalso -> <empty>','quitarFondoFalso',0,'p_quitarFondoFalso','parser.py',702),
  ('agregarPilaOp -> <empty>','agregarPilaOp',0,'p_agregarPilaOp','parser.py',711),
  ('popPrint -> <empty>','popPrint',0,'p_popPrint','parser.py',726),
  ('popRead -> <empty>','popRead',0,'p_popRead','parser.py',733),
  ('popReturn -> <empty>','popReturn',0,'p_popReturn','parser.py',740),
  ('popBool -> <empty>','popBool',0,'p_popBool','parser.py',760),
  ('popIgual -> <empty>','popIgual',0,'p_popIgual','parser.py',798),
  ('popMultDiv -> <empty>','popMultDiv',0,'p_popMultDiv','parser.py',836),
  ('popSumaResta -> <empty>','popSumaResta',0,'p_popSumaResta','parser.py',873),
  ('meterIgual -> <empty>','meterIgual',0,'p_meterIgual','parser.py',910),
  ('meterBool -> <empty>','meterBool',0,'p_meterBool','parser.py',915),
  ('meterMultDiv -> <empty>','meterMultDiv',0,'p_meterMultDiv','parser.py',920),
  ('meterSumaResta -> <empty>','meterSumaResta',0,'p_meterSumaResta','parser.py',925),
  ('meterOperador -> <empty>','meterOperador',0,'p_meterOperador','parser.py',930),
  ('crearFuncGlobal -> <empty>','crearFuncGlobal',0,'p_crearFuncGlobal','parser.py',936),
  ('crearFuncMain -> <empty>','crearFuncMain',0,'p_crearFuncMain','parser.py',943),
  ('agregarFunc -> <empty>','agregarFunc',0,'p_agregarFunc','parser.py',950),
  ('agregarVariables -> <empty>','agregarVariables',0,'p_agregarVariables','parser.py',978),
  ('printFunciones -> <empty>','printFunciones',0,'p_printFunciones','parser.py',989),
  ('printTodo -> <empty>','printTodo',0,'p_printTodo','parser.py',994),
  ('agregarVarLista -> <empty>','agregarVarLista',0,'p_agregarVarLista','parser.py',1002),
  ('borrarListaVar -> <empty>','borrarListaVar',0,'p_borrarListaVar','parser.py',1034),
]
