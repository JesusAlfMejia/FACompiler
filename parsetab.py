
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDErightEQUALSleftANDORAND CHAR COMMA C_CHAR C_FLOAT C_INT C_STRING DIVIDE DO ELSE EQUALS FLOAT FROM FUNC GREATER_OR_EQUAL GREATER_THAN IF INT IS_EQUAL LBRACKET LESS_OR_EQUAL LESS_THAN LPAREN LSBRACKET MAIN MINUS MULTIPLY NAME NOT_EQUAL OR PLUS PRINT PROGRAM RBRACKET READ RETURN RPAREN RSBRACKET SEMICOLON THEN TO VAR VOID WHILE\n    PROGRAMA : crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo\n    F : FUNCION F\n    | empty\n    \n    VARS : borrarListaVar VAR V1\n    \n    V1 : TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3\n    \n    V2 : COMMA VARIABLE agregarVarLista V2\n    | empty\n    \n    V3 : borrarListaVar V1\n    | empty\n    \n    FUNCION : FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO \n    V4 : VARS\n    | empty\n    \n    PARAMS : TIPO NAME agregarVarLista P1\n    \n    P1 : P2\n    | empty\n    \n    P2 : COMMA PARAMS P1\n    \n    CUERPO : LBRACKET E RBRACKET\n    E : E1\n    | empty\n    E1 : ESTATUTO \n    | ESTATUTO E1\n    \n    TIPO : INT\n    | FLOAT\n    | CHAR\n    \n    TIPO_FUNCION : INT\n    | FLOAT\n    | CHAR\n    | VOID\n    \n    PRINCIPAL : MAIN LPAREN crearFuncMain RPAREN CUERPO\n    \n    VARIABLE : NAME E2\n    \n    E2 : LSBRACKET EXP RSBRACKET\n    | empty\n    \n    ESTATUTO : ASIGNACION\n    | LLAMADA\n    | RETORNO\n    | LECTURA\n    | ESCRITURA\n    | CONDICION\n    | CICLO_W\n    | CICLO_F\n    \n    ASIGNACION : VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON\n    \n    LLAMADA : NAME LPAREN E1 RPAREN SEMICOLON\n    E1 : EXP \n    | EXP COMMA E1\n    \n    LLAMADAF : NAME LPAREN E1 RPAREN\n    \n    RETORNO : RETURN LPAREN EXP popReturn RPAREN SEMICOLON\n    \n    LECTURA : READ LPAREN V3 RPAREN SEMICOLON\n    V3 : VARIABLE popRead COMMA V3\n    | VARIABLE popRead\n    \n    ESCRITURA : PRINT LPAREN E3 RPAREN SEMICOLON\n    E3 : S_EXP popPrint\n    | S_EXP popPrint COMMA E3\n    \n    CONDICION : IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto\n    ELSE1 : ELSE gotoElse CUERPO\n    | empty\n    \n    CICLO_W : WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile\n    \n    CICLO_F : FROM NAME EQUALS C_INT TO C_INT DO CUERPO\n    \n    H_EXP : T_EXP\n    | T_EXP OR H_EXP\n    \n    T_EXP : G_EXP\n    | G_EXP AND T_EXP\n    \n    G_EXP : EXP B popBool\n    B : GREATER_OR_EQUAL meterOperador G_EXP\n    | LESS_OR_EQUAL meterOperador EXP\n    | GREATER_THAN meterOperador EXP\n    | LESS_THAN meterOperador EXP\n    | IS_EQUAL meterOperador EXP\n    | NOT_EQUAL meterOperador EXP\n    | empty\n    \n    S_EXP : C_STRING agregarConstString\n    | EXP\n    \n    EXP : TERMINO T popSumaResta\n    T : PLUS meterOperador EXP\n    | MINUS meterOperador EXP\n    | empty\n    \n    TERMINO : FACTOR F2 popMultDiv\n    F2 : DIVIDE meterOperador TERMINO\n    | MULTIPLY meterOperador TERMINO\n    | empty\n    \n    FACTOR : LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso\n    | C_INT agregarConstInt\n    | C_FLOAT agregarConstFloat\n    | C_CHAR agregarConstChar\n    | VARIABLE agregarPilaOp\n    | LLAMADAF\n    \n    empty :\n    agregarConstInt : agregarConstFloat : agregarConstChar : agregarConstString : scopeGlobal : scopeLocal : scopeTemp : scopeConst : gotoIf : terminarGoto :  agregarWhile : terminarWhile : gotoElse : meterFondoFalso : quitarFondoFalso :   agregarPilaOp : popPrint : popRead : popReturn : popBool : popIgual : popMultDiv : popSumaResta :  meterIgual :  meterBool :  meterMultDiv :  meterSumaResta :  meterOperador : crearFuncGlobal : crearFuncMain :  agregarFunc : agregarVariables : printFunciones : printTodo : agregarVarLista :  borrarListaVar : '
    
_lr_action_items = {'PROGRAM':([0,2,],[-115,3,]),'$end':([1,14,27,53,108,],[0,-120,-1,-29,-17,]),'NAME':([3,17,18,19,20,21,23,24,25,26,36,41,46,54,56,60,61,64,65,67,72,76,78,79,80,81,82,83,84,85,93,95,98,99,101,102,108,110,112,113,114,115,116,120,131,132,134,135,136,137,138,139,143,152,162,163,164,165,166,167,168,180,188,190,191,192,205,212,213,217,219,220,221,222,224,225,],[4,29,-25,-26,-27,-28,31,-22,-23,-24,52,31,-100,87,-118,-114,-114,-114,-114,52,87,87,-33,-34,-35,-36,-37,-38,-39,-40,118,31,52,52,52,52,-17,87,87,52,31,52,52,155,52,52,-114,-114,-114,-114,-114,-114,-114,52,52,52,52,52,52,52,52,31,-42,-47,-50,52,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'SEMICOLON':([4,30,31,34,35,37,40,42,44,45,47,48,49,50,51,52,57,58,59,62,63,66,68,69,70,71,96,97,100,125,126,127,128,129,130,141,158,169,171,172,187,189,204,],[5,-121,-86,-86,-30,-32,56,-7,-86,-86,-87,-88,-89,-102,-85,-86,-121,-31,-109,-75,-108,-79,-81,-82,-83,-84,-86,-72,-76,-6,-73,-74,-77,-78,-101,-45,-80,188,190,191,-107,205,212,]),'VAR':([5,6,8,178,],[-91,-122,13,-122,]),'FUNC':([7,10,22,31,35,37,56,58,95,108,121,122,124,156,157,180,203,210,],[12,12,-4,-86,-30,-32,-118,-31,-86,-17,-104,-5,-9,-49,-8,-86,-48,-10,]),'MAIN':([7,9,10,11,16,22,31,35,37,56,58,95,108,121,122,124,156,157,180,203,210,],[-86,15,-86,-3,-2,-4,-86,-30,-32,-118,-31,-86,-17,-104,-5,-9,-49,-8,-86,-48,-10,]),'INT':([12,13,39,55,56,94,95,114,123,180,202,],[18,24,-122,-92,-118,24,-122,-122,24,-122,24,]),'FLOAT':([12,13,39,55,56,94,95,114,123,180,202,],[19,25,-122,-92,-118,25,-122,-122,25,-122,25,]),'CHAR':([12,13,39,55,56,94,95,114,123,180,202,],[20,26,-122,-92,-118,26,-122,-122,26,-122,26,]),'VOID':([12,],[21,]),'LPAREN':([15,29,33,36,46,52,54,60,61,64,65,67,72,76,78,79,80,81,82,83,84,85,87,88,89,90,91,92,98,99,101,102,108,110,112,113,115,116,117,131,132,134,135,136,137,138,139,143,152,162,163,164,165,166,167,168,188,190,191,192,205,212,213,217,219,220,221,222,224,225,],[28,-117,39,46,-100,72,46,-114,-114,-114,-114,46,46,46,-33,-34,-35,-36,-37,-38,-39,-40,112,113,114,115,116,-97,46,46,46,46,-17,46,46,46,46,46,152,46,46,-114,-114,-114,-114,-114,-114,-114,46,46,46,46,46,46,46,46,-42,-47,-50,46,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'LBRACKET':([22,31,35,37,38,56,58,95,121,122,124,156,157,178,180,196,197,198,203,207,208,214,215,218,223,],[-4,-86,-30,-32,54,-118,-31,-86,-104,-5,-9,-49,-8,-86,-86,54,-11,-12,-48,54,-95,54,54,-99,54,]),'RPAREN':([28,31,32,35,37,44,45,47,48,49,50,51,52,56,58,59,62,63,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,95,97,100,103,104,105,106,107,108,109,111,114,119,121,122,124,126,127,128,129,130,133,140,141,142,144,145,146,147,148,149,150,151,154,155,156,157,158,159,160,161,169,170,173,174,176,179,180,181,182,183,184,185,186,188,190,191,199,200,201,203,205,206,211,212,213,216,217,219,220,221,222,224,225,],[-116,-86,38,-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-118,-31,-109,-75,-108,-79,-81,-82,-83,-84,-20,-43,-33,-34,-35,-36,-37,-38,-39,-40,-102,-86,-86,-72,-76,130,-58,-60,-86,141,-17,-21,-84,-86,-118,-104,-5,-9,-73,-74,-77,-78,-101,-106,-69,-45,-44,169,-105,171,172,-103,-90,-71,175,178,-121,-49,-8,-80,-59,-61,-62,-45,189,-51,-70,194,-86,-86,-63,-64,-65,-66,-67,-68,-42,-47,-50,-13,-14,-15,-48,-46,-52,-86,-41,-86,-16,-96,-55,-98,-57,-53,-56,-54,]),'COMMA':([30,31,34,35,37,44,45,47,48,49,50,51,52,57,58,59,62,63,66,68,69,70,71,77,86,87,96,97,100,111,121,126,127,128,129,130,141,148,149,150,155,156,158,169,173,174,179,199,200,201,211,216,],[-121,-86,41,-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-121,-31,-109,-75,-108,-79,-81,-82,-83,-84,110,-102,-86,41,-72,-76,-84,-104,-73,-74,-77,-78,-101,-45,-103,-90,-71,-121,180,-80,-45,192,-70,202,-13,-14,-15,202,-16,]),'LSBRACKET':([31,52,87,],[36,36,36,]),'DIVIDE':([35,37,45,47,48,49,50,51,52,58,68,69,70,71,86,87,111,130,141,158,169,],[-30,-32,64,-87,-88,-89,-102,-85,-86,-31,-81,-82,-83,-84,-102,-86,-84,-101,-45,-80,-45,]),'MULTIPLY':([35,37,45,47,48,49,50,51,52,58,68,69,70,71,86,87,111,130,141,158,169,],[-30,-32,65,-87,-88,-89,-102,-85,-86,-31,-81,-82,-83,-84,-102,-86,-84,-101,-45,-80,-45,]),'PLUS':([35,37,44,45,47,48,49,50,51,52,58,63,66,68,69,70,71,86,87,100,111,128,129,130,141,158,169,],[-30,-32,60,-86,-87,-88,-89,-102,-85,-86,-31,-108,-79,-81,-82,-83,-84,-102,-86,-76,-84,-77,-78,-101,-45,-80,-45,]),'MINUS':([35,37,44,45,47,48,49,50,51,52,58,63,66,68,69,70,71,86,87,100,111,128,129,130,141,158,169,],[-30,-32,61,-86,-87,-88,-89,-102,-85,-86,-31,-108,-79,-81,-82,-83,-84,-102,-86,-76,-84,-77,-78,-101,-45,-80,-45,]),'RSBRACKET':([35,37,43,44,45,47,48,49,50,51,52,58,59,62,63,66,68,69,70,71,97,100,126,127,128,129,130,141,158,],[-30,-32,58,-86,-86,-87,-88,-89,-102,-85,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,-72,-76,-73,-74,-77,-78,-101,-45,-80,]),'EQUALS':([35,37,58,86,87,111,118,],[-30,-32,-31,-102,-86,143,153,]),'RBRACKET':([35,37,44,45,47,48,49,50,51,52,54,58,59,62,63,66,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,97,100,108,109,111,126,127,128,129,130,141,142,158,169,188,190,191,205,212,213,217,219,220,221,222,224,225,],[-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,108,-18,-19,-20,-43,-33,-34,-35,-36,-37,-38,-39,-40,-102,-86,-72,-76,-17,-21,-84,-73,-74,-77,-78,-101,-45,-44,-80,-45,-42,-47,-50,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'GREATER_OR_EQUAL':([35,37,44,45,47,48,49,50,51,52,58,59,62,63,66,68,69,70,71,97,100,106,126,127,128,129,130,141,158,],[-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,-72,-76,134,-73,-74,-77,-78,-101,-45,-80,]),'LESS_OR_EQUAL':([35,37,44,45,47,48,49,50,51,52,58,59,62,63,66,68,69,70,71,97,100,106,126,127,128,129,130,141,158,],[-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,-72,-76,135,-73,-74,-77,-78,-101,-45,-80,]),'GREATER_THAN':([35,37,44,45,47,48,49,50,51,52,58,59,62,63,66,68,69,70,71,97,100,106,126,127,128,129,130,141,158,],[-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,-72,-76,136,-73,-74,-77,-78,-101,-45,-80,]),'LESS_THAN':([35,37,44,45,47,48,49,50,51,52,58,59,62,63,66,68,69,70,71,97,100,106,126,127,128,129,130,141,158,],[-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,-72,-76,137,-73,-74,-77,-78,-101,-45,-80,]),'IS_EQUAL':([35,37,44,45,47,48,49,50,51,52,58,59,62,63,66,68,69,70,71,97,100,106,126,127,128,129,130,141,158,],[-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,-72,-76,138,-73,-74,-77,-78,-101,-45,-80,]),'NOT_EQUAL':([35,37,44,45,47,48,49,50,51,52,58,59,62,63,66,68,69,70,71,97,100,106,126,127,128,129,130,141,158,],[-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,-72,-76,139,-73,-74,-77,-78,-101,-45,-80,]),'AND':([35,37,44,45,47,48,49,50,51,52,58,59,62,63,66,68,69,70,71,97,100,105,106,126,127,128,129,130,133,140,141,158,161,181,182,183,184,185,186,],[-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,-72,-76,132,-86,-73,-74,-77,-78,-101,-106,-69,-45,-80,-62,-63,-64,-65,-66,-67,-68,]),'OR':([35,37,44,45,47,48,49,50,51,52,58,59,62,63,66,68,69,70,71,97,100,104,105,106,126,127,128,129,130,133,140,141,158,160,161,181,182,183,184,185,186,],[-30,-32,-86,-86,-87,-88,-89,-102,-85,-86,-31,-109,-75,-108,-79,-81,-82,-83,-84,-72,-76,131,-60,-86,-73,-74,-77,-78,-101,-106,-69,-45,-80,-61,-62,-63,-64,-65,-66,-67,-68,]),'C_INT':([36,46,54,60,61,64,65,67,72,76,78,79,80,81,82,83,84,85,98,99,101,102,108,110,112,113,115,116,131,132,134,135,136,137,138,139,143,152,153,162,163,164,165,166,167,168,188,190,191,192,195,205,212,213,217,219,220,221,222,224,225,],[47,-100,47,-114,-114,-114,-114,47,47,47,-33,-34,-35,-36,-37,-38,-39,-40,47,47,47,47,-17,47,47,47,47,47,47,47,-114,-114,-114,-114,-114,-114,-114,47,177,47,47,47,47,47,47,47,-42,-47,-50,47,209,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'C_FLOAT':([36,46,54,60,61,64,65,67,72,76,78,79,80,81,82,83,84,85,98,99,101,102,108,110,112,113,115,116,131,132,134,135,136,137,138,139,143,152,162,163,164,165,166,167,168,188,190,191,192,205,212,213,217,219,220,221,222,224,225,],[48,-100,48,-114,-114,-114,-114,48,48,48,-33,-34,-35,-36,-37,-38,-39,-40,48,48,48,48,-17,48,48,48,48,48,48,48,-114,-114,-114,-114,-114,-114,-114,48,48,48,48,48,48,48,48,-42,-47,-50,48,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'C_CHAR':([36,46,54,60,61,64,65,67,72,76,78,79,80,81,82,83,84,85,98,99,101,102,108,110,112,113,115,116,131,132,134,135,136,137,138,139,143,152,162,163,164,165,166,167,168,188,190,191,192,205,212,213,217,219,220,221,222,224,225,],[49,-100,49,-114,-114,-114,-114,49,49,49,-33,-34,-35,-36,-37,-38,-39,-40,49,49,49,49,-17,49,49,49,49,49,49,49,-114,-114,-114,-114,-114,-114,-114,49,49,49,49,49,49,49,49,-42,-47,-50,49,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'RETURN':([54,72,76,78,79,80,81,82,83,84,85,108,110,112,188,190,191,205,212,213,217,219,220,221,222,224,225,],[88,88,88,-33,-34,-35,-36,-37,-38,-39,-40,-17,88,88,-42,-47,-50,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'READ':([54,72,76,78,79,80,81,82,83,84,85,108,110,112,188,190,191,205,212,213,217,219,220,221,222,224,225,],[89,89,89,-33,-34,-35,-36,-37,-38,-39,-40,-17,89,89,-42,-47,-50,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'PRINT':([54,72,76,78,79,80,81,82,83,84,85,108,110,112,188,190,191,205,212,213,217,219,220,221,222,224,225,],[90,90,90,-33,-34,-35,-36,-37,-38,-39,-40,-17,90,90,-42,-47,-50,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'IF':([54,72,76,78,79,80,81,82,83,84,85,108,110,112,188,190,191,205,212,213,217,219,220,221,222,224,225,],[91,91,91,-33,-34,-35,-36,-37,-38,-39,-40,-17,91,91,-42,-47,-50,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'WHILE':([54,72,76,78,79,80,81,82,83,84,85,108,110,112,188,190,191,205,212,213,217,219,220,221,222,224,225,],[92,92,92,-33,-34,-35,-36,-37,-38,-39,-40,-17,92,92,-42,-47,-50,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'FROM':([54,72,76,78,79,80,81,82,83,84,85,108,110,112,188,190,191,205,212,213,217,219,220,221,222,224,225,],[93,93,93,-33,-34,-35,-36,-37,-38,-39,-40,-17,93,93,-42,-47,-50,-46,-41,-86,-96,-55,-98,-57,-53,-56,-54,]),'ELSE':([108,213,],[-17,218,]),'C_STRING':([115,192,],[149,149,]),'THEN':([175,193,],[-95,207,]),'TO':([177,],[195,]),'DO':([194,209,],[208,215,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'crearFuncGlobal':([0,],[2,]),'scopeGlobal':([5,],[6,]),'VARS':([6,178,],[7,197,]),'borrarListaVar':([6,39,95,114,178,180,],[8,55,123,123,8,123,]),'F':([7,10,],[9,16,]),'FUNCION':([7,10,],[10,10,]),'empty':([7,10,31,34,44,45,52,54,87,95,96,106,114,178,179,180,211,213,],[11,11,37,42,62,66,37,75,37,124,42,140,124,198,201,124,201,219,]),'PRINCIPAL':([9,],[14,]),'TIPO_FUNCION':([12,],[17,]),'V1':([13,123,],[22,157,]),'TIPO':([13,94,123,202,],[23,120,23,120,]),'printTodo':([14,],[27,]),'VARIABLE':([23,36,41,54,67,72,76,95,98,99,101,102,110,112,113,114,115,116,131,132,152,162,163,164,165,166,167,168,180,192,],[30,50,57,86,50,86,86,121,50,50,50,50,86,86,50,121,50,50,50,50,50,50,50,50,50,50,50,50,121,50,]),'crearFuncMain':([28,],[32,]),'agregarFunc':([29,],[33,]),'agregarVarLista':([30,57,155,],[34,96,179,]),'E2':([31,52,87,],[35,35,35,]),'V2':([34,96,],[40,125,]),'EXP':([36,54,67,72,76,98,99,110,112,113,115,116,131,132,152,162,163,164,165,166,167,168,192,],[43,77,106,77,77,126,127,77,77,145,150,106,106,106,106,106,182,183,184,185,186,187,150,]),'TERMINO':([36,54,67,72,76,98,99,101,102,110,112,113,115,116,131,132,152,162,163,164,165,166,167,168,192,],[44,44,44,44,44,44,44,128,129,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'FACTOR':([36,54,67,72,76,98,99,101,102,110,112,113,115,116,131,132,152,162,163,164,165,166,167,168,192,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'LLAMADAF':([36,54,67,72,76,98,99,101,102,110,112,113,115,116,131,132,152,162,163,164,165,166,167,168,192,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'CUERPO':([38,196,207,214,215,223,],[53,210,213,220,221,225,]),'T':([44,],[59,]),'F2':([45,],[63,]),'meterFondoFalso':([46,],[67,]),'agregarConstInt':([47,],[68,]),'agregarConstFloat':([48,],[69,]),'agregarConstChar':([49,],[70,]),'agregarPilaOp':([50,86,],[71,111,]),'E':([54,],[73,]),'E1':([54,72,76,110,112,],[74,107,109,142,144,]),'ESTATUTO':([54,72,76,110,112,],[76,76,76,76,76,]),'ASIGNACION':([54,72,76,110,112,],[78,78,78,78,78,]),'LLAMADA':([54,72,76,110,112,],[79,79,79,79,79,]),'RETORNO':([54,72,76,110,112,],[80,80,80,80,80,]),'LECTURA':([54,72,76,110,112,],[81,81,81,81,81,]),'ESCRITURA':([54,72,76,110,112,],[82,82,82,82,82,]),'CONDICION':([54,72,76,110,112,],[83,83,83,83,83,]),'CICLO_W':([54,72,76,110,112,],[84,84,84,84,84,]),'CICLO_F':([54,72,76,110,112,],[85,85,85,85,85,]),'scopeLocal':([55,],[94,]),'agregarVariables':([56,119,],[95,154,]),'popSumaResta':([59,],[97,]),'meterOperador':([60,61,64,65,134,135,136,137,138,139,143,],[98,99,101,102,162,163,164,165,166,167,168,]),'popMultDiv':([63,],[100,]),'H_EXP':([67,116,131,152,],[103,151,159,176,]),'T_EXP':([67,116,131,132,152,],[104,104,104,160,104,]),'G_EXP':([67,116,131,132,152,162,],[105,105,105,105,105,181,]),'agregarWhile':([92,],[117,]),'PARAMS':([94,202,],[119,211,]),'V3':([95,114,180,],[122,146,203,]),'B':([106,],[133,]),'E3':([115,192,],[147,206,]),'S_EXP':([115,192,],[148,148,]),'popRead':([121,],[156,]),'quitarFondoFalso':([130,],[158,]),'popBool':([133,],[161,]),'popReturn':([145,],[170,]),'popPrint':([148,],[173,]),'agregarConstString':([149,],[174,]),'gotoIf':([175,208,],[193,214,]),'V4':([178,],[196,]),'P1':([179,211,],[199,216,]),'P2':([179,211,],[200,200,]),'popIgual':([187,],[204,]),'ELSE1':([213,],[217,]),'terminarGoto':([217,],[222,]),'gotoElse':([218,],[223,]),'terminarWhile':([220,],[224,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo','PROGRAMA',9,'p_PROGRAMA','parser.py',44),
  ('F -> FUNCION F','F',2,'p_PROGRAMA','parser.py',45),
  ('F -> empty','F',1,'p_PROGRAMA','parser.py',46),
  ('VARS -> borrarListaVar VAR V1','VARS',3,'p_VARS','parser.py',51),
  ('V1 -> TIPO VARIABLE agregarVarLista V2 SEMICOLON agregarVariables V3','V1',7,'p_V1','parser.py',57),
  ('V2 -> COMMA VARIABLE agregarVarLista V2','V2',4,'p_V2','parser.py',63),
  ('V2 -> empty','V2',1,'p_V2','parser.py',64),
  ('V3 -> borrarListaVar V1','V3',2,'p_V3','parser.py',69),
  ('V3 -> empty','V3',1,'p_V3','parser.py',70),
  ('FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarVariables RPAREN V4 CUERPO','FUNCION',12,'p_FUNCION','parser.py',76),
  ('V4 -> VARS','V4',1,'p_FUNCION','parser.py',77),
  ('V4 -> empty','V4',1,'p_FUNCION','parser.py',78),
  ('PARAMS -> TIPO NAME agregarVarLista P1','PARAMS',4,'p_PARAMS','parser.py',82),
  ('P1 -> P2','P1',1,'p_P1','parser.py',87),
  ('P1 -> empty','P1',1,'p_P1','parser.py',88),
  ('P2 -> COMMA PARAMS P1','P2',3,'p_P2','parser.py',93),
  ('CUERPO -> LBRACKET E RBRACKET','CUERPO',3,'p_CUERPO','parser.py',98),
  ('E -> E1','E',1,'p_CUERPO','parser.py',99),
  ('E -> empty','E',1,'p_CUERPO','parser.py',100),
  ('E1 -> ESTATUTO','E1',1,'p_CUERPO','parser.py',101),
  ('E1 -> ESTATUTO E1','E1',2,'p_CUERPO','parser.py',102),
  ('TIPO -> INT','TIPO',1,'p_TIPO','parser.py',107),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','parser.py',108),
  ('TIPO -> CHAR','TIPO',1,'p_TIPO','parser.py',109),
  ('TIPO_FUNCION -> INT','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',116),
  ('TIPO_FUNCION -> FLOAT','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',117),
  ('TIPO_FUNCION -> CHAR','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',118),
  ('TIPO_FUNCION -> VOID','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',119),
  ('PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO','PRINCIPAL',5,'p_PRINCIPAL','parser.py',126),
  ('VARIABLE -> NAME E2','VARIABLE',2,'p_VARIABLE','parser.py',131),
  ('E2 -> LSBRACKET EXP RSBRACKET','E2',3,'p_E2','parser.py',137),
  ('E2 -> empty','E2',1,'p_E2','parser.py',138),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','parser.py',143),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','parser.py',144),
  ('ESTATUTO -> RETORNO','ESTATUTO',1,'p_ESTATUTO','parser.py',145),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','parser.py',146),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','parser.py',147),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','parser.py',148),
  ('ESTATUTO -> CICLO_W','ESTATUTO',1,'p_ESTATUTO','parser.py',149),
  ('ESTATUTO -> CICLO_F','ESTATUTO',1,'p_ESTATUTO','parser.py',150),
  ('ASIGNACION -> VARIABLE agregarPilaOp EQUALS meterOperador EXP popIgual SEMICOLON','ASIGNACION',7,'p_ASIGNACION','parser.py',155),
  ('LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON','LLAMADA',5,'p_LLAMADA','parser.py',161),
  ('E1 -> EXP','E1',1,'p_LLAMADA','parser.py',162),
  ('E1 -> EXP COMMA E1','E1',3,'p_LLAMADA','parser.py',163),
  ('LLAMADAF -> NAME LPAREN E1 RPAREN','LLAMADAF',4,'p_LLAMADAF','parser.py',168),
  ('RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON','RETORNO',6,'p_RETORNO','parser.py',173),
  ('LECTURA -> READ LPAREN V3 RPAREN SEMICOLON','LECTURA',5,'p_LECTURA','parser.py',178),
  ('V3 -> VARIABLE popRead COMMA V3','V3',4,'p_LECTURA','parser.py',179),
  ('V3 -> VARIABLE popRead','V3',2,'p_LECTURA','parser.py',180),
  ('ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON','ESCRITURA',5,'p_ESCRITURA','parser.py',185),
  ('E3 -> S_EXP popPrint','E3',2,'p_ESCRITURA','parser.py',186),
  ('E3 -> S_EXP popPrint COMMA E3','E3',4,'p_ESCRITURA','parser.py',187),
  ('CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto','CONDICION',9,'p_CONDICION','parser.py',192),
  ('ELSE1 -> ELSE gotoElse CUERPO','ELSE1',3,'p_CONDICION','parser.py',193),
  ('ELSE1 -> empty','ELSE1',1,'p_CONDICION','parser.py',194),
  ('CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile','CICLO_W',9,'p_CICLO_W','parser.py',199),
  ('CICLO_F -> FROM NAME EQUALS C_INT TO C_INT DO CUERPO','CICLO_F',8,'p_CICLO_F','parser.py',204),
  ('H_EXP -> T_EXP','H_EXP',1,'p_H_EXP','parser.py',209),
  ('H_EXP -> T_EXP OR H_EXP','H_EXP',3,'p_H_EXP','parser.py',210),
  ('T_EXP -> G_EXP','T_EXP',1,'p_T_EXP','parser.py',215),
  ('T_EXP -> G_EXP AND T_EXP','T_EXP',3,'p_T_EXP','parser.py',216),
  ('G_EXP -> EXP B popBool','G_EXP',3,'p_G_EXP','parser.py',221),
  ('B -> GREATER_OR_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',222),
  ('B -> LESS_OR_EQUAL meterOperador EXP','B',3,'p_G_EXP','parser.py',223),
  ('B -> GREATER_THAN meterOperador EXP','B',3,'p_G_EXP','parser.py',224),
  ('B -> LESS_THAN meterOperador EXP','B',3,'p_G_EXP','parser.py',225),
  ('B -> IS_EQUAL meterOperador EXP','B',3,'p_G_EXP','parser.py',226),
  ('B -> NOT_EQUAL meterOperador EXP','B',3,'p_G_EXP','parser.py',227),
  ('B -> empty','B',1,'p_G_EXP','parser.py',228),
  ('S_EXP -> C_STRING agregarConstString','S_EXP',2,'p_S_EXP','parser.py',233),
  ('S_EXP -> EXP','S_EXP',1,'p_S_EXP','parser.py',234),
  ('EXP -> TERMINO T popSumaResta','EXP',3,'p_EXP','parser.py',239),
  ('T -> PLUS meterOperador EXP','T',3,'p_EXP','parser.py',240),
  ('T -> MINUS meterOperador EXP','T',3,'p_EXP','parser.py',241),
  ('T -> empty','T',1,'p_EXP','parser.py',242),
  ('TERMINO -> FACTOR F2 popMultDiv','TERMINO',3,'p_TERMINO','parser.py',247),
  ('F2 -> DIVIDE meterOperador TERMINO','F2',3,'p_TERMINO','parser.py',248),
  ('F2 -> MULTIPLY meterOperador TERMINO','F2',3,'p_TERMINO','parser.py',249),
  ('F2 -> empty','F2',1,'p_TERMINO','parser.py',250),
  ('FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso','FACTOR',5,'p_FACTOR','parser.py',255),
  ('FACTOR -> C_INT agregarConstInt','FACTOR',2,'p_FACTOR','parser.py',256),
  ('FACTOR -> C_FLOAT agregarConstFloat','FACTOR',2,'p_FACTOR','parser.py',257),
  ('FACTOR -> C_CHAR agregarConstChar','FACTOR',2,'p_FACTOR','parser.py',258),
  ('FACTOR -> VARIABLE agregarPilaOp','FACTOR',2,'p_FACTOR','parser.py',259),
  ('FACTOR -> LLAMADAF','FACTOR',1,'p_FACTOR','parser.py',260),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',265),
  ('agregarConstInt -> <empty>','agregarConstInt',0,'p_agregarConstInt','parser.py',270),
  ('agregarConstFloat -> <empty>','agregarConstFloat',0,'p_agregarConstFloat','parser.py',286),
  ('agregarConstChar -> <empty>','agregarConstChar',0,'p_agregarConstChar','parser.py',302),
  ('agregarConstString -> <empty>','agregarConstString',0,'p_agregarConstString','parser.py',318),
  ('scopeGlobal -> <empty>','scopeGlobal',0,'p_scopeGlobal','parser.py',334),
  ('scopeLocal -> <empty>','scopeLocal',0,'p_scopeLocal','parser.py',339),
  ('scopeTemp -> <empty>','scopeTemp',0,'p_scopeTemp','parser.py',344),
  ('scopeConst -> <empty>','scopeConst',0,'p_scopeConst','parser.py',349),
  ('gotoIf -> <empty>','gotoIf',0,'p_gotoIf','parser.py',354),
  ('terminarGoto -> <empty>','terminarGoto',0,'p_terminaGoto','parser.py',370),
  ('agregarWhile -> <empty>','agregarWhile',0,'p_agregarWhile','parser.py',377),
  ('terminarWhile -> <empty>','terminarWhile',0,'p_terminaWhile','parser.py',382),
  ('gotoElse -> <empty>','gotoElse',0,'p_gotoElse','parser.py',391),
  ('meterFondoFalso -> <empty>','meterFondoFalso',0,'p_meterFondoFalso','parser.py',402),
  ('quitarFondoFalso -> <empty>','quitarFondoFalso',0,'p_quitarFondoFalso','parser.py',407),
  ('agregarPilaOp -> <empty>','agregarPilaOp',0,'p_agregarPilaOp','parser.py',416),
  ('popPrint -> <empty>','popPrint',0,'p_popPrint','parser.py',431),
  ('popRead -> <empty>','popRead',0,'p_popRead','parser.py',438),
  ('popReturn -> <empty>','popReturn',0,'p_popReturn','parser.py',445),
  ('popBool -> <empty>','popBool',0,'p_popBool','parser.py',452),
  ('popIgual -> <empty>','popIgual',0,'p_popIgual','parser.py',491),
  ('popMultDiv -> <empty>','popMultDiv',0,'p_popMultDiv','parser.py',530),
  ('popSumaResta -> <empty>','popSumaResta',0,'p_popSumaResta','parser.py',567),
  ('meterIgual -> <empty>','meterIgual',0,'p_meterIgual','parser.py',604),
  ('meterBool -> <empty>','meterBool',0,'p_meterBool','parser.py',609),
  ('meterMultDiv -> <empty>','meterMultDiv',0,'p_meterMultDiv','parser.py',614),
  ('meterSumaResta -> <empty>','meterSumaResta',0,'p_meterSumaResta','parser.py',619),
  ('meterOperador -> <empty>','meterOperador',0,'p_meterOperador','parser.py',624),
  ('crearFuncGlobal -> <empty>','crearFuncGlobal',0,'p_crearFuncGlobal','parser.py',630),
  ('crearFuncMain -> <empty>','crearFuncMain',0,'p_crearFuncMain','parser.py',637),
  ('agregarFunc -> <empty>','agregarFunc',0,'p_agregarFunc','parser.py',644),
  ('agregarVariables -> <empty>','agregarVariables',0,'p_agregarVariables','parser.py',661),
  ('printFunciones -> <empty>','printFunciones',0,'p_printFunciones','parser.py',672),
  ('printTodo -> <empty>','printTodo',0,'p_printTodo','parser.py',677),
  ('agregarVarLista -> <empty>','agregarVarLista',0,'p_agregarVarLista','parser.py',684),
  ('borrarListaVar -> <empty>','borrarListaVar',0,'p_borrarListaVar','parser.py',712),
]
