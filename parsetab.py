
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDErightEQUALSleftANDORAND CHAR COMMA C_CHAR C_FLOAT C_INT C_STRING DIVIDE DO ELSE EQUALS FLOAT FROM FUNC GREATER_OR_EQUAL GREATER_THAN IF INT IS_EQUAL LBRACKET LESS_OR_EQUAL LESS_THAN LPAREN LSBRACKET MAIN MINUS MULTIPLY NAME NOT_EQUAL OR PLUS PRINT PROGRAM RBRACKET READ RETURN RPAREN RSBRACKET SEMICOLON THEN TO VAR VOID WHILE\n    PROGRAMA : crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo\n    F : FUNCION F\n    | empty\n    \n    VARS : borrarListaVar VAR V1\n    \n    V1 : TIPO VARIABLEDer V2 SEMICOLON V3\n    \n    V2 : COMMA VARIABLEDer V2\n    | empty\n    \n    V3 : V1\n    | empty\n    \n    FUNCION : FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO \n    V4 : VARS\n    | empty\n    \n    PARAMS : TIPO NAME agregarVarLista P1\n    \n    P1 : P2\n    | empty\n    \n    P2 : COMMA PARAMS P1\n    \n    CUERPO : LBRACKET E RBRACKET\n    E : E1\n    | empty\n    E1 : ESTATUTO \n    | ESTATUTO E1\n    \n    TIPO : INT\n    | FLOAT\n    | CHAR\n    \n    TIPO_FUNCION : INT\n    | FLOAT\n    | CHAR\n    | VOID\n    \n    PRINCIPAL : MAIN LPAREN crearFuncMain RPAREN CUERPO\n    \n    VARIABLE : NAME agregarPilaOp E2\n    \n    E2 : LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso\n    | empty\n    \n    VARIABLEDer : NAME agregarVarLista agregarVariables borrarListaVar E2Der\n    \n    E2Der : LSBRACKET C_INT declararArray RSBRACKET\n    | empty\n    \n    ESTATUTO : ASIGNACION\n    | LLAMADA\n    | RETORNO\n    | LECTURA\n    | ESCRITURA\n    | CONDICION\n    | CICLO_W\n    | CICLO_F\n    \n    ASIGNACION : VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON\n    \n    LLAMADA : NAME LPAREN E1 RPAREN SEMICOLON\n    E1 : EXP \n    | EXP COMMA E1\n    \n    LLAMADAF : NAME LPAREN E1 RPAREN\n    \n    RETORNO : RETURN LPAREN EXP popReturn RPAREN SEMICOLON\n    \n    LECTURA : READ LPAREN V3 RPAREN SEMICOLON\n    V3 : VARIABLE popRead COMMA V3\n    | VARIABLE popRead\n    \n    ESCRITURA : PRINT LPAREN E3 RPAREN SEMICOLON\n    E3 : S_EXP popPrint\n    | S_EXP popPrint COMMA E3\n    \n    CONDICION : IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto\n    ELSE1 : ELSE gotoElse CUERPO\n    | empty\n    \n    CICLO_W : WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile\n    \n    CICLO_F : FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile\n    \n    H_EXP : T_EXP\n    | T_EXP OR H_EXP\n    \n    T_EXP : G_EXP\n    | G_EXP AND T_EXP\n    \n    G_EXP : EXP B popBool\n    B : GREATER_OR_EQUAL meterOperador G_EXP\n    | LESS_OR_EQUAL meterOperador G_EXP\n    | GREATER_THAN meterOperador G_EXP\n    | LESS_THAN meterOperador G_EXP\n    | IS_EQUAL meterOperador G_EXP\n    | NOT_EQUAL meterOperador G_EXP\n    | empty\n    \n    S_EXP : C_STRING agregarConstString\n    | EXP\n    \n    EXP : TERMINO popSumaResta T \n    T : PLUS meterOperador EXP\n    | MINUS meterOperador EXP\n    | empty\n    \n    TERMINO : FACTOR popMultDiv F2 \n    F2 : DIVIDE meterOperador TERMINO\n    | MULTIPLY meterOperador TERMINO\n    | empty\n    \n    FACTOR : LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso\n    | C_INT agregarConstInt\n    | C_FLOAT agregarConstFloat\n    | C_CHAR agregarConstChar\n    | VARIABLE\n    | LLAMADAF\n    \n    empty :\n     agregarLocalVar : agregarParamTable : guardarArreglo : verificarArreglo :  declararArray : agregarFrom : crearCompFrom : sumarFrom : agregarConstInt : agregarConstFloat : agregarConstChar : agregarConstString : scopeGlobal : scopeLocal : scopeTemp : scopeConst : gotoIf : terminarGoto :  agregarWhile : terminarWhile : gotoElse : meterFondoFalso : quitarFondoFalso :   agregarPilaOp : popPrint : popRead : popReturn : popBool : popIgual : popMultDiv : popSumaResta :  meterIgual :  meterBool :  meterMultDiv :  meterSumaResta :  meterOperador : crearFuncGlobal : crearFuncMain :  agregarFunc : agregarVariables : printFunciones : printTodo : agregarVarLista :  borrarListaVar : '
    
_lr_action_items = {'PROGRAM':([0,2,],[-126,3,]),'$end':([1,14,27,43,87,],[0,-131,-1,-29,-17,]),'NAME':([3,17,18,19,20,21,23,24,25,26,35,40,44,56,58,59,60,61,62,63,64,65,69,75,87,89,91,92,93,94,95,96,97,99,105,106,108,113,114,116,131,134,135,140,142,143,147,148,150,151,152,153,154,155,157,166,167,170,175,180,181,182,183,184,185,188,189,190,193,202,210,214,220,226,228,229,233,235,236,237,242,243,244,],[4,29,-25,-26,-27,-28,31,-22,-23,-24,31,50,68,68,-36,-37,-38,-39,-40,-41,-42,-43,-111,-108,-17,68,-125,68,123,123,50,123,123,50,138,50,-92,-125,-125,123,123,-125,-125,-111,123,123,123,123,-125,-125,-125,-125,-125,-125,68,123,123,123,-45,123,123,123,123,123,123,-50,-53,123,-125,-44,-49,123,-89,-107,-58,-109,-56,-59,123,-57,-97,-109,-60,]),'SEMICOLON':([4,30,31,34,36,37,41,42,51,52,66,76,77,78,79,80,83,84,86,90,100,101,102,103,107,109,112,115,122,123,133,136,144,145,146,159,160,171,172,173,174,176,187,194,195,209,219,225,232,],[5,-89,-132,40,-7,-129,-89,-133,-6,-89,-120,-119,-98,-99,-100,-88,-89,-33,-35,-89,-89,-84,-85,-86,-30,-32,-75,-78,-87,-113,-79,-82,-118,175,-112,188,189,-34,-76,-77,202,-83,210,-80,-81,-48,-93,-112,-31,]),'VAR':([5,6,8,196,],[-102,-133,13,-133,]),'FUNC':([7,10,22,40,46,47,48,49,50,82,83,87,106,107,109,139,219,225,231,232,],[12,12,-4,-89,-5,-8,-9,-115,-113,-52,-89,-17,-89,-30,-32,-51,-93,-112,-10,-31,]),'MAIN':([7,9,10,11,16,22,40,46,47,48,49,50,82,83,87,106,107,109,139,219,225,231,232,],[-89,15,-89,-3,-2,-4,-89,-5,-8,-9,-115,-113,-52,-89,-17,-89,-30,-32,-51,-93,-112,-10,-31,]),'INT':([12,13,39,40,45,81,95,106,200,],[18,24,-133,24,-103,24,24,24,24,]),'FLOAT':([12,13,39,40,45,81,95,106,200,],[19,25,-133,25,-103,25,25,25,25,]),'CHAR':([12,13,39,40,45,81,95,106,200,],[20,26,-133,26,-103,26,26,26,26,]),'VOID':([12,],[21,]),'LPAREN':([15,29,33,44,56,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,87,89,91,92,93,94,96,97,98,108,113,114,116,123,131,134,135,140,142,143,147,148,150,151,152,153,154,155,157,166,167,170,175,180,181,182,183,184,185,188,189,190,193,202,210,214,220,226,228,229,233,235,236,237,242,243,244,],[28,-128,39,69,69,-36,-37,-38,-39,-40,-41,-42,-43,92,-111,94,95,96,97,-108,-17,69,-125,69,69,69,69,69,131,-92,-125,-125,69,157,69,-125,-125,-111,69,69,69,69,-125,-125,-125,-125,-125,-125,69,69,69,69,-45,69,69,69,69,69,69,-50,-53,69,-125,-44,-49,69,-89,-107,-58,-109,-56,-59,69,-57,-97,-109,-60,]),'LBRACKET':([22,38,40,46,47,48,49,50,82,83,106,107,109,139,196,212,213,215,216,217,219,221,223,225,227,232,234,240,241,],[-4,44,-89,-5,-8,-9,-115,-113,-52,-89,-89,-30,-32,-51,-89,44,-106,-90,-11,-12,-93,44,44,-112,-110,-31,44,-106,44,]),'RPAREN':([28,32,40,46,47,48,49,50,56,57,58,59,60,61,62,63,64,65,66,67,68,76,77,78,79,80,82,83,87,88,90,95,100,101,102,103,104,106,107,109,111,112,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,136,137,138,139,145,146,149,156,158,161,162,164,168,169,172,173,175,176,177,178,179,186,188,189,194,195,197,198,199,202,203,204,205,206,207,208,209,210,211,218,219,220,224,225,226,228,229,232,233,235,237,242,243,244,],[-127,38,-89,-5,-8,-9,-115,-113,-20,-46,-36,-37,-38,-39,-40,-41,-42,-43,-120,-87,-113,-119,-98,-99,-100,-88,-52,-89,-17,-21,-89,-89,-89,-84,-85,-86,-91,-89,-30,-32,-47,-75,-78,145,146,-61,-63,-89,-87,-113,-116,159,160,-114,-101,-74,163,-79,-82,-129,-132,-51,-48,-112,-117,-72,187,-54,-73,192,196,-89,-76,-77,-45,-83,-62,-64,-65,209,-50,-53,-80,-81,-13,-14,-15,-44,-66,-67,-68,-69,-70,-71,-48,-49,-55,-89,-93,-89,-16,-112,-107,-58,-109,-31,-56,-59,-57,-97,-109,-60,]),'COMMA':([30,31,37,41,42,49,50,52,57,66,67,68,76,77,78,79,80,82,83,84,86,90,100,101,102,103,107,109,112,115,122,123,127,128,129,133,136,138,145,146,161,162,169,171,172,173,176,194,195,197,198,199,209,218,219,224,225,232,],[35,-132,-129,35,-133,-115,-113,-89,89,-120,-87,-113,-119,-98,-99,-100,-88,106,-89,-33,-35,-89,-89,-84,-85,-86,-30,-32,-75,-78,-87,-113,-114,-101,-74,-79,-82,-132,-48,-112,190,-73,200,-34,-76,-77,-83,-80,-81,-13,-14,-15,-48,200,-93,-16,-112,-31,]),'LSBRACKET':([31,37,42,50,52,68,83,123,],[-132,-129,-133,-113,85,-113,108,-113,]),'RBRACKET':([44,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,77,78,79,80,83,87,88,90,100,101,102,103,107,109,111,112,115,122,123,133,136,145,146,172,173,175,176,188,189,194,195,202,209,210,219,220,225,226,228,229,232,233,235,237,242,243,244,],[-89,87,-18,-19,-20,-46,-36,-37,-38,-39,-40,-41,-42,-43,-120,-87,-113,-119,-98,-99,-100,-88,-89,-17,-21,-89,-89,-84,-85,-86,-30,-32,-47,-75,-78,-87,-113,-79,-82,-48,-112,-76,-77,-45,-83,-50,-53,-80,-81,-44,-48,-49,-93,-89,-112,-107,-58,-109,-31,-56,-59,-57,-97,-109,-60,]),'RETURN':([44,56,58,59,60,61,62,63,64,65,87,89,92,157,175,188,189,202,210,220,226,228,229,233,235,237,242,243,244,],[70,70,-36,-37,-38,-39,-40,-41,-42,-43,-17,70,70,70,-45,-50,-53,-44,-49,-89,-107,-58,-109,-56,-59,-57,-97,-109,-60,]),'READ':([44,56,58,59,60,61,62,63,64,65,87,89,92,157,175,188,189,202,210,220,226,228,229,233,235,237,242,243,244,],[71,71,-36,-37,-38,-39,-40,-41,-42,-43,-17,71,71,71,-45,-50,-53,-44,-49,-89,-107,-58,-109,-56,-59,-57,-97,-109,-60,]),'PRINT':([44,56,58,59,60,61,62,63,64,65,87,89,92,157,175,188,189,202,210,220,226,228,229,233,235,237,242,243,244,],[72,72,-36,-37,-38,-39,-40,-41,-42,-43,-17,72,72,72,-45,-50,-53,-44,-49,-89,-107,-58,-109,-56,-59,-57,-97,-109,-60,]),'IF':([44,56,58,59,60,61,62,63,64,65,87,89,92,157,175,188,189,202,210,220,226,228,229,233,235,237,242,243,244,],[73,73,-36,-37,-38,-39,-40,-41,-42,-43,-17,73,73,73,-45,-50,-53,-44,-49,-89,-107,-58,-109,-56,-59,-57,-97,-109,-60,]),'WHILE':([44,56,58,59,60,61,62,63,64,65,87,89,92,157,175,188,189,202,210,220,226,228,229,233,235,237,242,243,244,],[74,74,-36,-37,-38,-39,-40,-41,-42,-43,-17,74,74,74,-45,-50,-53,-44,-49,-89,-107,-58,-109,-56,-59,-57,-97,-109,-60,]),'FROM':([44,56,58,59,60,61,62,63,64,65,87,89,92,157,175,188,189,202,210,220,226,228,229,233,235,237,242,243,244,],[75,75,-36,-37,-38,-39,-40,-41,-42,-43,-17,75,75,75,-45,-50,-53,-44,-49,-89,-107,-58,-109,-56,-59,-57,-97,-109,-60,]),'C_INT':([44,56,58,59,60,61,62,63,64,65,69,85,87,89,91,92,93,94,96,97,108,113,114,116,131,134,135,140,142,143,147,148,150,151,152,153,154,155,157,166,167,170,175,180,181,182,183,184,185,188,189,190,193,202,210,214,220,226,228,229,233,235,236,237,242,243,244,],[77,77,-36,-37,-38,-39,-40,-41,-42,-43,-111,110,-17,77,-125,77,77,77,77,77,-92,-125,-125,77,77,-125,-125,-111,77,77,77,77,-125,-125,-125,-125,-125,-125,77,77,77,77,-45,77,77,77,77,77,77,-50,-53,77,-125,-44,-49,77,-89,-107,-58,-109,-56,-59,77,-57,-97,-109,-60,]),'C_FLOAT':([44,56,58,59,60,61,62,63,64,65,69,87,89,91,92,93,94,96,97,108,113,114,116,131,134,135,140,142,143,147,148,150,151,152,153,154,155,157,166,167,170,175,180,181,182,183,184,185,188,189,190,193,202,210,214,220,226,228,229,233,235,236,237,242,243,244,],[78,78,-36,-37,-38,-39,-40,-41,-42,-43,-111,-17,78,-125,78,78,78,78,78,-92,-125,-125,78,78,-125,-125,-111,78,78,78,78,-125,-125,-125,-125,-125,-125,78,78,78,78,-45,78,78,78,78,78,78,-50,-53,78,-125,-44,-49,78,-89,-107,-58,-109,-56,-59,78,-57,-97,-109,-60,]),'C_CHAR':([44,56,58,59,60,61,62,63,64,65,69,87,89,91,92,93,94,96,97,108,113,114,116,131,134,135,140,142,143,147,148,150,151,152,153,154,155,157,166,167,170,175,180,181,182,183,184,185,188,189,190,193,202,210,214,220,226,228,229,233,235,236,237,242,243,244,],[79,79,-36,-37,-38,-39,-40,-41,-42,-43,-111,-17,79,-125,79,79,79,79,79,-92,-125,-125,79,79,-125,-125,-111,79,79,79,79,-125,-125,-125,-125,-125,-125,79,79,79,79,-45,79,79,79,79,79,79,-50,-53,79,-125,-44,-49,79,-89,-107,-58,-109,-56,-59,79,-57,-97,-109,-60,]),'EQUALS':([50,67,68,83,107,109,132,165,219,225,232,],[-113,91,-113,-89,-30,-32,-95,193,-93,-112,-31,]),'PLUS':([66,67,68,76,77,78,79,80,83,90,100,101,102,103,107,109,122,123,133,136,145,146,176,194,195,209,219,225,232,],[-120,-87,-113,-119,-98,-99,-100,-88,-89,113,-89,-84,-85,-86,-30,-32,-87,-113,-79,-82,-48,-112,-83,-80,-81,-48,-93,-112,-31,]),'MINUS':([66,67,68,76,77,78,79,80,83,90,100,101,102,103,107,109,122,123,133,136,145,146,176,194,195,209,219,225,232,],[-120,-87,-113,-119,-98,-99,-100,-88,-89,114,-89,-84,-85,-86,-30,-32,-87,-113,-79,-82,-48,-112,-83,-80,-81,-48,-93,-112,-31,]),'GREATER_OR_EQUAL':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,121,122,123,133,136,146,172,173,176,194,195,209,219,225,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,150,-87,-113,-79,-82,-112,-76,-77,-83,-80,-81,-48,-93,-112,-31,]),'LESS_OR_EQUAL':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,121,122,123,133,136,146,172,173,176,194,195,209,219,225,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,151,-87,-113,-79,-82,-112,-76,-77,-83,-80,-81,-48,-93,-112,-31,]),'GREATER_THAN':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,121,122,123,133,136,146,172,173,176,194,195,209,219,225,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,152,-87,-113,-79,-82,-112,-76,-77,-83,-80,-81,-48,-93,-112,-31,]),'LESS_THAN':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,121,122,123,133,136,146,172,173,176,194,195,209,219,225,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,153,-87,-113,-79,-82,-112,-76,-77,-83,-80,-81,-48,-93,-112,-31,]),'IS_EQUAL':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,121,122,123,133,136,146,172,173,176,194,195,209,219,225,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,154,-87,-113,-79,-82,-112,-76,-77,-83,-80,-81,-48,-93,-112,-31,]),'NOT_EQUAL':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,121,122,123,133,136,146,172,173,176,194,195,209,219,225,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,155,-87,-113,-79,-82,-112,-76,-77,-83,-80,-81,-48,-93,-112,-31,]),'AND':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,120,121,122,123,133,136,146,149,156,172,173,176,179,194,195,203,204,205,206,207,208,209,219,225,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,148,-89,-87,-113,-79,-82,-112,-117,-72,-76,-77,-83,-65,-80,-81,-66,-67,-68,-69,-70,-71,-48,-93,-112,-31,]),'OR':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,119,120,121,122,123,133,136,146,149,156,172,173,176,178,179,194,195,203,204,205,206,207,208,209,219,225,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,147,-63,-89,-87,-113,-79,-82,-112,-117,-72,-76,-77,-83,-64,-65,-80,-81,-66,-67,-68,-69,-70,-71,-48,-93,-112,-31,]),'RSBRACKET':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,110,112,115,122,123,133,136,141,146,172,173,176,194,195,201,209,219,225,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-94,-75,-78,-87,-113,-79,-82,171,-112,-76,-77,-83,-80,-81,219,-48,-93,-112,-31,]),'TO':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,122,123,133,136,146,172,173,176,194,195,209,219,222,225,230,232,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,-87,-113,-79,-82,-112,-76,-77,-83,-80,-81,-48,-93,-118,-112,236,-31,]),'DO':([66,76,77,78,79,80,83,90,100,101,102,103,107,109,112,115,122,123,133,136,146,172,173,176,192,194,195,209,219,225,232,238,239,],[-120,-119,-98,-99,-100,-88,-89,-89,-89,-84,-85,-86,-30,-32,-75,-78,-87,-113,-79,-82,-112,-76,-77,-83,213,-80,-81,-48,-93,-112,-31,-96,240,]),'DIVIDE':([67,68,76,77,78,79,80,83,100,101,102,103,107,109,122,123,145,146,176,209,219,225,232,],[-87,-113,-119,-98,-99,-100,-88,-89,134,-84,-85,-86,-30,-32,-87,-113,-48,-112,-83,-48,-93,-112,-31,]),'MULTIPLY':([67,68,76,77,78,79,80,83,100,101,102,103,107,109,122,123,145,146,176,209,219,225,232,],[-87,-113,-119,-98,-99,-100,-88,-89,135,-84,-85,-86,-30,-32,-87,-113,-48,-112,-83,-48,-93,-112,-31,]),'ELSE':([87,220,],[-17,227,]),'C_STRING':([96,190,],[128,128,]),'THEN':([163,191,],[-106,212,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'crearFuncGlobal':([0,],[2,]),'scopeGlobal':([5,],[6,]),'VARS':([6,196,],[7,216,]),'borrarListaVar':([6,39,42,196,],[8,45,52,8,]),'F':([7,10,],[9,16,]),'FUNCION':([7,10,],[10,10,]),'empty':([7,10,30,40,41,44,52,83,90,95,100,106,121,169,196,218,220,],[11,11,36,48,36,55,86,109,115,48,136,48,156,199,217,199,228,]),'PRINCIPAL':([9,],[14,]),'TIPO_FUNCION':([12,],[17,]),'V1':([13,40,95,106,],[22,47,47,47,]),'TIPO':([13,40,81,95,106,200,],[23,23,105,23,23,105,]),'printTodo':([14,],[27,]),'VARIABLEDer':([23,35,],[30,41,]),'crearFuncMain':([28,],[32,]),'agregarFunc':([29,],[33,]),'V2':([30,41,],[34,51,]),'agregarVarLista':([31,138,],[37,169,]),'agregarVariables':([37,137,],[42,168,]),'CUERPO':([38,212,221,223,234,241,],[43,220,229,231,237,242,]),'V3':([40,95,106,],[46,125,139,]),'VARIABLE':([40,44,56,89,92,93,94,95,96,97,99,106,116,131,142,143,147,148,157,166,167,170,180,181,182,183,184,185,190,214,236,],[49,67,67,67,67,122,122,49,122,122,132,49,122,122,122,122,122,122,67,122,122,122,122,122,122,122,122,122,122,122,122,]),'E':([44,],[53,]),'E1':([44,56,89,92,157,],[54,88,111,117,186,]),'ESTATUTO':([44,56,89,92,157,],[56,56,56,56,56,]),'EXP':([44,56,89,92,93,94,96,97,116,131,142,143,147,148,157,170,180,181,182,183,184,185,190,214,236,],[57,57,57,57,121,124,129,121,144,121,172,173,121,121,57,201,121,121,121,121,121,121,129,222,238,]),'ASIGNACION':([44,56,89,92,157,],[58,58,58,58,58,]),'LLAMADA':([44,56,89,92,157,],[59,59,59,59,59,]),'RETORNO':([44,56,89,92,157,],[60,60,60,60,60,]),'LECTURA':([44,56,89,92,157,],[61,61,61,61,61,]),'ESCRITURA':([44,56,89,92,157,],[62,62,62,62,62,]),'CONDICION':([44,56,89,92,157,],[63,63,63,63,63,]),'CICLO_W':([44,56,89,92,157,],[64,64,64,64,64,]),'CICLO_F':([44,56,89,92,157,],[65,65,65,65,65,]),'TERMINO':([44,56,89,92,93,94,96,97,116,131,142,143,147,148,157,166,167,170,180,181,182,183,184,185,190,214,236,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,194,195,66,66,66,66,66,66,66,66,66,66,]),'FACTOR':([44,56,89,92,93,94,96,97,116,131,142,143,147,148,157,166,167,170,180,181,182,183,184,185,190,214,236,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'LLAMADAF':([44,56,89,92,93,94,96,97,116,131,142,143,147,148,157,166,167,170,180,181,182,183,184,185,190,214,236,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'scopeLocal':([45,],[81,]),'popRead':([49,],[82,]),'agregarPilaOp':([50,68,123,],[83,83,83,]),'E2Der':([52,],[84,]),'popSumaResta':([66,],[90,]),'meterFondoFalso':([69,140,],[93,170,]),'agregarWhile':([74,75,],[98,99,]),'popMultDiv':([76,],[100,]),'agregarConstInt':([77,],[101,]),'agregarConstFloat':([78,],[102,]),'agregarConstChar':([79,],[103,]),'PARAMS':([81,200,],[104,218,]),'E2':([83,],[107,]),'T':([90,],[112,]),'meterOperador':([91,113,114,134,135,150,151,152,153,154,155,193,],[116,142,143,166,167,180,181,182,183,184,185,214,]),'H_EXP':([93,97,131,147,],[118,130,164,177,]),'T_EXP':([93,97,131,147,148,],[119,119,119,119,178,]),'G_EXP':([93,97,131,147,148,180,181,182,183,184,185,],[120,120,120,120,120,203,204,205,206,207,208,]),'E3':([96,190,],[126,211,]),'S_EXP':([96,190,],[127,127,]),'F2':([100,],[133,]),'agregarParamTable':([104,],[137,]),'guardarArreglo':([108,],[140,]),'declararArray':([110,],[141,]),'B':([121,],[149,]),'popReturn':([124,],[158,]),'popPrint':([127,],[161,]),'agregarConstString':([128,],[162,]),'agregarFrom':([132,],[165,]),'popIgual':([144,222,],[174,230,]),'quitarFondoFalso':([146,225,],[176,232,]),'popBool':([149,],[179,]),'gotoIf':([163,213,240,],[191,221,241,]),'P1':([169,218,],[197,224,]),'P2':([169,218,],[198,198,]),'V4':([196,],[215,]),'agregarLocalVar':([215,],[223,]),'verificarArreglo':([219,],[225,]),'ELSE1':([220,],[226,]),'terminarGoto':([226,],[233,]),'gotoElse':([227,],[234,]),'terminarWhile':([229,243,],[235,244,]),'crearCompFrom':([238,],[239,]),'sumarFrom':([242,],[243,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> crearFuncGlobal PROGRAM NAME SEMICOLON scopeGlobal VARS F PRINCIPAL printTodo','PROGRAMA',9,'p_PROGRAMA','parser.py',45),
  ('F -> FUNCION F','F',2,'p_PROGRAMA','parser.py',46),
  ('F -> empty','F',1,'p_PROGRAMA','parser.py',47),
  ('VARS -> borrarListaVar VAR V1','VARS',3,'p_VARS','parser.py',52),
  ('V1 -> TIPO VARIABLEDer V2 SEMICOLON V3','V1',5,'p_V1','parser.py',58),
  ('V2 -> COMMA VARIABLEDer V2','V2',3,'p_V2','parser.py',64),
  ('V2 -> empty','V2',1,'p_V2','parser.py',65),
  ('V3 -> V1','V3',1,'p_V3','parser.py',70),
  ('V3 -> empty','V3',1,'p_V3','parser.py',71),
  ('FUNCION -> FUNC TIPO_FUNCION NAME agregarFunc LPAREN borrarListaVar scopeLocal PARAMS agregarParamTable agregarVariables RPAREN V4 agregarLocalVar CUERPO','FUNCION',14,'p_FUNCION','parser.py',77),
  ('V4 -> VARS','V4',1,'p_FUNCION','parser.py',78),
  ('V4 -> empty','V4',1,'p_FUNCION','parser.py',79),
  ('PARAMS -> TIPO NAME agregarVarLista P1','PARAMS',4,'p_PARAMS','parser.py',84),
  ('P1 -> P2','P1',1,'p_P1','parser.py',89),
  ('P1 -> empty','P1',1,'p_P1','parser.py',90),
  ('P2 -> COMMA PARAMS P1','P2',3,'p_P2','parser.py',95),
  ('CUERPO -> LBRACKET E RBRACKET','CUERPO',3,'p_CUERPO','parser.py',100),
  ('E -> E1','E',1,'p_CUERPO','parser.py',101),
  ('E -> empty','E',1,'p_CUERPO','parser.py',102),
  ('E1 -> ESTATUTO','E1',1,'p_CUERPO','parser.py',103),
  ('E1 -> ESTATUTO E1','E1',2,'p_CUERPO','parser.py',104),
  ('TIPO -> INT','TIPO',1,'p_TIPO','parser.py',109),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','parser.py',110),
  ('TIPO -> CHAR','TIPO',1,'p_TIPO','parser.py',111),
  ('TIPO_FUNCION -> INT','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',118),
  ('TIPO_FUNCION -> FLOAT','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',119),
  ('TIPO_FUNCION -> CHAR','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',120),
  ('TIPO_FUNCION -> VOID','TIPO_FUNCION',1,'p_TIPO_FUNCION','parser.py',121),
  ('PRINCIPAL -> MAIN LPAREN crearFuncMain RPAREN CUERPO','PRINCIPAL',5,'p_PRINCIPAL','parser.py',128),
  ('VARIABLE -> NAME agregarPilaOp E2','VARIABLE',3,'p_VARIABLE','parser.py',133),
  ('E2 -> LSBRACKET guardarArreglo meterFondoFalso EXP RSBRACKET verificarArreglo quitarFondoFalso','E2',7,'p_E2','parser.py',139),
  ('E2 -> empty','E2',1,'p_E2','parser.py',140),
  ('VARIABLEDer -> NAME agregarVarLista agregarVariables borrarListaVar E2Der','VARIABLEDer',5,'p_VARIABLEDer','parser.py',145),
  ('E2Der -> LSBRACKET C_INT declararArray RSBRACKET','E2Der',4,'p_E2Der','parser.py',151),
  ('E2Der -> empty','E2Der',1,'p_E2Der','parser.py',152),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','parser.py',157),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','parser.py',158),
  ('ESTATUTO -> RETORNO','ESTATUTO',1,'p_ESTATUTO','parser.py',159),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','parser.py',160),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','parser.py',161),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_ESTATUTO','parser.py',162),
  ('ESTATUTO -> CICLO_W','ESTATUTO',1,'p_ESTATUTO','parser.py',163),
  ('ESTATUTO -> CICLO_F','ESTATUTO',1,'p_ESTATUTO','parser.py',164),
  ('ASIGNACION -> VARIABLE EQUALS meterOperador EXP popIgual SEMICOLON','ASIGNACION',6,'p_ASIGNACION','parser.py',169),
  ('LLAMADA -> NAME LPAREN E1 RPAREN SEMICOLON','LLAMADA',5,'p_LLAMADA','parser.py',174),
  ('E1 -> EXP','E1',1,'p_LLAMADA','parser.py',175),
  ('E1 -> EXP COMMA E1','E1',3,'p_LLAMADA','parser.py',176),
  ('LLAMADAF -> NAME LPAREN E1 RPAREN','LLAMADAF',4,'p_LLAMADAF','parser.py',181),
  ('RETORNO -> RETURN LPAREN EXP popReturn RPAREN SEMICOLON','RETORNO',6,'p_RETORNO','parser.py',186),
  ('LECTURA -> READ LPAREN V3 RPAREN SEMICOLON','LECTURA',5,'p_LECTURA','parser.py',191),
  ('V3 -> VARIABLE popRead COMMA V3','V3',4,'p_LECTURA','parser.py',192),
  ('V3 -> VARIABLE popRead','V3',2,'p_LECTURA','parser.py',193),
  ('ESCRITURA -> PRINT LPAREN E3 RPAREN SEMICOLON','ESCRITURA',5,'p_ESCRITURA','parser.py',198),
  ('E3 -> S_EXP popPrint','E3',2,'p_ESCRITURA','parser.py',199),
  ('E3 -> S_EXP popPrint COMMA E3','E3',4,'p_ESCRITURA','parser.py',200),
  ('CONDICION -> IF LPAREN H_EXP RPAREN gotoIf THEN CUERPO ELSE1 terminarGoto','CONDICION',9,'p_CONDICION','parser.py',205),
  ('ELSE1 -> ELSE gotoElse CUERPO','ELSE1',3,'p_CONDICION','parser.py',206),
  ('ELSE1 -> empty','ELSE1',1,'p_CONDICION','parser.py',207),
  ('CICLO_W -> WHILE agregarWhile LPAREN H_EXP RPAREN DO gotoIf CUERPO terminarWhile','CICLO_W',9,'p_CICLO_W','parser.py',212),
  ('CICLO_F -> FROM agregarWhile VARIABLE agregarFrom EQUALS meterOperador EXP popIgual TO EXP crearCompFrom DO gotoIf CUERPO sumarFrom terminarWhile','CICLO_F',16,'p_CICLO_F','parser.py',217),
  ('H_EXP -> T_EXP','H_EXP',1,'p_H_EXP','parser.py',222),
  ('H_EXP -> T_EXP OR H_EXP','H_EXP',3,'p_H_EXP','parser.py',223),
  ('T_EXP -> G_EXP','T_EXP',1,'p_T_EXP','parser.py',228),
  ('T_EXP -> G_EXP AND T_EXP','T_EXP',3,'p_T_EXP','parser.py',229),
  ('G_EXP -> EXP B popBool','G_EXP',3,'p_G_EXP','parser.py',234),
  ('B -> GREATER_OR_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',235),
  ('B -> LESS_OR_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',236),
  ('B -> GREATER_THAN meterOperador G_EXP','B',3,'p_G_EXP','parser.py',237),
  ('B -> LESS_THAN meterOperador G_EXP','B',3,'p_G_EXP','parser.py',238),
  ('B -> IS_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',239),
  ('B -> NOT_EQUAL meterOperador G_EXP','B',3,'p_G_EXP','parser.py',240),
  ('B -> empty','B',1,'p_G_EXP','parser.py',241),
  ('S_EXP -> C_STRING agregarConstString','S_EXP',2,'p_S_EXP','parser.py',246),
  ('S_EXP -> EXP','S_EXP',1,'p_S_EXP','parser.py',247),
  ('EXP -> TERMINO popSumaResta T','EXP',3,'p_EXP','parser.py',252),
  ('T -> PLUS meterOperador EXP','T',3,'p_EXP','parser.py',253),
  ('T -> MINUS meterOperador EXP','T',3,'p_EXP','parser.py',254),
  ('T -> empty','T',1,'p_EXP','parser.py',255),
  ('TERMINO -> FACTOR popMultDiv F2','TERMINO',3,'p_TERMINO','parser.py',260),
  ('F2 -> DIVIDE meterOperador TERMINO','F2',3,'p_TERMINO','parser.py',261),
  ('F2 -> MULTIPLY meterOperador TERMINO','F2',3,'p_TERMINO','parser.py',262),
  ('F2 -> empty','F2',1,'p_TERMINO','parser.py',263),
  ('FACTOR -> LPAREN meterFondoFalso H_EXP RPAREN quitarFondoFalso','FACTOR',5,'p_FACTOR','parser.py',268),
  ('FACTOR -> C_INT agregarConstInt','FACTOR',2,'p_FACTOR','parser.py',269),
  ('FACTOR -> C_FLOAT agregarConstFloat','FACTOR',2,'p_FACTOR','parser.py',270),
  ('FACTOR -> C_CHAR agregarConstChar','FACTOR',2,'p_FACTOR','parser.py',271),
  ('FACTOR -> VARIABLE','FACTOR',1,'p_FACTOR','parser.py',272),
  ('FACTOR -> LLAMADAF','FACTOR',1,'p_FACTOR','parser.py',273),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',278),
  ('agregarLocalVar -> <empty>','agregarLocalVar',0,'p_agregarLocalVar','parser.py',283),
  ('agregarParamTable -> <empty>','agregarParamTable',0,'p_agregarParamTable','parser.py',289),
  ('guardarArreglo -> <empty>','guardarArreglo',0,'p_guardarArreglo','parser.py',296),
  ('verificarArreglo -> <empty>','verificarArreglo',0,'p_verificarArreglo','parser.py',314),
  ('declararArray -> <empty>','declararArray',0,'p_declararArray','parser.py',336),
  ('agregarFrom -> <empty>','agregarFrom',0,'p_agregarFrom','parser.py',365),
  ('crearCompFrom -> <empty>','crearCompFrom',0,'p_crearCompFrom','parser.py',375),
  ('sumarFrom -> <empty>','sumarFrom',0,'p_sumarFrom','parser.py',403),
  ('agregarConstInt -> <empty>','agregarConstInt',0,'p_agregarConstInt','parser.py',437),
  ('agregarConstFloat -> <empty>','agregarConstFloat',0,'p_agregarConstFloat','parser.py',453),
  ('agregarConstChar -> <empty>','agregarConstChar',0,'p_agregarConstChar','parser.py',469),
  ('agregarConstString -> <empty>','agregarConstString',0,'p_agregarConstString','parser.py',485),
  ('scopeGlobal -> <empty>','scopeGlobal',0,'p_scopeGlobal','parser.py',501),
  ('scopeLocal -> <empty>','scopeLocal',0,'p_scopeLocal','parser.py',506),
  ('scopeTemp -> <empty>','scopeTemp',0,'p_scopeTemp','parser.py',511),
  ('scopeConst -> <empty>','scopeConst',0,'p_scopeConst','parser.py',516),
  ('gotoIf -> <empty>','gotoIf',0,'p_gotoIf','parser.py',521),
  ('terminarGoto -> <empty>','terminarGoto',0,'p_terminaGoto','parser.py',537),
  ('agregarWhile -> <empty>','agregarWhile',0,'p_agregarWhile','parser.py',544),
  ('terminarWhile -> <empty>','terminarWhile',0,'p_terminaWhile','parser.py',549),
  ('gotoElse -> <empty>','gotoElse',0,'p_gotoElse','parser.py',558),
  ('meterFondoFalso -> <empty>','meterFondoFalso',0,'p_meterFondoFalso','parser.py',569),
  ('quitarFondoFalso -> <empty>','quitarFondoFalso',0,'p_quitarFondoFalso','parser.py',574),
  ('agregarPilaOp -> <empty>','agregarPilaOp',0,'p_agregarPilaOp','parser.py',583),
  ('popPrint -> <empty>','popPrint',0,'p_popPrint','parser.py',598),
  ('popRead -> <empty>','popRead',0,'p_popRead','parser.py',605),
  ('popReturn -> <empty>','popReturn',0,'p_popReturn','parser.py',612),
  ('popBool -> <empty>','popBool',0,'p_popBool','parser.py',619),
  ('popIgual -> <empty>','popIgual',0,'p_popIgual','parser.py',657),
  ('popMultDiv -> <empty>','popMultDiv',0,'p_popMultDiv','parser.py',695),
  ('popSumaResta -> <empty>','popSumaResta',0,'p_popSumaResta','parser.py',732),
  ('meterIgual -> <empty>','meterIgual',0,'p_meterIgual','parser.py',769),
  ('meterBool -> <empty>','meterBool',0,'p_meterBool','parser.py',774),
  ('meterMultDiv -> <empty>','meterMultDiv',0,'p_meterMultDiv','parser.py',779),
  ('meterSumaResta -> <empty>','meterSumaResta',0,'p_meterSumaResta','parser.py',784),
  ('meterOperador -> <empty>','meterOperador',0,'p_meterOperador','parser.py',789),
  ('crearFuncGlobal -> <empty>','crearFuncGlobal',0,'p_crearFuncGlobal','parser.py',795),
  ('crearFuncMain -> <empty>','crearFuncMain',0,'p_crearFuncMain','parser.py',802),
  ('agregarFunc -> <empty>','agregarFunc',0,'p_agregarFunc','parser.py',809),
  ('agregarVariables -> <empty>','agregarVariables',0,'p_agregarVariables','parser.py',826),
  ('printFunciones -> <empty>','printFunciones',0,'p_printFunciones','parser.py',837),
  ('printTodo -> <empty>','printTodo',0,'p_printTodo','parser.py',842),
  ('agregarVarLista -> <empty>','agregarVarLista',0,'p_agregarVarLista','parser.py',851),
  ('borrarListaVar -> <empty>','borrarListaVar',0,'p_borrarListaVar','parser.py',883),
]
